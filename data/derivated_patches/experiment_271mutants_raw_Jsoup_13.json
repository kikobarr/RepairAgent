
{
    "file_name": "org/jsoup/nodes/Node.java",
    "insertions": [
        {
            "line_number": 107,
            "new_lines": [
                "        if (attributeKey == null || attributeKey.isEmpty()) return false;"
            ]
        }
    ],
    "deletions": [],
    "modifications": []
}
    
    
{
"file_name": "org/jsoup/nodes/Node.java",
"insertions": [
    {
        "line_number": 107,
        "new_lines": [
            "        if (attributeKey != null) return attributes.hasKey(attributeKey);"
        ]
    }
],
"deletions": [],
"modifications": []
}
    
{ "mutations": [
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (attributeKey == null) return false; // Mutation 1: Added comment"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (attributeKey == null || attributeKey.isEmpty()) return false; // Mutation 2: Modified condition"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (attributeKey != null) return attributes.hasKey(attributeKey); // Mutation 3: Changed condition"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (attributeKey.isEmpty()) return false; // Mutation 4: Changed condition"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (!attributeKey.isEmpty()) return attributes.hasKey(attributeKey); // Mutation 5: Changed condition"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (attributeKey != null && !attributeKey.isEmpty()) return attributes.hasKey(attributeKey); // Mutation 6: Combined conditions"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 106, "new_lines": ["        if (attributeKey == null) return true; // Mutation 7: Changed return value to true"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (attributeKey != null && attributeKey.length() > 5) return attributes.hasKey(attributeKey); // Mutation 8: Added length check to attributeKey"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (attributeKey != null && attributeKey.contains(\"http\")) return attributes.hasKey(attributeKey); // Mutation 9: Added contains check to attributeKey"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (attributeKey == null || attributeKey.length() < 3) return false; // Mutation 10: Added length check to attributeKey"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (attributeKey != null && attributeKey.equals(\"class\")) return attributes.hasKey(attributeKey); // Mutation 11: Changed condition to check for specific attribute key"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (attributeKey.equals(\"id\")) return false; // Mutation 12: Changed condition to check for specific attribute key"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (!attributeKey.equals(\"id\")) return attributes.hasKey(attributeKey); // Mutation 13: Changed condition to check for specific attribute key"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (attributeKey != null && !attributeKey.equals(\"class\")) return attributes.hasKey(attributeKey); // Mutation 14: Changed condition to check for specific attribute key"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (!attributeKey.equals(\"href\") || attributeKey.length() > 50) return false; // Mutation 15: Combined conditions with OR operation"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (attributeKey == null || attributeKey.equals(\"src\") && !attributeKey.isEmpty()) return attributes.hasKey(attributeKey); // Mutation 16: Combined conditions with AND and OR operations"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (attributeKey != null && !attributeKey.equals(\"rel\") && attributeKey.length() < 10) return attributes.hasKey(attributeKey); // Mutation 17: Combined conditions with NOT and AND operations"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (attributeKey == null || attributeKey.contains(\"data-\") || attributeKey.startsWith(\"aria-\")) return false; // Mutation 18: Changed condition to check for attribute prefixes"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        boolean hasAttribute = attributeKey != null ? attributes.hasKey(attributeKey) : false; return hasAttribute; // Mutation 19: Ternary operator usage to check attributeKey"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 106, "new_lines": ["        if (attributeKey == null || attributeKey.equalsIgnoreCase(\"href\")) return false; // Mutation 20: Changed condition to case-insensitive check for specific attribute key"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (attributeKey != null && !attributeKey.equalsIgnoreCase(\"src\")) return attributes.hasKey(attributeKey); // Mutation 21: Changed condition to case-insensitive check for specific attribute key"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (attributeKey == null || attributeKey.matches(\"[0-9]+\")) return false; // Mutation 22: Changed condition to check if attributeKey contains only digits"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (!attributeKey.matches(\"[a-zA-Z]+\")) return false; // Mutation 23: Changed condition to check if attributeKey contains only alphabetic characters"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (attributeKey != null && !attributeKey.matches(\"[a-zA-Z0-9_]+\")) return attributes.hasKey(attributeKey); // Mutation 24: Changed condition to check if attributeKey contains only alphanumeric characters and underscore"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (!attributeKey.matches(\"\\w+\")) return false; // Mutation 25: Changed condition to check if attributeKey contains word characters (alphanumeric + underscore)"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (attributeKey == null || attributeKey.matches(\"\\W+\")) return false; // Mutation 26: Changed condition to check if attributeKey contains non-word characters"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (!attributeKey.matches(\"[a-z]+\")) return false; // Mutation 27: Changed condition to check if attributeKey contains only lowercase alphabetic characters"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (attributeKey != null && attributeKey.matches(\"[A-Z]+\")) return attributes.hasKey(attributeKey); // Mutation 28: Changed condition to check if attributeKey contains only uppercase alphabetic characters"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (!attributeKey.matches(\"[a-zA-Z]+\") && !attributeKey.matches(\"[0-9]+\")) return false; // Mutation 29: Combined conditions to check for alphanumeric characters and digits in attributeKey"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/Node.java", "insertions": [{"line_number": 107, "new_lines": ["        if (attributeKey == null || attributeKey.matches(\"[^a-zA-Z0-9]+\")) return false; // Mutation 30: Changed condition to check if attributeKey contains characters other than alphanumeric"]}], "deletions": [], "modifications": []}
]}
