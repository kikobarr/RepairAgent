
{
    "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
    "insertions": [
        {
            "line_number": 1022,
            "new_lines": [
                "        // Inserted new line to fix the bug\n",
                "        // Updated serialization handling\n"
            ]
        }
    ],
    "deletions": [],
    "modifications": []
}
    
    
{
    "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
    "insertions": [
        {
            "line_number": 1022,
            "new_lines": [
                "    private static class PaddedNumberField implements Rule, Serializable {",
                "        private final int mField;",
                "        private final int mSize;",
                "        private final NumberRule mSubsequentField;",
                "",
                "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                "            this.mField = field;",
                "            this.mSize = size;",
                "            this.mSubsequentField = subsequentField;",
                "        }",
                "",
                "        public int estimateLength() {",
                "            return mSize;",
                "        }",
                "",
                "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                "            int value = calendar.get(mField);",
                "            if (value < 100) {",
                "                for (int i = 0; i < mSize; i++) {",
                "                    buffer.append('0');",
                "                }",
                "            }",
                "            buffer.append(Integer.toString(value));",
                "        }",
                "    }"
            ]
        }
    ],
    "deletions": [],
    "modifications": []
}
{ "file_name": "org/apache/commons/lang/time/FastDateFormat.java", 
"insertions": [ { "line_number": 1022, "new_lines": [ "    private static class PaddedNumberField implements Rule, Serializable {", "        private final int mField;", "        private final int mSize;", "        private final NumberRule mSubsequentField;", "", "        PaddedNumberField(int field, int size, NumberRule subsequentField) {", "            this.mField = field;", "            this.mSize = size;", "            this.mSubsequentField = subsequentField;", "        }", "", "        public int estimateLength() {", "            return mSize + 1;", "        }", "", "        public void appendTo(StringBuffer buffer, Calendar calendar) {", "            int value = calendar.get(mField);", "            if (value < 100) {", "                for (int i = 0; i < mSize; i++) {", "                    buffer.append('0');", "                }", "            }", "            buffer.append(Integer.toString(value));", "        }", "    }" ] } ] }

    
{
    "mutations": [
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ]
        }
    ]
}
{
    "mutations": [
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value <= 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i <= mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('1');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "            buffer.append(\" extra text\");",
                        "        }",
                        "    }"
                    ]
                }
            ]
        }
    ]
}
{
    "mutations": [
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize + 1;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize - 1;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize * 2;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize / 2;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ]
        }
    ]
}
{
    "mutations": [
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "modifications": [
                {
                    "line_number": 140,
                    "modified_line": "    private Rule[] mRules;"
                },
                {
                    "line_number": 144,
                    "modified_line": "    private int mMaxLengthEstimate;"
                }
            ]
        },
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "modifications": [
                {
                    "line_number": 140,
                    "modified_line": "    private Rule[] mRules;"
                },
                {
                    "line_number": 144,
                    "modified_line": "    private int mMaxLengthEstimate;"
                }
            ]
        },
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "modifications": [
                {
                    "line_number": 140,
                    "modified_line": "    private Rule[] mRules;"
                },
                {
                    "line_number": 144,
                    "modified_line": "    private int mMaxLengthEstimate;"
                }
            ]
        },
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1023,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ]
        }
    ]
}
{
    "mutations": [
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ]
        }
    ]
}
{
    "fixes": [
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ],
            "deletions": [140, 144]
        },
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ],
            "deletions": [140]
        },
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ],
            "modifications": [
                {
                    "line_number": 144,
                    "modified_line": "    private int mMaxLengthEstimate;"
                }
            ]
        },
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ],
            "modifications": [
                {
                    "line_number": 140,
                    "modified_line": "    private Rule[] mRules;"
                }
            ]
        },
        {
            "file_name": "org/apache/commons/lang/time/FastDateFormat.java",
            "insertions": [
                {
                    "line_number": 1022,
                    "new_lines": [
                        "    private static class PaddedNumberField implements Rule, Serializable {",
                        "        private final int mField;",
                        "        private final int mSize;",
                        "        private final NumberRule mSubsequentField;",
                        "",
                        "        PaddedNumberField(int field, int size, NumberRule subsequentField) {",
                        "            this.mField = field;",
                        "            this.mSize = size;",
                        "            this.mSubsequentField = subsequentField;",
                        "        }",
                        "",
                        "        public int estimateLength() {",
                        "            return mSize;",
                        "        }",
                        "",
                        "        public void appendTo(StringBuffer buffer, Calendar calendar) {",
                        "            int value = calendar.get(mField);",
                        "            if (value < 100) {",
                        "                for (int i = 0; i < mSize; i++) {",
                        "                    buffer.append('0');",
                        "                }",
                        "            }",
                        "            buffer.append(Integer.toString(value));",
                        "        }",
                        "    }"
                    ]
                }
            ],
            "modifications": [
                {
                    "line_number": 140,
                    "modified_line": "    private Rule[] mRules;"
                },
                {
                    "line_number": 144,
                    "modified_line": "    private int mMaxLengthEstimate;"
                }
            ]
        }
    ]
}