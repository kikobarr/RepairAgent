[
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 3: {",
"char ch0 = str.charAt(0);",
"char ch1 = str.charAt(1);",
"return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');"
]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 4: {",
"char ch = str.charAt(0);",
"return (ch == 't');"
]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 3: {",
"char ch0 = str.charAt(0);",
"char ch1 = str.charAt(1);",
"return (ch0 == 'y' || ch0 == 'Y') && (ch1 == 'e' || ch1 == 'E');"
]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 4: {",
"char ch = str.charAt(0);",
"return (ch == 'f' || ch == 'F');"
]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 3: {",
"char ch0 = str.charAt(0);",
"char ch1 = str.charAt(1);",
"char ch2 = str.charAt(2);",
"return (ch0 == 't' || ch0 == 'T') && (ch1 == 'r' || ch1 == 'R') && (ch2 == 'u' || ch2 == 'U');"
]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 3: {",
"char ch0 = str.charAt(0);",
"char ch1 = str.charAt(1);",
"char ch2 = str.charAt(2);",
"return (ch0 == 't' || ch0 == 'T') && (ch1 == 'r' || ch1 == 'R') && (ch2 == 'u' || ch2 == 'U');"
]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 3: {",
"char ch0 = str.charAt(0);",
"char ch1 = str.charAt(1);",
"return (ch0 == 't' || ch0 == 'T') && (ch1 == 'r' || ch1 == 'R');"
]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 2: {",
"char ch0 = str.charAt(0);",
"char ch1 = str.charAt(1);",
"return (ch0 == 'n' || ch0 == 'N') && (ch1 == 'o' || ch1 == 'O');"
]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 2: {",
"char ch = str.charAt(0);",
"return (ch == 'f' || ch == 'F');"
]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 2: {",
"char ch = str.charAt(0);",
"return (ch == 'y' || ch == 'Y');"
]}], "deletions": [], "modifications": []}
][
    {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["case 2: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["case 5: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["case 6: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["case 2: {", " char ch = str.charAt(0);", " if (ch == 't') {", " return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", " }", " if (ch == 'T') {", " return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", " }", "}"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["case 4: {", " char ch = str.charAt(0);", " if (ch == 't') {", " return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", " }", " if (ch == 'T') {", " return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", " }", "}"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["case 5: {", " char ch = str.charAt(0);", " if (ch == 't') {", " return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", " }", " if (ch == 'T') {", " return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", " }", "}"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["case 4: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["case 3: {", " char ch = str.charAt(0);", " if (ch == 't') {", " return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", " }", " if (ch == 'T') {", " return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", " }", "}"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["case 4: {", " char ch = str.charAt(0);", " if (ch == 't') {", " return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", " }", " if (ch == 'T') {", " return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", " }", "}"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["case 3: {", " char ch = str.charAt(0);", " if (ch == 't') {", " return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", " }", " if (ch == 'T') {", " return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", " }", "}"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["case 5: {", " char ch = str.charAt(0);", " if (ch == 't') {", " return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", " }", " if (ch == 'T') {", " return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", " }", "}"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["case 6: {", " char ch = str.charAt(0);", " if (ch == 't') {", " return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", " }", " if (ch == 'T') {", " return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", " }", "}"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["case 4: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", " }", "}"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", " }", "}"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["case 5: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", " }", "}"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["case 6: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", " }", "}"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["case 4: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", " }", "}"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["case 3: {", " char ch = str.charAt(0);", " if (ch == 't') {", " return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", " }", " if (ch == 'T') {[
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["            case 3: {", "                char ch = str.charAt(0);", "                if (ch == 'y') {", "                    return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                }", "                if (ch == 'Y') {", "                    return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                }", "            }"]}]}
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["            case 2: {", "                char ch = str.charAt(0);", "                if (ch == 'y') {", "                    return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                }", "                if (ch == 'Y') {", "                    return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                }", "            }"]}]}
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["            case 5: {", "                char ch = str.charAt(0);", "                if (ch == 'y') {", "                    return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                }", "                if (ch == 'Y') {", "                    return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                }", "            }"]}]}
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["            case 6: {", "                char ch = str.charAt(0);", "                if (ch == 'y') {", "                    return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                }", "                if (ch == 'Y') {", "                    return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                }", "            }"]}]}
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["            case 1: {", "                char ch = str.charAt(0);", "                if (ch == 'y') {", "                    return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                }", "                if (ch == 'Y') {", "                    return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                }", "            }"]}]}
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["            case 4: {", "                char ch = str.charAt(0);", "                if (ch == 'y') {", "                    return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                }", "                if (ch == 'Y') {", "                    return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                }", "            }"]}]}
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["            case 5: {", "                char ch = str.charAt(0);", "                if (ch == 't') {", "                    return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", "                }", "                if (ch == 'T') {", "                    return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", "                }", "            }"]}]}
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["            case 4: {", "                char ch = str.charAt(0);", "                if (ch == 't') {", "                    return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", "                }", "                if (ch == 'T') {", "                    return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", "                }", "            }"]}]}
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["            case 2: {", "                char ch = str.charAt(0);", "                if (ch == 't') {", "                    return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", "                }", "                if (ch == 'T') {", "                    return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", "                }", "            }"]}]}
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["            case 5: {", "                char ch = str.charAt(0);", "                if (ch == 't') {", "                    return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", "                }", "                if (ch == 'T') {", "                    return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", "                }", "            }"]}]}
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["            case 1: {", "                char ch = str.charAt(0);", "                if (ch == 't') {", "                    return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", "                }", "                if (ch == 'T') {", "                    return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", "                }", "            }"]}]}
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["            case 5: {", "                char ch = str.charAt(0);", "                if (ch == 'o') {", "                    return (str.charAt(1) == 'f' || str.charAt(1) == 'F') && (str.charAt(2) == 'f' || str.charAt(2) == 'F');", "                }", "                if (ch == 'O') {", "                    return (str.charAt(1) == 'F' || str.charAt(1) == 'f') && (str.charAt(2) == 'F' || str.charAt(2) == 'f');", "                }", "            }"]}]}
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["            case 4: {", "                char ch = str.charAt(0);", "                if (ch == 'o') {", "                    return (str.charAt(1) == 'f' || str.charAt(1) == 'F') && (str.charAt(2) == 'f' || str.charAt(2) == 'F');", "                }", "                if (ch == 'O') {", "                    return (str.charAt(1) == 'F' || str.charAt(1) == 'f') && (str.charAt(2) == 'F' || str.charAt(2) == 'f');", "                }", "            }"]}]}
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["            case 3: {", "                char ch = str.charAt(0);", "                if (ch == 'o') {", "                    return (str.charAt(1) == 'f' || str.charAt(1) == 'F') && (str.charAt(2) == 'f' || str.charAt(2) == 'F');", "                }", "                if (ch == 'O') {", "                    return (str.charAt(1) == 'F' || str.charAt(1) == 'f') && (str.charAt(2) == 'F' || str.charAt(2) == 'f');", "                }", "            }"]}]}
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["            case 2: {", "                char ch = str.charAt(0);", "                if (ch == 'o') {", "                    return (str.charAt(1) == 'f' || str.charAt(1) == 'F') && (str.charAt(2) == 'f' || str.charAt(2) == 'F');", "                }", "                if (ch == 'O') {", "                    return (str.charAt(1) == 'F' || str.charAt(1) == 'f') && (str.charAt(2) == 'F' || str.charAt(2) == 'f');", "                }", "            }"]}]}
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["            case 6: {", "                char ch = str.charAt(0);", "                if (ch == 'o') {", "                    return (str.charAt(1) == 'f' || str.charAt(1) == 'F') && (str.charAt(2) == 'f' || str.charAt(2) == 'F');", "                }", "                if (ch == 'O') {", "                    return (str.charAt(1) == 'F' || str.charAt(1) == 'f') && (str.charAt(2) == 'F' || str.charAt(2) == 'f');", "                }", "            }"]}]}
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["            case 3: {", "                char ch = str.charAt(0);", "                if (ch == 'o') {", "                    return (str.charAt(1) == 'f' || str.charAt(1) == 'F') && (str.charAt(2) == 'f' || str.charAt(2) == 'F');", "                }", "                if (ch == 'O') {", "                    return (str.charAt(1) == 'F' || str.charAt(1) == 'f') && (str.charAt(2) == 'F' || str.charAt(2) == 'f');", "                }", "            }"]}]}
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["            case 5: {", "                char ch = str.charAt(0);", "                if (ch == 'o') {", "                    return (str.charAt(1) == 'f' || str.charAt(1) == 'F') && (str.charAt(2) == 'f' || str.charAt(2) == 'F');", "                }", "                if (ch == 'O') {", "                    return (str.charAt(1) == 'F' || str.charAt(1) == 'f') && (str.charAt(2) == 'F' || str.charAt(2) == 'f');", "                }", "            }"]}]}
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["            case 4: {", "                char ch = str.charAt(0);", "                if (ch == 'o') {", "                    return (str.charAt(1) == 'f' || str.charAt(1) == 'F') && (str.charAt(2) == 'f' || str.charAt(2) == 'F');", "                }", "                if (ch == 'O') {", "                    return (str.charAt(1) == 'F' || str.charAt(1) == 'f') && (str.charAt(2) == 'F' || str.charAt(2) == 'f');", "                }", "            }"]}]}
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["            case 3: {", "                char ch = str.charAt(0);", "                if (ch == 'o') {", "                    return (str.charAt(1) == 'f' || str.charAt(1) == 'F') && (str.charAt(2) == 'f' || str.charAt(2) == 'F');", "                }", "                if (ch == 'O') {", "                    return (str.charAt(1) == 'F' || str.charAt(1) == 'f') && (str.charAt(2) == 'F' || str.charAt(2) == 'f');", "                }", "            }"]}]}
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines":["            case 6: {", "                char ch = str.charAt(0);", "                if (ch == 'o') {", "                    return (str.charAt(1) == 'f' || str.charAt(1) == 'F') && (str.charAt(2) == 'f' || str.charAt(2) == 'F');", "                }", "                if (ch == 'O') {", "                    return (str.charAt(1) == 'F[
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 3: {",
" char ch = str.charAt(0);",
" if (ch == 'y') {",
" return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');",
" }",
" if (ch == 'Y') {",
" return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');",
" }",
"}"
]}],
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 3: {",
" char ch = str.charAt(0);",
" if (ch == 't') {",
" return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');",
" }",
" if (ch == 'T') {",
" return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');",
" }",
"}"
]}],
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 3: {",
" char ch = str.charAt(0);",
" if (ch == 'f') {",
" return (str.charAt(1) == 'a' || str.charAt(1) == 'A') && (str.charAt(2) == 'l' || str.charAt(2) == 'L') && (str.charAt(3) == 's' || str.charAt(3) == 'S') && (str.charAt(4) == 'e' || str.charAt(4) == 'E');",
" }",
" if (ch == 'F') {",
" return (str.charAt(1) == 'A' || str.charAt(1) == 'a') && (str.charAt(2) == 'L' || str.charAt(2) == 'l') && (str.charAt(3) == 'S' || str.charAt(3) == 's') && (str.charAt(4) == 'E' || str.charAt(4) == 'e');",
" }",
"}"
]}],
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 3: {",
" char ch = str.charAt(0);",
" if (ch == 'o') {",
" return (str.charAt(1) == 'f' || str.charAt(1) == 'F') && (str.charAt(2) == 'f' || str.charAt(2) == 'F');",
" }",
" if (ch == 'O') {",
" return (str.charAt(1) == 'F' || str.charAt(1) == 'f') && (str.charAt(2) == 'F' || str.charAt(2) == 'f');",
" }",
"}"
]}],
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 3: {",
" char ch = str.charAt(0);",
" if (ch == 'n') {",
" return (str.charAt(1) == 'o' || str.charAt(1) == 'O') && (str.charAt(2) == 'n' || str.charAt(2) == 'N');",
" }",
" if (ch == 'N') {",
" return (str.charAt(1) == 'O' || str.charAt(1) == 'o') && (str.charAt(2) == 'N' || str.charAt(2) == 'n');",
" }",
"}"
]}]
][
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 3: {\n",
" char ch = str.charAt(0);\n",
" if (ch == 'y') {\n",
" return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n",
" }\n",
" if (ch == 'Y') {\n",
" return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n",
" }\n",
"}\n"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 3: {\n",
" char ch = str.charAt(0);\n",
" if (ch == 'y' && str.length() >= 3) {\n",
" return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n",
" }\n",
" if (ch == 'Y') {\n",
" return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n",
" }\n",
"}\n"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 3: {\n",
" char ch = str.charAt(0);\n",
" if (ch == 'y') {\n",
" return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n",
" }\n",
" if (ch == 'Y' && str.length() >= 3) {\n",
" return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n",
" }\n",
"}\n"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 3: {\n",
" char ch = str.charAt(0);\n",
" if (ch == 'y' && str.length() >= 4) {\n",
" return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n",
" }\n",
" if (ch == 'Y') {\n",
" return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n",
" }\n",
"}\n"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 3: {\n",
" char ch = str.charAt(0);\n",
" if (ch == 'y') {\n",
" return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n",
" }\n",
" if (ch == 'Y') {\n",
" return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n",
" }\n",
"}\n"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 3: {\n",
" char ch = str.charAt(0);\n",
" if (ch == 'y' && str.length() >= 4) {\n",
" return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n",
" }\n",
" if (ch == 'Y' && str.length() >= 4) {\n",
" return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n",
" }\n",
"}\n"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 3: {\n",
" char ch = str.charAt(0);\n",
" if (ch == 'y' && str.length() >= 3) {\n",
" return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n",
" }\n",
" if (ch == 'Y' && str.length() >= 3) {\n",
" return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n",
" }\n",
"}\n"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 3: {\n",
" char ch = str.charAt(0);\n",
" if (ch == 'y') {\n",
" return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n",
" }\n",
" if (ch == 'Y') {\n",
" return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n",
" }\n",
"}\n"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 2: {\n",
" char ch = str.charAt(0);\n",
" if (ch == 'y') {\n",
" return (str.charAt(1) == 'e' || str.charAt(1) == 'E');\n",
" }\n",
" if (ch == 'Y') {\n",
" return (str.charAt(1) == 'E' || str.charAt(1) == 'e');\n",
" }\n",
"}\n"]}], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 4: {\n",
" char ch = str.charAt(0);\n",
" if (ch == 'y') {\n",
" return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n",
" }\n",
" if (ch == 'Y') {\n",
" return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n",
" }\n",
"}\n"]}], "deletions": [], "modifications": []
}
][{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}]}]

[{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}]}]

[{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}]}]

[{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't') {"]}]}]

[{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't' && str.length() >= 4) {"]}]}]

[{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}]}][
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't') {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["public boolean toBoolean(String str) {", "    if (str == null) {", "        return false;", "    }", "    ", "    str = str.trim(); // Remove leading and trailing whitespaces", "    ", "    if (str.equalsIgnoreCase(\"true\") || str.equals(\"1\")) {", "        return true;", "    } else if (str.equalsIgnoreCase(\"false\") || str.equals(\"0\")) {", "        return false;", "    } else {", "        throw new IllegalArgumentException(\"Invalid boolean string: \" + str);", "    }", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["public boolean toBoolean(String str) {", "    if (str == null) {", "        return false;", "    }", "    ", "    str = str.trim(); // Remove leading and trailing whitespaces", "    ", "    if (str.equalsIgnoreCase(\"true\") || str.equals(\"1\")) {", "        return true;", "    } else if (str.equalsIgnoreCase(\"false\") || str.equals(\"0\")) {", "        return false;", "    } else {", "        throw new IllegalArgumentException(\"Invalid boolean string: \" + str);", "    }", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["public boolean toBoolean(String str) {", "    if (str == null) {", "        return false;", "    }", "    ", "    str = str.trim(); // Remove leading and trailing whitespaces", "    ", "    if (str.equalsIgnoreCase(\"true\") || str.equals(\"1\")) {", "        return true;", "    } else if (str.equalsIgnoreCase(\"false\") || str.equals(\"0\")) {", "        return false;", "    } else {", "        throw new IllegalArgumentException(\"Invalid boolean string: \" + str);", "    }", "}"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}
]```json
[
    {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
            "case 3: {\n",
            "    char ch = str.charAt(0);\n",
            "    if (ch == 'y') {\n",
            "        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n",
            "    }\n",
            "    if (ch == 'Y') {\n",
            "        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n",
            "    }\n",
            "}\n"
        ]
    }], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
            "case 3: {\n",
            "    char ch = str.charAt(0);\n",
            "    if (ch == 'y') {\n",
            "        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n",
            "    }\n",
            "    if (ch == 'Y') {\n",
            "        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n",
            "    }\n",
            "}\n"
        ]
    }], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
            "case 3: {\n",
            "    char ch = str.charAt(0);\n",
            "    if (ch == 'y') {\n",
            "        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n",
            "    }\n",
            "    if (ch == 'Y') {\n",
            "        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n",
            "    }\n",
            "}\n"
        ]
    }], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
            "case 3: {\n",
            "    char ch = str.charAt(0);\n",
            "    if (ch == 'y') {\n",
            "        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n",
            "    }\n",
            "    if (ch == 'Y') {\n",
            "        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n",
            "    }\n",
            "}\n"
        ]
    }], "deletions": [], "modifications": []
},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
            "case 3: {\n",
            "    char ch = str.charAt(0);\n",
            "    if (ch == 'y') {\n",
            "        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n",
            "    }\n",
            "    if (ch == 'Y') {\n",
            "        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n",
            "    }\n",
            "}\n"
        ]
    }], "deletions": [], "modifications": []
}
]
```[
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 3: {",
" char ch = str.charAt(0);",
" if (ch == 'y') {",
" return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');",
" }",
" if (ch == 'Y') {",
" return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');",
" }",
"}"
]}],
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 4: {",
" char ch = str.charAt(0);",
" if (ch == 't') {",
"}"
]}],
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 3: {",
" char ch = str.charAt(0);",
" if (ch == 'y') {",
" return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');",
" }",
" if (ch == 'Y') {",
" return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');",
" }",
"}"
]}],
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 4: {",
" char ch = str.charAt(0);",
" if (ch == 't' && str.length() >= 4) {",
"}"
]}],
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 3: {",
" char ch = str.charAt(0);",
" if (ch == 'y') {",
" return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');",
" }",
" if (ch == 'Y') {",
" return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');",
" }",
"}"
]}],
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 4: {",
" char ch = str.charAt(0);",
" if (ch == 't') {",
"}"
]}],
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 3: {",
" char ch = str.charAt(0);",
" if (ch == 'y') {",
" return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');",
" }",
" if (ch == 'Y') {",
" return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');",
" }",
"}"
]}],
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 4: {",
" char ch = str.charAt(0);",
" if (ch == 't' && str.length() >= 4) {",
"}"
]}],
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 3: {",
" char ch = str.charAt(0);",
" if (ch == 'y') {",
" return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');",
" }",
" if (ch == 'Y') {",
" return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');",
" }",
"}"
]}],
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": [
"case 4: {",
" char ch = str.charAt(0);",
" if (ch == 't' && str.length() >= 4) {",
"}"
]}]
][
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't') {"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["public boolean toBoolean(String str) {", " if (str == null) {", " return false;", " }", " ", " str = str.trim(); // Remove leading and trailing whitespaces", " ", " if (str.equalsIgnoreCase(\"true\") || str.equals(\"1\")) {", " return true;", " } else if (str.equalsIgnoreCase(\"false\") || str.equals(\"0\")) {", " return false;", " } else {", " throw new IllegalArgumentException(\"Invalid boolean string: \" + str);", " }", "}"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: { char ch = str.charAt(0); if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["public boolean toBoolean(String str) {", " if (str == null) {", " return false;", " }", " ", " str = str.trim(); // Remove leading and trailing whitespaces", " ", " if (str.equalsIgnoreCase(\"true\") || str.equals(\"1\")) {", " return true;", " } else if (str.equalsIgnoreCase(\"false\") || str.equals(\"0\")) {", " return false;", " } else {", " throw new IllegalArgumentException(\"Invalid boolean string: \" + str);", " }", "}"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: { char ch = str.charAt(0); if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: { char ch = str.charAt(0); if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "case 3: { char ch = str.charAt(0); if (ch == 'y') { return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S'); } if (ch == 'Y') { return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's'); } }"], "insertions": [{"line_number": 682, "new_lines": ["// Inserted new line for mutation 1"]} ]},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "case 3: { char ch = str.charAt(0); if (ch == 'y') { return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S'); } if (ch == 'Y') { return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's'); } }"], "deletions": [682]},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "case 3: { char ch = str.charAt(0); if (ch == 'y') { return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S'); } if (ch == 'Y') { return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's'); } }"], "modifications": [{"line_number": 682, "modified_line": "case 2: { char ch = str.charAt(0); if (ch == 'y') { return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S'); } if (ch == 'Y') { return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's'); } }"}]}
][
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't') {"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: { char ch = str.charAt(0); if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["684", "//"]], "insertions": [{"line_number": 684, "new_lines": ["                char ch = str.charAt(0);"]}], "deletions": [], "modifications": []}
][{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["// Fixing the bug by handling case 3 properly"]}]}][{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                case 3: {", "                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }", "                }"]}]}]

[{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                case 3: {", "                    char ch = str.charAt(0);", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                }"]}]}]

[{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["            case 4: {", "                char ch = str.charAt(0);", "                if (ch == 't') {"]}]}]

[{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["            case 4: {", "                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}]}]

[{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                case 3: {", "                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }", "                }"]}]}]

[{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["public boolean toBoolean(String str) {", "    if (str == null) {", "        return false;", "    }", "    ", "    str = str.trim(); // Remove leading and trailing whitespaces", "    ", "    if (str.equalsIgnoreCase(\"true\") || str.equals(\"1\")) {", "        return true;", "    } else if (str.equalsIgnoreCase(\"false\") || str.equals(\"0\")) {", "        return false;", "    } else {", "        throw new IllegalArgumentException(\"Invalid boolean string: \" + str);", "    }", "}"]}]}]

[{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["            case 4: {", "                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}]}]

[{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["public boolean toBoolean(String str) {", "    if (str == null) {", "        return false;", "    }", "    ", "    str = str.trim(); // Remove leading and trailing whitespaces", "    ", "    if (str.equalsIgnoreCase(\"true\") || str.equals(\"1\")) {", "        return true;", "    } else if (str.equalsIgnoreCase(\"false\") || str.equals(\"0\")) {", "        return false;", "    } else {", "        throw new IllegalArgumentException(\"Invalid boolean string: \" + str);", "    }", "}"]}]}]

[{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["            case 4: {", "                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}]}]

[{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["            case 4: { char ch = str.charAt(0); if (ch == 't' && str.length() >= 4) {"]}]}]

[{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 684, "new_lines": ["                char ch = str.charAt(0);"]}]}]

[{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["public boolean toBoolean(String str) {", "    if (str == null || str.length() < 3) {", "        return false;", "    }", "    ", "    str = str.trim(); // Remove leading and trailing whitespaces", "    ", "    if (str.equalsIgnoreCase(\"true\") || str.equals(\"1\")) {", "        return true;", "    } else if (str.equalsIgnoreCase(\"false\") || str.equals(\"0\")) {", "        return false;", "    } else {", "        throw new IllegalArgumentException(\"Invalid boolean string: \" + str);", "    }", "}"]}]}][
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                case 3: {", "                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }", "                }"]}],"deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                case 3: {", "                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }", "                }"]}],"deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                case 3: {", "                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }", "                }"]}],"deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                case 3: {", "                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }", "                }"]}],"deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                case 3: {", "                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }", "                }"]}],"deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                case 3: {", "                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }", "                }"]}],"deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                case 3: {", "                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }", "                }"]}],"deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                case 3: {", "                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }", "                }"]}],"deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                case 3: {", "                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }", "                }"]}],"deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                case 3: {", "                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }", "                }"]}],"deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }"]} ], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                    char ch = str.charAt(0);", "                    if (ch == 't' && str.length() >= 4) {"]} ], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                    char ch = str.charAt(0);", "                    if (ch == 't' && str.length() >= 4) {"]} ], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                    char ch = str.charAt(0);", "                    if (ch == 't' && str.length() >= 4) {"]} ], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                    char ch = str.charAt(0);", "                    if (ch == 't' && str.length() >= 4) {"]} ], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                    char ch = str.charAt(0);", "                    if (ch == 't' && str.length() >= 4) {"]} ], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                    char ch = str.charAt(0);", "                    if (ch == 't' && str.length() >= 4) {"]} ], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                    char ch = str.charAt(0);", "                    if (ch == 't' && str.length() >= 4) {"]} ], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                    char ch = str.charAt(0);", "                    if (ch == 't' && str.length() >= 4) {"]} ], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                    char ch = str.charAt(0);", "                    if (ch == 't' && str.length() >= 4) {"]} ], "deletions": [], "modifications": []}    
][{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}][
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "case 4: { char ch = str.charAt(0); if (ch == 't') {"], "insertions": [{"line_number": 682, "new_lines": ["                if (str.length() >= 4) {"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "case 4: { char ch = str.charAt(0); if (ch == 't') {"], "insertions": [{"line_number": 682, "new_lines": ["                if (str.length() == 4) {"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "case 4: { char ch = str.charAt(0); if (ch == 't') {"], "insertions": [{"line_number": 682, "new_lines": ["                if (ch == 't' && str.length() == 4) {"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "case 4: { char ch = str.charAt(0); if (ch == 't') {"], "insertions": [{"line_number": 682, "new_lines": ["                if (ch == 't' && str.length() > 3) {"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "case 4: { char ch = str.charAt(0); if (ch == 't') {"], "insertions": [{"line_number": 682, "new_lines": ["                if (ch == 't' && str.length() < 5) {"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "case 4: { char ch = str.charAt(0); if (ch == 't') {"], "insertions": [{"line_number": 682, "new_lines": ["                if (ch == 't' && str.length() > 4) {"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "case 4: { char ch = str.charAt(0); if (ch == 't') {"], "insertions": [{"line_number": 682, "new_lines": ["                if (ch == 't' && str.length() == 3) {"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "case 4: { char ch = str.charAt(0); if (ch == 't') {"], "insertions": [{"line_number": 682, "new_lines": ["                if (ch == 't' && str.length() != 3) {"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "case 4: { char ch = str.charAt(0); if (ch == 't') {"], "insertions": [{"line_number": 682, "new_lines": ["                if (str.length() == 3 && ch == 't') {"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "case 4: { char ch = str.charAt(0); if (ch == 't') {"], "insertions": [{"line_number": 682, "new_lines": ["                if (str.length() == 4 && ch == 't') {"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "case 4: { char ch = str.charAt(0); if (ch == 't') {"], "insertions": [{"line_number": 682, "new_lines": ["                if (str.length() > 3 && ch == 't') {"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "case 4: { char ch = str.charAt(0); if (ch == 't') {"], "insertions": [{"line_number": 682, "new_lines": ["                if (str.length() < 5 && ch == 't') {"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "case 4: { char ch = str.charAt(0); if (ch == 't') {"], "insertions": [{"line_number": 682, "new_lines": ["                if (str.length() >= 3 && ch == 't') {"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "case 4: { char ch = str.charAt(0); if (ch == 't') {"], "insertions": [{"line_number": 682, "new_lines": ["                if (str.length() <= 4 && ch == 't') {"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "case 4: { char ch = str.charAt(0); if (ch == 't') {"], "insertions": [{"line_number": 682, "new_lines": ["                if (str.length() != 4 && ch == 't') {"]} ], "deletions": [], "modifications": []}
]