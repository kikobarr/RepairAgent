[
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "                str.getChars(0, Math.min(strLen, buffer.length - size), buffer, size);"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "                str.getChars(0, Math.min(strLen, buffer.length - size), buffer, 0);"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "                str.getChars(0, Math.min(strLen, buffer.length), buffer, size);"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "                str.getChars(0, Math.min(strLen, buffer.length - 1), buffer, size);"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "                str.getChars(0, Math.min(strLen, buffer.length - size - 1), buffer, size);"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "                str.getChars(0, Math.min(strLen, buffer.length - 2), buffer, size);"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "                str.getChars(0, Math.min(strLen, buffer.length - size - 2), buffer, size);"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "                str.getChars(0, Math.min(strLen, buffer.length - 3), buffer, size);"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "                str.getChars(0, Math.min(strLen, buffer.length - size - 3), buffer, size);"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 885, "new_lines": ["                size += strLen;"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 885, "new_lines": ["                size += strLen;"]}], "deletions": [887], "modifications": []},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["                if (strLen > buffer.length - size) {", "                    strLen = buffer.length - size;", "                }"]}], "deletions": [], "modifications": []}
][
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size);"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.max(strLen, width), buffer, size);"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [884], "modifications": []},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["// Added a comment here to potentially fix the issue"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, width, buffer, size);"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 883, "new_lines": ["int newWidth = strLen + width;"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["str.getChars(0, strLen, buffer, size); // Check if strLen is within bounds before calling getChars"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["if (strLen > 0) {"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["// Additional logic here to handle edge cases for strLen and width"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["buffer = checkBufferCapacity(buffer, size, strLen);"]}], "deletions": [], "modifications": []}
][
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "                str.getChars(0, Math.min(strLen, width), buffer, size);"}]}
][
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.max(0, Math.min(strLen, width)), buffer, size);"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, 0);"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, strLen, buffer, Math.min(size, strLen));"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 885, "new_lines": ["// Adding a check for buffer length before accessing\nif (buffer.length < size) return;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 883, "new_lines": ["// Adjusting width to prevent ArrayIndexOutOfBoundsException\nwidth = Math.min(width, buffer.length - size);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["try {"]}, {"line_number": 891, "new_lines": ["} catch (ArrayIndexOutOfBoundsException e) {", "    // Handle the exception here", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["// Adding a defensive check for buffer size", "if (buffer.length <= size + strLen) return;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 886, "new_lines": ["// Adjusting width to prevent ArrayIndexOutOfBoundsException\nwidth = Math.min(width, buffer.length - size);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["// Adding a try-catch block for potential ArrayIndexOutOfBoundsException", "try {"]}, {"line_number": 891, "new_lines": ["} catch (ArrayIndexOutOfBoundsException e) {", "    // Handle the exception here", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["// Adjusting width to prevent ArrayIndexOutOfBoundsException\nwidth = Math.min(width, buffer.length - size);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["// Adding a check for buffer size before accessing\nif (buffer.length <= size + strLen) return;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 886, "new_lines": ["// Adjusting width to prevent ArrayIndexOutOfBoundsException\nwidth = Math.min(width, buffer.length - size);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["// Adding a try-catch block for potential ArrayIndexOutOfBoundsException", "try {"]}, {"line_number": 891, "new_lines": ["} catch (ArrayIndexOutOfBoundsException e) {", "    // Handle the exception here", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["// Adjusting width to prevent ArrayIndexOutOfBoundsException\nwidth = Math.min(width, buffer.length - size);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["// Adding a check for buffer size before accessing\nif (buffer.length <= size + strLen) return;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 886, "new_lines": ["// Adjusting width to prevent ArrayIndexOutOfBoundsException\nwidth = Math.min(width, buffer.length - size);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["// Adding a try-catch block for potential ArrayIndexOutOfBoundsException", "try {"]}, {"line_number": 891, "new_lines": ["} catch (ArrayIndexOutOfBoundsException e) {", "    // Handle the exception here", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["// Adjusting width to prevent ArrayIndexOutOfBoundsException\nwidth = Math.min(width, buffer.length - size);"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixing buffer index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted index calculation for buffer"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixed buffer access"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer access"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixed array index issue"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Resolved buffer overflow"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, width, buffer, size); // Adjusted buffer access"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, strLen, Math.min(strLen, buffer.length - size), buffer, size); // Added boundary check for buffer access"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, buffer.length - size), buffer, size); // Adjusted buffer access to prevent overflow"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, buffer.length - size), buffer, size); // Fixed buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, width, buffer, size); // Updated buffer access for safety"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, buffer.length - size), buffer, size); // Adjusted buffer index calculation for safety"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, width, buffer, size); // Fixed buffer access issue"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, buffer.length - size), buffer, size); // Resolved buffer index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, width, buffer, size); // Adjusted buffer access to prevent overflow"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, width, buffer, size); // Fixed buffer index overflow"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, strLen, buffer, Math.min(size, buffer.length)); // Adjusted buffer access for safety"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, width, buffer, size); // Fixed array index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 883, "new_lines": ["int width = Math.min(strLen, buffer.length - size);"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, width, buffer, size); // Adjusted buffer index calculation for safety"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 883, "new_lines": ["int width = Math.min(strLen, buffer.length - size);"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, width, buffer, size); // Fixed buffer access for safety"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 883, "new_lines": ["int width = Math.min(strLen, buffer.length - size);"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, width, buffer, size); // Resolved buffer index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 883, "new_lines": ["int width = Math.min(strLen, buffer.length - size);"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, width, buffer, size); // Adjusted buffer access to prevent overflow"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 883, "new_lines": ["int width = Math.min(strLen, buffer.length - size);"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, width, buffer, size); // Fixed buffer access issue"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 883, "new_lines": ["int width = Math.min(strLen, buffer.length - size);"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, width, buffer, size); // Resolved buffer overflow issue"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 883, "new_lines": ["int width = Math.min(strLen, buffer.length - size);"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, width, buffer, size); // Adjusted buffer index calculation for safety"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 883, "new_lines": ["int width = Math.min(strLen, buffer.length - size);"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, width, buffer, size); // Fixed array index overflow"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 883, "new_lines": ["int width = Math.min(strLen, buffer.length - size);"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, width, buffer, size); // Resolved buffer index out of bounds"}]}
][
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 882, "new_lines": ["int strLen = str.length();", "int width = Math.min(strLen, width);"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 880, "new_lines": ["int width = Math.min(strLen, width);"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]}
][
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.max(0, Math.min(strLen, width)), buffer, size);"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, 0);"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, strLen, buffer, 0);"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "// str.getChars(0, strLen, buffer, size);"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 883, "new_lines": ["int newWidth = Math.min(strLen, width);"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, newWidth, buffer, size);"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 883, "new_lines": ["int newWidth = Math.min(strLen, width);"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, newWidth, buffer, newWidth);"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 883, "new_lines": ["int newWidth = Math.min(strLen, width);"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, newWidth, buffer, 0);"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 883, "new_lines": ["int newWidth = Math.min(strLen, width);"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, newWidth, buffer, newWidth); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 883, "new_lines": ["int newWidth = Math.min(strLen, width);"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, newWidth, buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 883, "new_lines": ["int newWidth = Math.min(strLen, width);"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, newWidth, buffer, 0); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 883, "new_lines": ["int newWidth = Math.min(strLen, width);"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "// str.getChars(0, strLen, buffer, size);"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [884], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [884, 885], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [884, 886], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [884, 887], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [884, 888], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [884, 889], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [884, 890], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["// Add a check for buffer length before calling str.getChars method"]}]}][
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutation 1: Using Math.min to avoid ArrayIndexOutOfBoundsException"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen + 1, width), buffer, size); // Mutation 2: Adjusted length parameter to prevent out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, width, buffer, size); // Mutation 3: Using width directly to get characters"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width - 1), buffer, size); // Mutation 4: Adjusted width to prevent exceeding buffer size"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, strLen + 1, buffer, size); // Mutation 5: Increased length by 1 to include all characters"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, buffer.length - size), buffer, size); // Mutation 6: Adjusted length based on buffer size"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, strLen, buffer, 0); // Mutation 7: Changed destination index to start from 0"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, buffer.length), buffer, size); // Mutation 8: Ensured buffer length is not exceeded"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "// str.getChars(0, strLen, buffer, size); // Mutation 9: Commented out the original line"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, buffer.length - 1), buffer, size); // Mutation 10: Adjusted length based on buffer size"}]}
][
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixing index out of bounds"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixing index out of bounds"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixing index out of bounds"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixing index out of bounds"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixing index out of bounds"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixing index out of bounds"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixing index out of bounds"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixing index out of bounds"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixing index out of bounds"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixing index out of bounds"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixing index out of bounds"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixing index out of bounds"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixing index out of bounds"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixing index out of bounds"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixing index out of bounds"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixing index out of bounds"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixing index out of bounds"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixing index out of bounds"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixing index out of bounds"}]},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixing index out of bounds"}]}
][
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 1: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 2: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 3: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 4: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 885, "new_lines": ["// Inserted line to handle edge case"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 5: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 883, "new_lines": ["if (strLen > width) { return; } // Inserted guard clause"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 6: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 889, "new_lines": ["// Inserted line for boundary check"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 7: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 887, "new_lines": ["padLen = Math.min(padLen, width); // Inserted line for padding length check"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 8: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 886, "new_lines": ["strLen = Math.min(strLen, width); // Inserted line to adjust string length"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 9: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 888, "new_lines": ["// Inserted line for padding loop"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 10: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 890, "new_lines": ["// Inserted line for loop end"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 11: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 888, "new_lines": ["// Inserted line for padding loop with adjusted index"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 12: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 883, "new_lines": ["if (width == 0) { return; } // Inserted guard clause"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 13: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 882, "new_lines": ["width = Math.max(width, 0); // Inserted line to ensure positive width"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 14: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 883, "new_lines": ["if (buffer.length == 0) { return; } // Inserted guard clause for empty buffer"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 15: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 885, "new_lines": ["// Inserted line to handle overflow case"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 16: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 886, "new_lines": ["padLen = Math.max(padLen, 0); // Inserted line to ensure positive padding length"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 17: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 887, "new_lines": ["// Inserted line for padding calculation"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 18: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 888, "new_lines": ["// Inserted line for padding calculation"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 19: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 890, "new_lines": ["// Inserted line for loop end condition"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 20: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [885], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 21: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [886], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 22: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [887], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 23: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [888], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 24: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [889], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 25: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [890], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 26: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [885, 886, 887, 888, 889, 890], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 27: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 888, "new_lines": ["// Inserted line for adjusted buffer index calculation"]}], "deletions": [887], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 28: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["width = Math.min(width, buffer.length); // Adjusted width to buffer length"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 29: Fixed index out of bounds"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["width = Math.min(width, size); // Adjusted width to size"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutant 30: Fixed index out of bounds"}]}
][
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 882, "new_lines": ["int strLen = str.length();", "int width = Math.min(strLen, width);"]}], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}, {"line_number": 887, "modified_line": "for (int i = 0; i < padLen; i++) { buffer[size + strLen + i] = padChar; } // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}, {"line_number": 887, "modified_line": "for (int i = 0; i < Math.min(padLen, width - strLen); i++) { buffer[size + strLen + i] = padChar; } // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, Math.min(size, buffer.length - Math.min(strLen, width))); // Adjusted buffer index calculation to prevent ArrayIndexOutOfBoundsException"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, Math.min(size, buffer.length - 1)); // Adjusted buffer index calculation to prevent ArrayIndexOutOfBoundsException"}]}
][
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]}
]

[
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(width, strLen), buffer, size); // Adjusted buffer index calculation"}]}
]

[
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(width, str.length()), buffer, size); // Adjusted buffer index calculation"}]}
]

[
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, strLen + 1), buffer, size); // Adjusted buffer index calculation"}]}
]

[
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 883, "new_lines": ["int width = Math.min(strLen, buffer.length - size);"]}], "deletions": [], "modifications": []}
]

[
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 885, "new_lines": ["if (strLen > buffer.length - size) {", "    strLen = buffer.length - size;"]}], "deletions": [], "modifications": []}
]

[
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [883], "modifications": []}
]

[
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 882, "new_lines": ["int width = Math.min(strLen, buffer.length);"]}], "deletions": [], "modifications": []}
]

[
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 886, "new_lines": ["if (width > buffer.length - size) {", "    width = buffer.length - size;"]}], "deletions": [], "modifications": []}
]

[
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 888, "new_lines": ["if (padLen > buffer.length - size - strLen) {", "    padLen = buffer.length - size - strLen;"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Updated index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Updated index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Updated buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Updated buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Updated buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Updated buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Updated buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Updated buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Updated buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Updated buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Updated buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Updated buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Updated buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]}
][
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]}
][
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutation 1 - Adjusted to use Math.min for width"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutation 2 - Adjusted to use Math.min for width"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutation 3 - Adjusted to use Math.min for width"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutation 4 - Adjusted to use Math.min for width"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mutation 5 - Adjusted to use Math.min for width"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, buffer.length), buffer, size); // Mutation 6 - Adjusted to use Math.min for buffer length"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, buffer.length), buffer, size); // Mutation 7 - Adjusted to use Math.min for buffer length"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, buffer.length - 1), buffer, size); // Mutation 8 - Adjusted to use Math.min for buffer length with -1"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, buffer.length - 1), buffer, size); // Mutation 9 - Adjusted to use Math.min for buffer length with -1"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, size + width), buffer, size); // Mutation 10 - Adjusted to use size + width for buffer length"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, size + width), buffer, size); // Mutation 11 - Adjusted to use size + width for buffer length"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, size + width - 1), buffer, size); // Mutation 12 - Adjusted to use size + width - 1 for buffer length"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, size + width - 1), buffer, size); // Mutation 13 - Adjusted to use size + width - 1 for buffer length"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, size + Math.min(strLen, width)), buffer, size); // Mutation 14 - Adjusted to use size + Math.min(strLen, width) for buffer length"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, size + Math.min(strLen, width)), buffer, size); // Mutation 15 - Adjusted to use size + Math.min(strLen, width) for buffer length"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, size + Math.min(strLen, width) - 1), buffer, size); // Mutation 16 - Adjusted to use size + Math.min(strLen, width) - 1 for buffer length"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, size + Math.min(strLen, width) - 1), buffer, size); // Mutation 17 - Adjusted to use size + Math.min(strLen, width) - 1 for buffer length"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, size + Math.min(strLen, width) + 1), buffer, size); // Mutation 18 - Adjusted to use size + Math.min(strLen, width) + 1 for buffer length"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, size + Math.min(strLen, width) + 1), buffer, size); // Mutation 19 - Adjusted to use size + Math.min(strLen, width) + 1 for buffer length"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, size - Math.min(strLen, width)), buffer, size); // Mutation 20 - Adjusted to use size - Math.min(strLen, width) for buffer length"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, size - Math.min(strLen, width)), buffer, size); // Mutation 21 - Adjusted to use size - Math.min(strLen, width) for buffer length"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, size - Math.min(strLen, width) - 1), buffer, size); // Mutation 22 - Adjusted to use size - Math.min(strLen, width) - 1 for buffer length"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, size - Math.min(strLen, width) - 1), buffer, size); // Mutation 23 - Adjusted to use size - Math.min(strLen, width) - 1 for buffer length"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, size - Math.min(strLen, width) + 1), buffer, size); // Mutation 24 - Adjusted to use size - Math.min(strLen, width) + 1 for buffer length"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, size - Math.min(strLen, width) + 1), buffer, size); // Mutation 25 - Adjusted to use size - Math.min(strLen, width) + 1 for buffer length"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.max(strLen, width), buffer, size); // Mutation 26 - Adjusted to use Math.max for width"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.max(strLen, width), buffer, size); // Mutation 27 - Adjusted to use Math.max for width"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.max(strLen, width), buffer, size); // Mutation 28 - Adjusted to use Math.max for width"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.max(strLen, width), buffer, size); // Mutation 29 - Adjusted to use Math.max for width"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.max(strLen, width), buffer, size); // Mutation 30 - Adjusted to use Math.max for width"}]}
][
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 885, "new_lines": ["                size = Math.min(size + strLen, buffer.length); // Adjusted buffer size to prevent ArrayIndexOutOfBoundsException"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["                int safeStrLen = Math.min(strLen, buffer.length - size); // Calculate safe length to prevent ArrayIndexOutOfBoundsException"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 883, "new_lines": ["                width = Math.min(width, buffer.length - size); // Adjust width to prevent ArrayIndexOutOfBoundsException"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 886, "new_lines": ["                padLen = Math.min(padLen, buffer.length - size); // Adjust padding length to prevent ArrayIndexOutOfBoundsException"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 886, "new_lines": ["                padLen = Math.min(padLen, buffer.length - size); // Adjust padding length to prevent ArrayIndexOutOfBoundsException"]}, {"line_number": 887, "new_lines": ["                int safePadLen = Math.min(padLen, buffer.length - size - strLen); // Calculate safe padding length to prevent ArrayIndexOutOfBoundsException"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixing the index out of bounds issue by using Math.min"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Updated buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mitigating ArrayIndexOutOfBoundsException"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Resolving ArrayIndexOutOfBoundsException"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixed buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Updated index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Mitigated buffer index issue"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Corrected buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixed index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Enhanced buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index for safety"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Fixed buffer index for safety"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 885, "new_lines": ["if (strLen >= width) {", "str.getChars(0, strLen, buffer, size);"]}],"deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 882, "new_lines": ["int width = Math.min(strLen, width);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 880, "new_lines": ["int width = Math.min(strLen, width);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 886, "new_lines": ["int width = Math.min(strLen, width);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 887, "new_lines": ["for (int i = 0; i < Math.min(padLen, width - strLen); i++) {", "buffer[size + strLen + i] = padChar;"]}],"deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["int width = Math.min(strLen, width);"]}],"deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["int width = Math.min(strLen, width); // Adjusted width calculation"]}],"deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["int width = Math.min(strLen, width); // Updated width calculation"]}],"deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["int width = Math.min(strLen, width); // Corrected width calculation"]}],"deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["int width = Math.min(strLen, width); // Adjusted width for safety"]}],"deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [{"line_number": 884, "new_lines": ["int width = Math.min(strLen, width); // Fixed width calculation for safety"]}],"deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]},
{"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation"}]}
][
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation to prevent ArrayIndexOutOfBoundsException"}]}
]

[
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation to prevent ArrayIndexOutOfBoundsException"}]}
]

[
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation to prevent ArrayIndexOutOfBoundsException"}]}
]

[
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation to prevent ArrayIndexOutOfBoundsException"}]}
]

[
    {"file_name": "org/apache/commons/lang/text/StrBuilder.java", "target_lines": [["884", "                str.getChars(0, strLen, buffer, size);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 884, "modified_line": "str.getChars(0, Math.min(strLen, width), buffer, size); // Adjusted buffer index calculation to prevent ArrayIndexOutOfBoundsException"}]}
]