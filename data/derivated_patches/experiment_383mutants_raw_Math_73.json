[
    {"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["throw new IllegalArgumentException(\"Interval endpoints do not bracket a root\");"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (Math.abs(f.value(a)) < 1E-15) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (Math.abs(f.value(a)) < 1E-14) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (Math.abs(f.value(a)) < 1E-16) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (Math.abs(f.value(a)) < 1E-12) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (Math.abs(f.value(a)) <= 1E-15) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (f.value(a) == 0) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (f.value(a) <= 0) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (f.value(a) >= 0) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (f.value(a) > 0) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (f.value(a) < 0) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (f.value(a) != 0) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (f.value(a) != 1E-15) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (f.value(a) != 1E-14) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (f.value(a) != 1E-16) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if ((f.value(a) < 1E-15) && (f.value(b) > 1E-15)) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if ((f.value(a) > 1E-15) && (f.value(b) < 1E-15)) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if ((f.value(a) == 0) && (f.value(b) == 0)) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if ((f.value(a) != 0) && (f.value(b) != 0)) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if ((f.value(a) < 0) && (f.value(b) > 0)) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if ((f.value(a) > 0) && (f.value(b) < 0)) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if ((f.value(a) == 1E-15) && (f.value(b) == 1E-15)) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if ((f.value(a) != 1E-15) && (f.value(b) != 1E-15)) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if ((f.value(a) < 1E-15) || (f.value(b) > 1E-15)) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if ((f.value(a) > 1E-15) || (f.value(b) < 1E-15)) {", "throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["// Add check for bracketing here"], "Throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["// Additional validation for bracketing"], "Throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["// Ensure bracketing condition is satisfied"], "Throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["// Check for bracketing violation"], "Throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["// Insert bracketing validation logic here"], "Throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");", "}"]}]},
][
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (Double.isNaN(a) || Double.isNaN(b)) {", "throw new IllegalArgumentException(\"Interval endpoints must be valid numbers.\");", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (Double.isInfinite(a) || Double.isInfinite(b)) {", "throw new IllegalArgumentException(\"Interval endpoints must not be infinite.\");", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (a == Double.POSITIVE_INFINITY || b == Double.POSITIVE_INFINITY) {", "throw new IllegalArgumentException(\"Interval endpoints must not be positive infinity.\");", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (a == Double.NEGATIVE_INFINITY || b == Double.NEGATIVE_INFINITY) {", "throw new IllegalArgumentException(\"Interval endpoints must not be negative infinity.\");", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (a >= b) {", "throw new IllegalArgumentException(\"Interval endpoints must be in increasing order.\");", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (b <= a) {", "throw new IllegalArgumentException(\"Interval endpoints must be in decreasing order.\");", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (Math.abs(b - a) < 1E-15) {", "throw new IllegalArgumentException(\"Interval width must be greater than tolerance.\");", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (Math.abs(b - a) == 0.0) {", "throw new IllegalArgumentException(\"Interval width must be non-zero.\");", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (Math.abs(Math.abs(a) - Math.abs(b)) < 1E-15) {", "throw new IllegalArgumentException(\"Interval endpoints must have different magnitudes.\");", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines": ["if (Math.abs(a - b) < 1E-15) {", "throw new IllegalArgumentException(\"Interval endpoints must be different.\");", "}"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines":["if (Double.isNaN(f.value(a)) || Double.isNaN(f.value(b))) {", "throw new IllegalArgumentException(\"Function values at endpoints must be finite numbers.\");"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines":["if (a == b) {", "throw new IllegalArgumentException(\"Endpoints are the same value.\");"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines":["if (Math.abs(f.value(a) - f.value(b)) < 1E-15) {", "throw new IllegalArgumentException(\"Function values at endpoints are too close.\");"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines":["if (Math.abs(f.value(a) - f.value(b)) < 1E-10) {", "throw new IllegalArgumentException(\"Function values at endpoints are too close.\");"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines":["if (f.value(a) * f.value(b) > 0) {", "throw new IllegalArgumentException(\"Endpoints do not bracket the root.\");"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines":["if (a > b) {", "throw new IllegalArgumentException(\"Endpoints are not in ascending order.\");"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines":["if (f.value(a) == 0 || f.value(b) == 0) {", "throw new IllegalArgumentException(\"Endpoints include a root.\");"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines":["if (Math.abs(f.value(a) - f.value(b)) > 1E-10) {", "throw new IllegalArgumentException(\"Function values at endpoints are not close enough.\");"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines":["if (f.value(a) * f.value(b) >= 0) {", "throw new IllegalArgumentException(\"Endpoints do not have different signs.\");"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/analysis/solvers/BrentSolver.java", "target_lines": [["136", "//"]], "insertions": [{"line_number": 136, "new_lines":["if (Math.abs(f.value(a) - f.value(b)) < 1E-12) {", "throw new IllegalArgumentException(\"Function values at endpoints are too close for tolerance.\");"]} ], "deletions": [], "modifications": []}
]