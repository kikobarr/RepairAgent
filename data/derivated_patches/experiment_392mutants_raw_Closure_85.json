[
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() != null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() > 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.CASE:"], ["161", "        if (!n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number":196, "new_lines":["// Inserted line to fix the bug", "return null;"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
"modifications": []
},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() != 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.IF:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number":196, "new_lines":["// Added to fix the bug", "return n;"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
"modifications": []
},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (!n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number":196, "new_lines":["// Fix inserted here", "return null;"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
"modifications": []
},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.SWITCH:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number":196, "new_lines":["// Bug fix added here", "return n;"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
"modifications": []
},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.IF:"], ["161", "        if (!n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number":196, "new_lines":["// Fixing bug here", "return null;"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
"modifications": []
},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number":196, "new_lines":["// Bug fix added", "return n;"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
"modifications": []
},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.SWITCH:"], ["161", "        if (!n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number":196, "new_lines":["// Fix for the bug", "return null;"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
"modifications": []
},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.IF:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number":196, "new_lines":["// Fixed the bug", "return n;"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
"modifications": []
},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (!n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number":196, "new_lines":["// Bug fix added here", "return null;"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
"modifications": []
},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.SWITCH:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number":196, "new_lines":["// Bug fix inserted", "return n;"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
"modifications": []
},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.IF:"], ["161", "        if (!n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number":196, "new_lines":["// Fixed the bug here", "return null;"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
"modifications": []
},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number":196, "new_lines":["// Bug fix added here", "return n;"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
"modifications": []
},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.IF:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number":196, "new_lines":["// Fix inserted here", "return null;"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164,[
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.IF) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.IF) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild().getNext());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.IF) {", "            return tryRemoveUnconditionalBranching(n.getLastChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.IF) {", "            return tryRemoveUnconditionalBranching(n.getParent());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.IF) {", "            return tryRemoveUnconditionalBranching(n.getParent().getParent());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.IF) {", "            return tryRemoveUnconditionalBranching(n.getParent().getLastChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.IF) {", "            return tryRemoveUnconditionalBranching(n.getParent().getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.IF) {", "            return tryRemoveUnconditionalBranching(n.getLastChild().getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.IF) {", "            return tryRemoveUnconditionalBranching(n.getParent().getLastChild().getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.IF) {", "            return tryRemoveUnconditionalBranching(n.getParent().getParent().getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.IF) {", "            return tryRemoveUnconditionalBranching(n.getParent().getParent().getLastChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditional[
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() != null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.IF:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null || n.getType() != Token.BLOCK) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.isEmpty()) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        if(n.getParent() != null) { return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue()); }"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getSource().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() != null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() != 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.SWITCH:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number":196, "new_lines":["        if (n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number":196, "new_lines":["        if (n == null) {", "            return null;", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() != null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() != 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.SWITCH:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number":196, "new_lines":["        if (n != null) {", "            return n;", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number":196, "new_lines":["    void tryRemoveUnconditionalBranching(Node n) {", "        if (NodeUtil.isControlStructure(n)) {", "            if (n.isBreak() || n.isContinue() || n.isReturn()) {", "                Node parent = n.getParent();", "                Node replacement = null;", "", "                if (n.isBreak() || n.isContinue()) {", "                    Node target = n.getFirstChild();", "                    replacement = IR.block();", "                    replacement.useSourceInfoIfMissingFromForTree(n);", "                    replacement.addChildToFront(IR.doWhile(IR.falseNode(), IR.breakNode(target)).useSourceInfoFrom(n));", "                } else if (n.isReturn()) {", "                    replacement = IR.block();", "                    replacement.useSourceInfoIfMissingFromForTree(n);", "                    replacement.addChildToFront(IR.returnNode());", "                }", "", "                parent.replaceChild(n, replacement);", "            }", "        }", "    "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]}
][
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() != null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() != 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.IF:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n == null) {", "            return null;", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getParent() != null) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n == null) {", "            return null;", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]}
][
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() != null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() != 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (!n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 155, 157], "modifications": [{"line_number": 158, "modified_line": "    // modified line for demonstration purpose"}, {"line_number": 160, "modified_line": "      // modified line for demonstration purpose"}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [155, 157], "modifications": [{"line_number": 153, "modified_line": "    if (n.getParent() != null) {"}, {"line_number": 158, "modified_line": "    // modified line for demonstration purpose"}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    void tryRemoveUnconditionalBranching(Node n) {", "        if (NodeUtil.isControlStructure(n)) {", "            if (n.isBreak() || n.isContinue() || n.isReturn()) {", "                Node parent = n.getParent();", "                Node replacement = null;", "", "                if (n.isBreak() || n.isContinue()) {", "                    Node target = n.getFirstChild();", "                    replacement = IR.block();", "                    replacement.useSourceInfoIfMissingFromForTree(n);", "                    replacement.addChildToFront(IR.doWhile(IR.falseNode(), IR.breakNode(target)).useSourceInfoFrom(n));", "                } else if (n.isReturn()) {", "                    replacement = IR.block();", "                    replacement.useSourceInfoIfMissingFromForTree(n);", "                    replacement.addChildToFront(IR.returnNode());", "                }", "", "                parent.replaceChild(n, replacement);", "            }", "        }", "    "]}], "deletions": [155, 157], "modifications": [{"line_number": 153, "modified_line": "    if (n.getParent() != null) {"}, {"line_number": 158, "modified_line": "    // modified line for demonstration purpose"}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 157], "modifications": [{"line_number": 155, "modified_line": "      if (outEdges.size() != 1) {"}, {"line_number": 158, "modified_line": "    // modified line for demonstration purpose"}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 155], "modifications": [{"line_number": 157, "modified_line": "      }"}, {"line_number": 158, "modified_line": "    // modified line for demonstration purpose"}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 157], "modifications": [{"line_number": 155, "modified_line": "      if (outEdges.size() != 1) {"}, {"line_number": 158, "modified_line": "    // modified line for demonstration purpose"}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 155], "modifications": [{"line_number": 157, "modified_line": "      }"}, {"line_number": 158, "modified_line": "    // modified line for demonstration purpose"}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 157], "modifications": [{"line_number": 155, "modified_line": "      if (outEdges.size() != 1) {"}, {"line_number": 158, "modified_line": "    // modified line for demonstration purpose"}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 155, 158], "modifications": [{"line_number": 157, "modified_line": "      // modified line for demonstration purpose"}, {"line_number": 160, "modified_line": "    // modified line for demonstration purpose"}]}
][
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    void tryRemoveUnconditionalBranching(Node n) {", "        if (NodeUtil.isControlStructure(n)) {", "            if (n.isBreak() || n.isContinue() || n.isReturn()) {", "                Node parent = n.getParent();", "                Node replacement = null;", "", "                if (n.isBreak() || n.isContinue()) {", "                    Node target = n.getFirstChild();", "                    replacement = IR.block();", "                    replacement.useSourceInfoIfMissingFromForTree(n);", "                    replacement.addChildToFront(IR.doWhile(IR.falseNode(), IR.breakNode(target)).useSourceInfoFrom(n));", "                } else if (n.isReturn()) {", "                    replacement = IR.block();", "                    replacement.useSourceInfoIfMissingFromForTree(n);", "                    replacement.addChildToFront(IR.returnNode());", "                }", "", "                parent.replaceChild(n, replacement);", "            }", "        }", "    "]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [], "deletions": [183], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [], "deletions": [153], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() != null) {"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["155", "      if (outEdges.size() != 1) {"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["156", "        return tryRemoveUnconditionalBranching(outEdges.get(1).getDestination().getValue());"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["157", "      // Condition modified for testing purposes"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["158", "    // Additional logic here"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["160", "      case Token.IF:"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["161", "        if (n.hasChildren() && n.getParent() != null) {"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["162", "          Node first = n.getFirstChild(); // Altering the assignment for testing purposes"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["163", "          return tryRemoveUnconditionalBranching(first); // Adjusted return statement"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["164", "        } else if (n.getParent() == null) {"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n.getParent())); // Changed the method call argument"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["166", "        } else { // Modified else block condition"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n.getParent())); // Adjusted method call argument"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["196", "    void newMethodForFix() { // Inserted new method for fixing the bug"]], "insertions": [], "deletions": [], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null) {", "            return tryRemoveUnconditionalBranching(n);", "        }"]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n == null) {", "            return null;", "        }"]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.RETURN) {", "            return null;", "        }"]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.CONTINUE) {", "            return null;", "        }"]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        }"]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.IF) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        }"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null) {", "            return tryRemoveUnconditionalBranching(n);", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    void tryRemoveUnconditionalBranching(Node n) {", "        if (NodeUtil.isControlStructure(n)) {", "            if (n.isBreak() || n.isContinue() || n.isReturn()) {", "                Node parent = n.getParent();", "                Node replacement = null;", "", "                if (n.isBreak() || n.isContinue()) {", "                    Node target = n.getFirstChild();", "                    replacement = IR.block();", "                    replacement.useSourceInfoIfMissingFromForTree(n);", "                    replacement.addChildToFront(IR.doWhile(IR.falseNode(), IR.breakNode(target)).useSourceInfoFrom(n));", "                } else if (n.isReturn()) {", "                    replacement = IR.block();", "                    replacement.useSourceInfoIfMissingFromForTree(n);", "                    replacement.addChildToFront(IR.returnNode());", "                }", "", "                parent.replaceChild(n, replacement);", "            }", "        }", "    }"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 183, "new_lines": ["          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n)); // Adjusted logic to handle the bug more effectively"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.BLOCK && n.hasChildren()) {", "          Node first = n.getFirstChild();", "          return tryRemoveUnconditionalBranching(first);", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 160, "new_lines": ["        if (n.getType() == Token.BLOCK) {", "          if (n.hasChildren()) {", "            Node first = n.getFirstChild();", "            return tryRemoveUnconditionalBranching(first);", "          }", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 160, "new_lines": ["        if (n != null && n.getType() == Token.BLOCK && n.hasChildren()) {", "          Node first = n.getFirstChild();", "          return tryRemoveUnconditionalBranching(first);"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    void tryRemoveUnconditionalBranching(Node n) {", "        if (NodeUtil.isControlStructure(n)) {", "            if (n.isBreak() || n.isContinue() || n.isReturn()) {", "                Node parent = n.getParent();", "                Node replacement = null;", "", "                if (n.isBreak() || n.isContinue()) {", "                    Node target = n.getFirstChild();", "                    replacement = IR.block();", "                    replacement.useSourceInfoIfMissingFromForTree(n);", "                    replacement.addChildToFront(IR.doWhile(IR.falseNode(), IR.breakNode(target)).useSourceInfoFrom(n));", "                } else if (n.isReturn()) {", "                    replacement = IR.block();", "                    replacement.useSourceInfoIfMissingFromForTree(n);", "                    replacement.addChildToFront(IR.returnNode());", "                }", "", "                parent.replaceChild(n, replacement);", "            }", "        }", "    "]}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "modifications": [{"line_number": 183, "modified_line": "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n)); // Adjusted logic to handle the bug more effectively"}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 161, "new_lines": ["        if (n.getType() == Token.BLOCK && n.hasChildren()) {", "          Node first = n.getFirstChild();", "          return tryRemoveUnconditionalBranching(first);", "        "]}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 160, "new_lines": ["        if (n.getType() == Token.BLOCK) {", "          if (n.hasChildren()) {", "            Node first = n.getFirstChild();", "            return tryRemoveUnconditionalBranching(first);", "          ", "        }"]}]}][
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() != null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.IF) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.FUNCTION) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.CASE) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.DEFAULT) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n == null || n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() != null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() != 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 2) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(1).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n == null) {", "            return null;", "        }"]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        }"]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n == null || n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        }"]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        }"]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    void tryRemoveUnconditionalBranching(Node n) {", "        if (NodeUtil.isControlStructure(n)) {", "            if (n.isBreak() || n.isContinue() || n.isReturn()) {", "                Node parent = n.getParent();", "                Node replacement = null;", "", "                if (n.isBreak() || n.isContinue()) {", "                    Node target = n.getFirstChild();", "                    replacement = IR.block();", "                    replacement.useSourceInfoIfMissingFromForTree(n);", "                    replacement.addChildToFront(IR.doWhile(IR.falseNode(), IR.breakNode(target)).useSourceInfoFrom(n));", "                } else if (n.isReturn()) {", "                    replacement = IR.block();", "                    replacement.useSourceInfoIfMissingFromForTree(n);", "                    replacement.addChildToFront(IR.returnNode());", "                }", "", "                parent.replaceChild(n, replacement);", "            }", "        }", "    }"]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        }"]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 161, "new_lines": ["        if (n.getType() == Token.BLOCK && n.hasChildren()) {", "          Node first = n.getFirstChild();", "          return tryRemoveUnconditionalBranching(first);", "        }"]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 160, "new_lines": ["        if (n.getType() == Token.BLOCK) {", "          if (n.hasChildren()) {", "            Node first = n.getFirstChild();", "            return tryRemoveUnconditionalBranching(first);", "          }", "        }"]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 160, "new_lines": ["        if (n != null && n.getType() == Token.BLOCK && n.hasChildren()) {", "          Node first = n.getFirstChild();", "          return tryRemoveUnconditionalBranching(first);"]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 196, "modified_line": "    if (n != null && n.getType() == Token.SWITCH) {"}]},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 196, "modified_line": "    if (n != null && n.getType() == Token.SWITCH) {"}]},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n.getType() == Token.SWITCH) {", "        return tryRemoveUnconditionalBranching(n.getFirstChild());", "    }"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    void tryRemoveUnconditionalBranching(Node n) {", "        if (NodeUtil.isControlStructure(n)) {", "            if (n.isBreak() || n.isContinue() || n.isReturn()) {", "                Node parent = n.getParent();", "                Node replacement = null;", "", "                if (n.isBreak() || n.isContinue()) {", "                    Node target = n.getFirstChild();", "                    replacement = IR.block();", "                    replacement.useSourceInfoIfMissingFromForTree(n);", "                    replacement.addChildToFront(IR.doWhile(IR.falseNode(), IR.breakNode(target)).useSourceInfoFrom(n));", "                } else if (n.isReturn()) {", "                    replacement = IR.block();", "                    replacement.useSourceInfoIfMissingFromForTree(n);", "                    replacement.addChildToFront(IR.returnNode());", "                }", "", "                parent.replaceChild(n, replacement);", "            }", "        }", "    "}]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 183, "new_lines": ["          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n)); // Adjusted logic to handle the bug more effectively"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": [{"line_number": 183, "modified_line": "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n)); // Adjusted logic to handle the bug more effectively"}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 161, "new_lines": ["        if (n.getType() == Token.BLOCK && n.hasChildren()) {", "          Node first = n.getFirstChild();", "          return tryRemoveUnconditionalBranching(first);", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 160, "new_lines": ["        if (n.getType() == Token.BLOCK) {", "          if (n.hasChildren()) {", "            Node first = n.getFirstChild();", "            return tryRemoveUnconditionalBranching(first);", "          ", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 160, "new_lines": ["        if (n != null && n.getType() == Token.BLOCK && n.hasChildren()) {", "          Node first = n.getFirstChild();", "          return tryRemoveUnconditionalBranching(first);"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n.getType() == Token.SWITCH) {", "        return tryRemoveUnconditionalBranching(n.getFirstChild());", "    "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n.getType() == Token.SWITCH) {", "        return tryRemoveUnconditionalBranching(n.getFirstChild());", "    "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    void tryRemoveUnconditionalBranching(Node n) {", "        if (NodeUtil.isControlStructure(n)) {", "            if (n.isBreak() || n.isContinue() || n.isReturn()) {", "                Node parent = n.getParent();", "                Node replacement = null;", "", "                if (n.isBreak() || n.isContinue()) {", "                    Node target = n.getFirstChild();", "                    replacement = IR.block();", "                    replacement.useSourceInfoIfMissingFromForTree(n);", "                    replacement.addChildToFront(IR.doWhile(IR.falseNode(), IR.breakNode(target)).useSourceInfoFrom(n));", "                } else if (n.isReturn()) {", "                    replacement = IR.block();", "                    replacement.useSourceInfoIfMissingFromForTree(n);", "                    replacement.addChildToFront(IR.returnNode());", "                }", "", "                parent.replaceChild(n, replacement);", "            }", "        }", "    "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 161, "new_lines": ["        if (n.getType() == Token.BLOCK && n.hasChildren()) {", "          Node first = n.getFirstChild();", "          return tryRemoveUnconditionalBranching(first);", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 183], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 160, "new_lines": ["        if (n.getType() == Token.BLOCK) {", "          if (n.hasChildren()) {", "            Node first = n.getFirstChild();", "            return tryRemoveUnconditionalBranching(first);", "          ", "        }"]}], "deletions": [153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 183], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 160, "new_lines": ["        if (n != null && n.getType() == Token.BLOCK && n.hasChildren()) {", "          Node first = n.getFirstChild();", "          return tryRemoveUnconditionalBranching(first);"]}], "deletions": [153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 183], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.has[
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    void tryRemoveUnconditionalBranching(Node n) {", "        if (NodeUtil.isControlStructure(n)) {", "            if (n.isBreak() || n.isContinue() || n.isReturn()) {", "                Node parent = n.getParent();", "                Node replacement = null;", "", "                if (n.isBreak() || n.isContinue()) {", "                    Node target = n.getFirstChild();", "                    replacement = IR.block();", "                    replacement.useSourceInfoIfMissingFromForTree(n);", "                    replacement.addChildToFront(IR.doWhile(IR.falseNode(), IR.breakNode(target)).useSourceInfoFrom(n));", "                } else if (n.isReturn()) {", "                    replacement = IR.block();", "                    replacement.useSourceInfoIfMissingFromForTree(n);", "                    replacement.addChildToFront(IR.returnNode());", "                }", "", "                parent.replaceChild(n, replacement);", "            }", "        }", "    "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 183, "modified_line": "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n)); // Adjusted logic to handle the bug more effectively"}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"]], "insertions": [{"line_number": 161, "new_lines": ["        if (n.getType() == Token.BLOCK && n.hasChildren()) {", "          Node first = n.getFirstChild();", "          return tryRemoveUnconditionalBranching(first);", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"]], "insertions": [{"line_number": 160, "new_lines": ["        if (n.getType() == Token.BLOCK) {", "          if (n.hasChildren()) {", "            Node first = n.getFirstChild();", "            return tryRemoveUnconditionalBranching(first);", "          ", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"]], "insertions": [{"line_number": 160, "new_lines": ["        if (n != null && n.getType() == Token.BLOCK && n.hasChildren()) {", "          Node first = n.getFirstChild();", "          return tryRemoveUnconditionalBranching(first);"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n.getType() == Token.SWITCH) {"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n.getType() == Token.SWITCH) {"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n.getType() == Token.SWITCH) {"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n.getType() == Token.SWITCH) {"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n != undefined && n.getType() == Token.SWITCH) {"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n != undefined && n != 'undefined' && n.getType() == Token.SWITCH) {"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n != undefined && n != 'undefined' && n != 'null' && n.getType() == Token.SWITCH) {"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    void tryRemoveUnconditionalBranching(Node n) {", "        if (NodeUtil.isControlStructure(n)) {", "            if (n.isBreak() || n.isContinue() || n.isReturn()) {", "                Node parent = n.getParent();", "                Node replacement = null;", "", "                if (n.isBreak() || n.isContinue()) {", "                    Node target = n.getFirstChild();", "                    replacement = IR.block();", "                    replacement.useSourceInfoIfMissingFromForTree(n);", "                    replacement.addChildToFront(IR.doWhile(IR.falseNode(), IR.breakNode(target)).useSourceInfoFrom(n));", "                } else if (n.isReturn()) {", "                    replacement = IR.block();", "                    replacement.useSourceInfoIfMissingFromForTree(n);", "                    replacement.addChildToFront(IR.returnNode());", "                }", "", "                parent.replaceChild(n, replacement);", "            }", "        }", "    "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "modifications": [{"line_number": 183, "modified_line": "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n)); // Adjusted logic to handle the bug more effectively"}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "modifications": [{"line_number": 183, "modified_line": "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 161, "new_lines": ["        if (n.getType() == Token.BLOCK && n.hasChildren()) {", "          Node first = n.getFirstChild();", "          return tryRemoveUnconditionalBranching(first);", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 160, "new_lines": ["        if (n.getType() == Token.BLOCK) {", "          if (n.hasChildren()) {", "            Node first = n.getFirstChild();", "            return tryRemoveUnconditionalBranching(first);", "          ", "        }"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 160, "new_lines": ["        if (n != null && n.getType() == Token.BLOCK && n.hasChildren()) {", "          Node first = n.getFirstChild();", "          return tryRemoveUnconditionalBranching(first);"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "modifications": [{"line_number": 196, "modified_line": "    if (n != null && n.getType() == Token.SWITCH) {"}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "modifications": [{"line_number": 196, "modified_line": "    if (n != null && n.getType() == Token.SWITCH) {"}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }[
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["// New line added for bug resolution"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["// Bug fix line added here"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["// Fix for bug added here"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["// Bug fix inserted here"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null) {", "            return tryRemoveUnconditionalBranching(n);", "        }"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        }"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n.getType() == Token.SWITCH) {", "        return tryRemoveUnconditionalBranching(n);", "    }"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null) {", "        return tryRemoveUnconditionalBranching(n.getFirstChild());", "    }"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n != undefined && n.getType() == Token.SWITCH) {", "        return tryRemoveUnconditionalBranching(n.getFirstChild());", "    }"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n != undefined && n.getType() == Token.SWITCH) {", "        return tryRemoveUnconditionalBranching(n.getFirstChild());", "    }"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n != undefined && n != 'undefined' && n.getType() == Token.SWITCH) {"]}]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n != undefined && n != 'undefined' && n != 'null' && n.getType() == Token.SWITCH) {"]}]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n != undefined && n != 'undefined' && n != 'null' && n != 'null' && n.getType() == Token.SWITCH) {"]}]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n != undefined && n != 'undefined' && n != 'null' && n != 'null' && n != 'undefined' && n.getType() == Token.SWITCH) {"]}]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n != undefined && n != 'undefined' && n != 'null' && n != 'null' && n != 'undefined' && n != 'null' && n.getType() == Token.SWITCH) {"]}]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n != undefined && n != 'undefined' && n != 'null' && n != 'null' && n != 'undefined' && n != 'null' && n != 'undefined' && n.getType() == Token.SWITCH) {"]}]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]
}
][
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    void tryRemoveUnconditionalBranching(Node n) {", "        if (NodeUtil.isControlStructure(n)) {", "            if (n.isBreak() || n.isContinue() || n.isReturn()) {", "                Node parent = n.getParent();", "                Node replacement = null;", "", "                if (n.isBreak() || n.isContinue()) {", "                    Node target = n.getFirstChild();", "                    replacement = IR.block();", "                    replacement.useSourceInfoIfMissingFromForTree(n);", "                    replacement.addChildToFront(IR.doWhile(IR.falseNode(), IR.breakNode(target)).useSourceInfoFrom(n));", "                } else if (n.isReturn()) {", "                    replacement = IR.block();", "                    replacement.useSourceInfoIfMissingFromForTree(n);", "                    replacement.addChildToFront(IR.returnNode());", "                }", "", "                parent.replaceChild(n, replacement);", "            }", "        }", "    "]}], "deletions": [183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        "]}], "deletions": [183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [], "deletions": [183], "modifications": [{"line_number": 183, "modified_line": "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n)); // Adjusted logic to handle the bug more effectively"}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 161, "new_lines": ["        if (n.getType() == Token.BLOCK && n.hasChildren()) {", "          Node first = n.getFirstChild();", "          return tryRemoveUnconditionalBranching(first);", "        "]}], "deletions": [183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 160, "new_lines": ["        if (n.getType() == Token.BLOCK) {", "          if (n.hasChildren()) {", "            Node first = n.getFirstChild();", "            return tryRemoveUnconditionalBranching(first);", "          }", "        "]}], "deletions": [183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 160, "new_lines": ["        if (n != null && n.getType() == Token.BLOCK && n.hasChildren()) {", "          Node first = n.getFirstChild();", "          return tryRemoveUnconditionalBranching(first);"]}], "deletions": [183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [], "deletions": [183], "modifications": [{"line_number": 196, "modified_line": "    if (n != null && n.getType() == Token.SWITCH) {"}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [], "deletions": [183], "modifications": [{"line_number": 196, "modified_line": "    if (n != null && n.getType() == Token.SWITCH) {"}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [], "deletions": [183], "modifications": [{"line_number": 196, "modified_line": "    if (n != null && n != undefined && n.getType() == Token.SWITCH) {"}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [], "deletions": [183], "modifications": [{"line_number": 196, "modified_line": "    if (n != null && n != undefined && n != 'undefined' && n.getType() == Token.SWITCH) {"}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [], "deletions": [183], "modifications": [{"line_number": 196, "modified_line": "    if (n != null && n != undefined && n != 'undefined' && n != 'null' && n.getType() == Token.SWITCH) {"}]},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [], "deletions": [183], "modifications": [{"line_number": 196, "modified_line": "    if (n != null && n != undefined && n != 'undefined' && n != 'null' && n != 'null' && n.getType() == Token.SWITCH)[
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n.getType() == Token.SWITCH) {"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n != undefined && n.getType() == Token.SWITCH) {"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n != undefined && n != 'undefined' && n.getType() == Token.SWITCH) {"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n != undefined && n != 'undefined' && n != 'null' && n.getType() == Token.SWITCH) {"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n == null) {", "          return n;", "        }"]}], "deletions": [183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n.equals(null)) {", "          return n;", "        }"]}], "deletions": [183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n instanceof Node) {", "          return n;", "        }"]}], "deletions": [183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null) {", "          return n;", "        }"]}], "deletions": [183], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getParent() != null) {", "          return n;", "        }"]}], "deletions": [183], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["// Inserted fix to address the bug", "Node newNode = tryRemoveUnconditionalBranching(n);"]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["// Fix added based on bug report", "return newNode;"]}],"deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["// Mutation to address the bug", "return n;"]}],"deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["// Potential fix for the bug", "return n;"]}],"deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["// Bug fix attempt", "return newNode;"]}],"deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["// Fix for the bug", "return newNode;"]}],"deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["// Bug fix", "return newNode;"]}],"deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["// Attempted fix for the bug", "return newNode;"]}],"deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["// Fixing the bug", "return newNode;"]}],"deletions": [], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n.getType() == Token.SWITCH) {", "        return tryRemoveUnconditionalBranching(n.getFirstChild());", "    "]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n != undefined && n.getType() == Token.SWITCH) {", "        return tryRemoveUnconditionalBranching(n.getFirstChild());", "    "]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n != undefined && n != 'undefined' && n.getType() == Token.SWITCH) {", "        return tryRemoveUnconditionalBranching(n.getFirstChild());", "    "]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n != undefined && n != 'undefined' && n != 'null' && n.getType() == Token.SWITCH) {", "        return tryRemoveUnconditionalBranching(n.getFirstChild());", "    "]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n.getType() == Token.SWITCH) {", "        return tryRemoveUnconditionalBranching(n.getFirstChild());", "    "]}], "deletions": [], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n == null) {", "            return n;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null) {", "            return n;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getParent() != null) {", "            return n;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getParent() != null && n.getParent().getType() == Token.BLOCK) {", "            return n;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getParent() != null && n.getType() == Token.BLOCK) {", "            return n;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getParent() != null && n.getParent().getType() == Token.BLOCK) {", "            return n;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getParent() != null && n.getParent().getType() == Token.RETURN) {", "            return n;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.RETURN) {", "            return n;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getParent() != null && n.getParent().getType() == Token.RETURN) {", "            return n;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getParent() != null && n.getParent().getType() == Token.CONTINUE) {", "            return n;", "        }"]}], "deletions": [], "modifications": []}
][
    {
        "file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "target_lines": [["153", "    if (n == null || n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]],
        "insertions": [{"line_number": 196, "new_lines": ["        if (n.getParent() == null) {", "          return n;", "        }"]}]
    },
    {
        "file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]],
        "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        }"]}]
    },
    {
        "file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]],
        "modifications": [{"line_number": 183, "modified_line": "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n)); // Adjusted logic to handle the bug more effectively"}]
    },
    {
        "file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]],
        "insertions": [{"line_number": 161, "new_lines": ["        if (n.getType() == Token.BLOCK && n.hasChildren()) {", "          Node first = n.getFirstChild();", "          return tryRemoveUnconditionalBranching(first);", "        "]}]
    },
    {
        "file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]],
        "modifications": [{"line_number": 196, "modified_line": "    if (n != null && n.getType() == Token.SWITCH) {"}]
    }
][
{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        }"]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n != null && n.getType() == Token.SWITCH) {", "            return tryRemoveUnconditionalBranching(n.getFirstChild());", "        }"]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n.getType() == Token.BLOCK) {", "          if (n.hasChildren()) {", "            Node first = n.getFirstChild();", "            return tryRemoveUnconditionalBranching(first);", "          }", "        }"]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n.getType() == Token.SWITCH) {", "        return tryRemoveUnconditionalBranching(n.getFirstChild());", "    }"]}], "deletions": [], "modifications": []},

{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["    if (n != null && n != undefined && n.getType() == Token.SWITCH) {", "        return tryRemoveUnconditionalBranching(n.getFirstChild());", "    }"]}], "deletions": [], "modifications": []}
][
    {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (n == null) {", "            return n;", "        }"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
    {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (outEdges.isEmpty()) {", "            return n;", "        }"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
    {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (outEdges != null) {", "            return n;", "        }"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
    {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (outEdges != null && !outEdges.isEmpty()) {", "            return n;", "        }"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
    {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (outEdges == null || outEdges.isEmpty()) {", "            return n;", "        }"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
    {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (outEdges != null && outEdges.size() == 1) {", "            return n;", "        }"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
    {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (outEdges != null && outEdges.size() == 1 && outEdges.get(0) != null) {", "            return n;", "        }"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
    {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (outEdges != null && outEdges.size() == 1 && outEdges.get(0) != null && outEdges.get(0).getDestination() != null) {", "            return n;", "        }"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
    {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (outEdges != null && outEdges.size() == 1 && outEdges.get(0) != null && outEdges.get(0).getDestination() != null && outEdges.get(0).getDestination().getValue() != null) {", "            return n;", "        }"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
    {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (outEdges != null && outEdges.size() == 1 && outEdges.get(0) != null && outEdges.get(0).getDestination() != null && outEdges.get(0).getDestination().getValue() != null && outEdges.get(0).getDestination().getValue().getType() != null) {", "            return n;", "        }"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
    {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (outEdges != null && outEdges.size() == 1 && outEdges.get(0) != null && outEdges.get(0).getDestination() != null && outEdges.get(0).getDestination().getValue() != null && outEdges.get(0).getDestination().getValue().getType() != null && outEdges.get(0).getDestination().getValue().getType() == Token.BLOCK) {", "            return n;", "        }"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183], "modifications": []},
    {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        if (out