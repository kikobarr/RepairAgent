[
    {"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "        Validate.notBlank(name);"}]},
    {"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "        Validate.notEmpty(name.trim());"}]},
    {"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "        Validate.notEmpty(name.replaceAll(\"\\\\s\", \"\"));"}]},
    {"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "        Validate.notNull(name);"}]},
    {"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 21, "new_lines": ["        if (name == null) {", "            throw new IllegalArgumentException(\"Name must not be null\");", "        }"]}], "deletions": [22], "modifications": []},
    {"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 23, "new_lines": ["        if (name.isEmpty()) {", "            throw new IllegalArgumentException(\"Name must not be empty\");", "        }"]}], "deletions": [22], "modifications": []},
    {"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["        if (name == null) {", "            throw new IllegalArgumentException(\"Name must not be null\");", "        }"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["        if (name == null || name.trim().isEmpty()) {", "            throw new IllegalArgumentException(\"Name must not be empty\");", "        }"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["        if (name == null || name.isBlank()) {", "            throw new IllegalArgumentException(\"Name must not be blank\");", "        }"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["        if (name == null || name.trim().length() == 0) {", "            throw new IllegalArgumentException(\"Name must not be empty\");", "        }"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["if (name == null) {\n    throw new IllegalArgumentException(\"Name must not be null\");\n}"]}], "deletions": [22], "modifications": []},

{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["if (name == null || name.isEmpty()) {\n    throw new IllegalArgumentException(\"Name must not be null or empty\");\n}"]}], "deletions": [22], "modifications": []},

{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["if (name == null || name.trim().isEmpty()) {\n    throw new IllegalArgumentException(\"Name must not be null or blank\");\n}"]}], "deletions": [22], "modifications": []},

{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["if (name == null || name.isBlank()) {\n    throw new IllegalArgumentException(\"Name must not be null or empty\");\n}"]}], "deletions": [22], "modifications": []},

{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["if (name == null || name.length() == 0) {\n    throw new IllegalArgumentException(\"Name must not be null or empty\");\n}"]}], "deletions": [22], "modifications": []}
][
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["if (name.trim().isEmpty()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isBlank()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["if (name == null || name.isBlank()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.trim().isEmpty()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["if (name == null || name.isBlank()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.trim().isBlank()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["if (name == null || name.isBlank()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.trim().isBlank()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["if (name == null || name.trim().isEmpty()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.trim().isEmpty()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isBlank()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name == \"\") {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.trim().equals(\"\")) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.length() == 0) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isBlank() || name.isEmpty()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isBlank() || name.trim().isEmpty()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isBlank() || name.length() == 0) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isBlank() || name.equals(\"\") || name.length() == 0) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]}
][
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null) {\n    throw new IllegalArgumentException(\"Name must not be null\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isBlank()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.trim().isEmpty()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.trim().isEmpty() || name.isBlank()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["name = name.trim();"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["name = name.strip();"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["name = name.replaceAll(\"\\\\s\",\"\");"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["name = name.stripLeading();"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["name = name.stripTrailing();"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["name = name.replaceAll(\"\\\\s+\",\"\");"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank() || name.equals(\"\") || name.length() == 0) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank() || name.equals(\"\") || name.length() == 0 || name.length() == 0) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank() || name.equals(\"\") || name.length() == 0 || name.length() == 0 || name.isBlank()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank() || name.equals(\"\") || name.length() == 0 || name.length() == 0 || name.isBlank() || name.trim().length() == 0) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank() || name.equals(\"\") || name.length() == 0 || name.length() == 0 || name.isBlank() || name.trim().length() == 0 || name.isBlank()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank() || name.equals(\"\")) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank() || name.equals(\"\") || name.equals(\" \")) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}"}]}
][
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank() || name.equals(\"\") || name.equals(\" \")) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["name = name.trim();"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["name = name.strip();"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["name = name.trim();"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["name = name.strip();"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.isBlank()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.isBlank() || name.equals(\"\") || name.equals(\" \")) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank() || name.equals(\"\") || name.equals(\" \")) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.isBlank() || name.equals(\"\") || name.equals(\" \")) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank() || name.equals(\"\") || name.equals(\" \")) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["name = name.trim();"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["name = name.strip();"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["name = name.trim();"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["name = name.strip();"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.isBlank()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.isBlank() || name.equals(\"\") || name.equals(\" \")) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank() || name.equals(\"\") || name.equals(\" \")) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.isBlank() || name.equals(\"\") || name.equals(\" \")) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank() || name.equals(\"\") || name.equals(\" \")) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]}
][
    {"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
    {"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
    {"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
    {"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank() || name.equals(\"\") || name.equals(\" \")) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
    {"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank() || name.equals(\"\") || name.equals(\" \") || name.equalsIgnoreCase(\"null\")) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
    {"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank() || name.equals(\"\") || name.equals(\" \") || name.equalsIgnoreCase(\"null\") || name.equalsIgnoreCase(\"undefined\")) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
    {"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 21, "new_lines": ["// Adding a check for name being null\nif (name == null) {\n    throw new IllegalArgumentException(\"Name must not be null\");\n}"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 21, "new_lines": ["// Adding a check for name being empty or whitespace\nif (name.trim().isEmpty()) {\n    throw new IllegalArgumentException(\"Name must not be empty or whitespace\");\n}"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.isBlank()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank()) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank() || name.equals(\"\") || name.equals(\" \")) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank() || name.equals(\"\") || name.equals(\" \")) {\n    throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty()) {\n throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty()) {\n throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty()) {\n throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank()) {\n throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]}
][
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [], "deletions": [22], "modifications": [{"line_number": 22, "modified_line": "if (name == null || name.isEmpty()) {\n throw new IllegalArgumentException(\"Name must not be empty\");\n}\nValidate.notEmpty(name);"}]},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["name = name.trim(); // Trim the input before validation\n"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["if (name == null) { // Check for null input\n    throw new IllegalArgumentException(\"Name must not be null\");\n}\n"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["name = name.strip(); // Strip leading and trailing whitespaces\n"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/nodes/DocumentType.java", "target_lines": [["22", "        Validate.notEmpty(name);"]], "insertions": [{"line_number": 22, "new_lines": ["name = name.replaceAll(\"\\\\s\", \"\"); // Remove all whitespaces\n"]}], "deletions": [], "modifications": []}
]