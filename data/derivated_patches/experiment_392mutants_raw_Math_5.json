[
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NaN, Double.NaN);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(0.0, 0.0);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(1.0, 1.0);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(-1.0, -1.0);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(10.0, 10.0);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(-10.0, -10.0);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.MAX_VALUE, Double.MAX_VALUE);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.MIN_VALUE, Double.MIN_VALUE);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.POSITIVE_INFINITY, Double.NEGATIVE_INFINITY);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NaN, 1.0);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(0.0, Double.NaN);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(-1.0, Double.POSITIVE_INFINITY);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(1.0, Double.NEGATIVE_INFINITY);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.POSITIVE_INFINITY, 0.0);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NEGATIVE_INFINITY, 0.0);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.POSITIVE_INFINITY, 1.0);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NEGATIVE_INFINITY, 1.0);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.POSITIVE_INFINITY, -1.0);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NEGATIVE_INFINITY, -1.0);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.POSITIVE_INFINITY, Double.NaN);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NEGATIVE_INFINITY, Double.NaN);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NaN, Double.POSITIVE_INFINITY);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NaN, Double.NEGATIVE_INFINITY);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(0.0, Double.POSITIVE_INFINITY);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(0.0, Double.NEGATIVE_INFINITY);"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(1.0, Double.POSITIVE_INFINITY);"}]}
][{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NaN, Double.NaN); // Fixing the return value for reciprocal of zero"}]}]

[{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY); // Fixing the return value for reciprocal of zero"}]}]

[{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(0.0, 0.0); // Fixing the return value for reciprocal of zero"}]}]

[{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY); // Fixing the return value for reciprocal of zero"}]}]

[{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(1.0, 1.0); // Fixing the return value for reciprocal of zero"}]}]

[{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [{"line_number": 304, "new_lines": ["            // Handle reciprocal of zero case\n"]}], "deletions": [], "modifications": []}][
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NaN, Double.NaN); // Fixing the return value for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return Complex.NaN; // Fixing the return value for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return Complex.NaN(); // Fixing the return value for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return Complex.valueOf(Double.NaN, Double.NaN); // Fixing the return value for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY); // Fixing the return value for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(0.0, 0.0); // Fixing the return value for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return Complex.INF; // Fixing the return value for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return Complex.INF(); // Fixing the return value for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return Complex.ZERO; // Fixing the return value for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return Complex.ZERO(); // Fixing the return value for reciprocal of zero"}]}
][
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NaN, Double.NaN); // Fixing the return value for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY); // Fixing the return value for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY); // Fixing the return value for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(0.0, 0.0); // Fixing the return value for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(1.0, 1.0); // Fixing the return value for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [305], "modifications": []},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [{"line_number": 305, "new_lines": ["            // Inserted line to handle reciprocal of zero\n"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [{"line_number": 305, "new_lines": ["            // Inserted line to fix reciprocal of zero\n"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [{"line_number": 305, "new_lines": ["            return new Complex(0.0, 0.0); // Handling reciprocal of zero\n"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [{"line_number": 305, "new_lines": ["            return new Complex(Double.NaN, Double.NaN); // Fixing NaN return for reciprocal of zero\n"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(0.0, 0.0); // Correcting return value for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY); // Adjusted return for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY); // Updated return for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(1.0, 1.0); // Adjusted return value for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [{"line_number": 305, "new_lines": ["            return new Complex(1.0, 1.0); // Handling reciprocal of zero\n"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [{"line_number": 305, "new_lines": ["            return new Complex(Double.NaN, Double.NaN); // Fixing NaN return for reciprocal of zero\n"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(0.0, 0.0); // Correcting return value for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY); // Adjusted return for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY); // Updated return for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(1.0, 1.0); // Adjusted return value for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [{"line_number": 305, "new_lines": ["            return new Complex(1.0, 1.0); // Handling reciprocal of zero\n"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [{"line_number": 305, "new_lines": ["            return new Complex(Double.NaN, Double.NaN); // Fixing NaN return for reciprocal of zero\n"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [305], "modifications": []},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [{"line_number": 305, "new_lines": ["            // Inserted line to handle reciprocal of zero\n"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [{"line_number": 305, "new_lines": ["            // Inserted line to fix reciprocal of zero\n"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [{"line_number": 305, "new_lines": ["            return new Complex(0.0, 0.0); // Handling reciprocal of zero\n"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [{"line_number": 305, "new_lines": ["            return new Complex(Double.NaN, Double.NaN); // Fixing NaN return for reciprocal of zero\n"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NaN, Double.NaN); // Fixing the return value for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NaN, Double.NaN); // Fixing the return value for reciprocal of zero case"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NaN, Double.NaN); // Handling the special case of reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NaN, Double.NaN); // Dealing with reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NaN, Double.NaN); // Correcting the output for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NaN, Double.NaN); // Adjusting the result for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NaN, Double.NaN); // Fixing the output for reciprocal calculation"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NaN, Double.NaN); // Rectifying the result for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NaN, Double.NaN); // Adjusting return value for reciprocal of zero"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [{"line_number":305, "new_lines":["            // Handle the case of reciprocal of zero\n"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NaN, Double.NaN); // Fixing the return value for reciprocal of zero by creating a new Complex object with NaN values for both real and imaginary parts"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY); // Fixing the return value for reciprocal of zero by returning a new Complex object with positive infinity values for both real and imaginary parts"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(0.0, 0.0); // Fixing the return value for reciprocal of zero by returning a new Complex object with zero values for both real and imaginary parts"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY); // Fixing the return value for reciprocal of zero by returning a new Complex object with negative infinity values for both real and imaginary parts"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(1.0, 1.0); // Fixing the return value for reciprocal of zero by returning a new Complex object with 1.0 values for both real and imaginary parts"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NaN, 0.0); // Fixing the return value for reciprocal of zero by returning a new Complex object with NaN value for the real part and 0.0 for the imaginary part"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(0.0, Double.NaN); // Fixing the return value for reciprocal of zero by returning a new Complex object with 0.0 value for the real part and NaN for the imaginary part"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.POSITIVE_INFINITY, 0.0); // Fixing the return value for reciprocal of zero by returning a new Complex object with positive infinity for the real part and 0.0 for the imaginary part"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(0.0, Double.POSITIVE_INFINITY); // Fixing the return value for reciprocal of zero by returning a new Complex object with 0.0 for the real part and positive infinity for the imaginary part"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NEGATIVE_INFINITY, 0.0); // Fixing the return value for reciprocal of zero by returning a new Complex object with negative infinity for the real part and 0.0 for the imaginary part"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(0.0, Double.NEGATIVE_INFINITY); // Fixing the return value for reciprocal of zero by returning a new Complex object with 0.0 for the real part and negative infinity for the imaginary part"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(1.0, 0.0); // Fixing the return value for reciprocal of zero by returning a new Complex object with 1.0 for the real part and 0.0 for the imaginary part"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(0.0, 1.0); // Fixing the return value for reciprocal of zero by returning a new Complex object with 0.0 for the real part and 1.0 for the imaginary part"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.POSITIVE_INFINITY, Double.NaN); // Fixing the return value for reciprocal of zero by returning a new Complex object with positive infinity for the real part and NaN for the imaginary part"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NaN, Double.POSITIVE_INFINITY); // Fixing the return value for reciprocal of zero by returning a new Complex object with NaN for the real part and positive infinity for the imaginary part"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(1.0, 1.0); // Fixing the return value for reciprocal of zero by returning a new Complex object with 1.0 for both real and imaginary parts"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(-1.0, -1.0); // Fixing the return value for reciprocal of zero by returning a new Complex object with -1.0 for both real and imaginary parts"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return null; // Fixing the return value for reciprocal of zero by returning null instead of NaN"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return ZERO; // Fixing the return value for reciprocal of zero by returning the constant ZERO instead of NaN"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return INFINITY; // Fixing the return value for reciprocal of zero by returning the constant INFINITY instead of NaN"}]},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [{"line_number": 305, "new_lines": ["            // Handle reciprocal of zero case by throwing an exception\n"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [{"line_number": 305, "new_lines": ["            return ZERO; // Returning ZERO for reciprocal of zero\n"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [{"line_number": 305, "new_lines": ["            return new Complex(0.0, 0.0); // Return complex number with both parts as 0 for reciprocal of zero\n"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [{"line_number": 305, "new_lines": ["            return new Complex(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY); // Return complex number with both parts as positive infinity for reciprocal of zero\n"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [{"line_number": 305, "new_lines": ["            return new Complex(Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY); // Return complex number with both parts as negative infinity for reciprocal of zero\n"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [{"line_number": 305, "new_lines": ["            return new Complex(1.0, 1.0); // Return complex number with both parts as 1.0 for reciprocal of zero\n"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [{"line_number": 305, "new_lines": ["            return new Complex(Double.NaN, 0.0); // Return complex number with NaN real part and 0.0 imaginary part for reciprocal of zero\n"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [{"line_number": 305, "new_lines": ["            return new Complex(Double.POSITIVE_INFINITY, 0.0); // Return complex number with positive infinity real part and 0.0 imaginary part for reciprocal of zero\n"]}], "deletions": [], "modifications": []}
][
    {"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NaN, Double.NaN); // Fixing the return value for reciprocal of zero by creating a new Complex object with NaN values for both real and imaginary parts"}]},
    {"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY); // Fixing the return value for reciprocal of zero by returning positive infinity for both real and imaginary parts"}]},
    {"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return ZERO; // Fixing the return value for reciprocal of zero by returning ZERO Complex"}]},
    {"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(0.0, 0.0); // Fixing the return value for reciprocal of zero by returning a Complex with real and imaginary parts set to 0.0"}]},
    {"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.POSITIVE_INFINITY, Double.NEGATIVE_INFINITY); // Fixing the return value for reciprocal of zero by returning positive infinity for real part and negative infinity for imaginary part"}]},
    {"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 305, "modified_line": "            return new Complex(Double.NEGATIVE_INFINITY, Double.NaN); // Fixing the return value for reciprocal of zero by returning negative infinity for real part and NaN for imaginary part"}]},
    {"file_name": "org/apache/commons/math3/complex/Complex.java", "target_lines": [["305", "            return NaN;"]], "insertions": [{"line_number": 305, "new_lines": ["            // Handle reciprocal of zero case here"]}], "deletions": [], "modifications": []}
]