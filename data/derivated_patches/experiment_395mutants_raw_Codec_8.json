[
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length != outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [], "deletions": [420], "modifications": []},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [], "deletions": [420], "modifications": []},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["422", "            pos = outPos + 1;"], ["423", "            readPos = outPos + 1;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 422, "modified_line": "            pos = outPos + 1;"}, {"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail && outPos >= 0) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [], "deletions": [420], "modifications": []},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail && outPos >= 0 && outPos < outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [], "deletions": [420], "modifications": []},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail && outPos >= 0 && outPos < outAvail && outAvail > 0) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [], "deletions": [420], "modifications": []},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail && outPos >= 0 && outPos < outAvail && outAvail > 0 && outPos < outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [], "deletions": [420], "modifications": []},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && outAvail > 0 && out.length == outAvail) {"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 421, "modified_line": "            buffer = out.clone();"}, {"line_number": 422, "modified_line": "            pos = outPos + 1;"}, {"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"]], "insertions": [{"line_number": 170, "new_lines": ["                        if (len > 0) {"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length < outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [], "deletions": [420], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail) {"], ["425", "    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 419, "modified_line": "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["425", "    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail - 1) {"}, {"line_number": 424, "modified_line": "            readPos = outPos - 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [], "deletions": [420], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [], "deletions": [421], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [], "deletions": [422], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [], "deletions": [423], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [], "deletions": [424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [], "deletions": [425], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length != outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length < outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length > outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length == outAvail + 1) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length == outAvail - 1) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [{"line_number": 423, "new_lines": ["            readPos = outPos + 1;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [{"line_number": 423, "new_lines": ["            readPos = outPos - 1;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [{"line_number": 424, "new_lines": ["        }", "        // Added for clarification"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len - 1);"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 169, "modified_line": "                    if (c > 0 && b.length != len) {"}, {"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len - 1);"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 169, "modified_line": "                    if (c <= 0 && b.length == len) {"}, {"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len - 1);"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 169, "modified_line": "                    if (c > 0 && b.length == len + 1) {"}, {"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len - 1);"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len + 1);"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len + 1);"}, {"line_number": 171, "modified_line": "                    } // Fixed the condition"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 169, "modified_line": "                    if (c > 0 && b.length == len - 1) {"}, {"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len - 1);"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [{"line_number": 171, "new_lines": ["                    // Added for clarification"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [{"line_number": 171, "new_lines": ["                    } // Fixed the condition"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [{"line_number": 169, "new_lines": ["                    if (c > 0 && b.length == len - 1) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [{"line_number": 169, "new_lines": ["                    if (c > 0 && b.length == len + 1) {"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length != outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [420], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null || out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [420], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length < outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [420], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length > outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [420], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length != outAvail && out.length > 0) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [420], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length != outAvail && out != empty) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [420], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length != outAvail && out.length > 1) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [420], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length != outAvail && out.length > 2) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [420], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length != outAvail && out.length > 3) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [420], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length != outAvail && out.length > 4) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [420], "modifications": []}
][
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [], "deletions": [420], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outPos) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == readPos) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == pos) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outPos && outAvail == pos) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["421", "            buffer = out;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 421, "modified_line": "            buffer = new byte[out.length];"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["421", "            buffer = out;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 421, "modified_line": "            buffer = new byte[outAvail];"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 422, "modified_line": "            pos = out.length;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 422, "modified_line": "            pos = outAvail;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 423, "modified_line": "            readPos = out.length;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 423, "modified_line": "            readPos = outAvail;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 424, "modified_line": "        buffer = out;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 424, "modified_line": "        pos = outPos;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 424, "modified_line": "        readPos = outPos;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [], "deletions": [170], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, Math.max(len, b.length));"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, Math.min(len, b.length));"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, Math.abs(len));"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len + 1);"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len - 1);"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len * 2);"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len / 2);"}]}
][
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length < outAvail) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length >= outAvail) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail && out.length > 0 && outAvail > 0) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail && out.length < 100 && outAvail < 100) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail && out.length > outAvail && out.length % 2 == 0 && outAvail % 2 == 0) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail && out.length > outAvail && out.length % 2 == 1 && outAvail % 2 == 1) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail && out.length > outAvail && out.length % 2 == 0 && outAvail % 2 == 1) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail && out.length > outAvail && out.length % 2 == 1 && outAvail % 2 == 0) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail && (out.length - outAvail) < 10) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail && (out.length - outAvail) > 10) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [{"line_number": 170, "new_lines": ["                        // Additional fix for the bug"]}],"deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [{"line_number": 421, "new_lines": ["            // Fixing the bug by adding a check for outPos and outAvail values"], {"line_number": 423, "new_lines": ["            if (outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outPos) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outPos) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outPos) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outPos) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outPos) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && outPos >= 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && outPos < out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && outPos >= 0 && outPos < out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && outPos >= 0 && outPos < out.length && outAvail >= 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail < out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail > 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail > out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail < out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && outPos >= 0 && outPos < out.length && outAvail > 0 && outAvail <= out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [], "deletions": [420], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [], "deletions": [421], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [], "deletions": [422], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [], "deletions": [423], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [], "deletions": [424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [], "deletions": [425], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [{"line_number": 170, "new_lines": ["                        // Fixing the bug by limiting the length to the minimum of len and b.length"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [{"line_number": 170, "new_lines": ["                        // Fixing the bug by ensuring that offset is within the bounds of the array"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [{"line_number": 170, "new_lines": ["                        // Fixing the bug by checking if len is less than or equal to b.length"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [{"line_number": 170, "new_lines": ["                        // Fixing the bug by adding a check for the length of the buffer"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [{"line_number": 170, "new_lines": ["                        // Fixing the bug by ensuring that offset is not negative"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [{"line_number": 170, "new_lines": ["                        // Fixing the bug by verifying that both offset and len are non-negative"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], ["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [{"line_number": 170, "new_lines": ["                        // Fixing the bug by ensuring that len is within the bounds of the buffer"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail < out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && outPos >= 0 && outAvail >= 0) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && outPos < out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && outAvail < out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [420], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && outPos < out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len - 1);"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len + 1);"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len * 2);"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len / 2);"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len + offset);"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len - offset);"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, offset);"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [{"line_number": 170, "new_lines": ["                        // Some comment explaining the change"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [{"line_number": 170, "new_lines": ["                        base64.setInitialBuffer(b, offset, Math.min(len, b.length));"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [{"line_number": 170, "new_lines": ["                        base64.setInitialBuffer(b, offset, Math.max(len, b.length));"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [{"line_number": 170, "new_lines": ["                        base64.setInitialBuffer(b, offset, Math.abs(len));"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [170], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        // Modify the buffer initialization here"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [{"line_number": 170, "new_lines": ["                        // Inserted comment for clarity"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        /* Updated buffer initialization */"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        // Change buffer initialization logic"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        // Adjust buffer setup based on length"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        // Fix buffer initialization issue"}]}
][
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && outPos != outAvail) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && outPos != outAvail) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && outPos != out.length) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length < outAvail) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && outPos <= outAvail) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && outPos <= out.length) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && outPos < outAvail) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && outPos < out.length) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && outAvail <= out.length) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && outAvail < outPos) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && outAvail < out.length) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && outAvail != outPos) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && outAvail != out.length) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && outAvail > out.length) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && outPos > outAvail) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && outPos > out.length) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, Math.min(len, b.length));"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, Math.min(len, b.length + 1));"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, Math.min(len + 1, b.length));"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, Math.min(len - 1, b.length));"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, Math.min(len * 2, b.length));"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, Math.min(len / 2, b.length));"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, Math.min(len, b.length - 1));"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, Math.min(len, b.length + 1));"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, Math.min(len, b.length * 2));"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, Math.min(len, b.length / 2));"], "insertions": [], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["423", "            readPos = outPos - 1;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length < outAvail) {"], ["424", "        readPos = outPos + 1;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length != outAvail) {"], ["422", "            pos = outPos + 1;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], ["424", "            readPos = outPos + 2;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length < outAvail) {"], ["423", "            readPos = outPos - 2;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length < outAvail + 1) {"], ["423", "            readPos = outPos * 2;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail - 1) {"], ["422", "            pos = outPos - 2;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail - 1) {"], ["424", "            readPos = outPos / 2;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length != outAvail + 1) {"], ["422", "            pos = outPos * 2;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length < outAvail - 1) {"], ["424", "            readPos = outPos / 2;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length > outAvail) {"], ["423", "            readPos = outPos * 3;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail + 1) {"], ["422", "            pos = outPos / 3;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length > outAvail - 1) {"], ["424", "            readPos = outPos % 3;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail + 1) {"], ["423", "            readPos = outPos % 3;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length <= outAvail - 1) {"], ["422", "            pos = outPos % 3;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail - 1) {"], ["424", "            readPos = outPos + 3;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length <= outAvail + 1) {"], ["423", "            readPos = outPos + 3;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail - 1) {"], ["422", "            pos = outPos + 3;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length <= outAvail + 1) {"], ["424", "            readPos = outPos - 3;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail + 1) {"], ["423", "            readPos = outPos - 3;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length < outAvail - 1) {"], ["422", "            pos = outPos - 3;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail + 1) {"], ["424", "            readPos = outPos * 4;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length < outAvail - 1) {"], ["423", "            readPos = outPos * 4;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail - 1) {"], ["422", "            pos = outPos * 4;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length > outAvail + 1) {"], ["424", "            readPos = outPos * 5;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail + 1) {"], ["423", "            readPos = outPos * 5;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length <= outAvail - 1) {"], ["422", "            pos = outPos * 5;"]], "insertions": [], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && outAvail > 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && outAvail >= 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && outAvail < out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && outAvail <= out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && outAvail > outPos) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && outAvail >= outPos) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && outAvail < outPos) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && outAvail <= outPos) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outPos && outAvail == len) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail && outPos > 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail && outPos >= 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail && outPos < out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail && outPos <= out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail && outPos == len) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail && outPos != len) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail && outPos > 0 && outPos < out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail && outPos >= 0 && outPos <= out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail && outPos > 0 && outPos < len) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail && outPos >= 0 && outPos <= len) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && outPos > 0 && outPos < len) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && outPos >= 0 && outPos <= len) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, Math.max(len, b.length));"}]}
]```
[
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [], "deletions": [420], "modifications": []},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [420, 424], "modifications": []},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [421], "modifications": []},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [422], "modifications": []},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [423], "modifications": []},
    {"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"]], "insertions": [{"line_number": 170, "new_lines": ["                        base64.setInitialBuffer(b, offset, Math.min(len, b.length));"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"]], "insertions": [], "deletions": [170], "modifications": []}
]
```[
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (!(out != null && out.length == outAvail)) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outPos) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && outPos >= 0 && outPos < out.length) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outPos && outPos < outAvail) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [{"line_number": 420, "new_lines": ["        outPos = out.length / 2;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [420], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length != outAvail) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && outPos >= 0 && outPos < out.length) {"], "insertions": [{"line_number": 420, "new_lines": ["        outAvail = out.length / 2;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [{"line_number": 420, "new_lines": ["        outPos = outAvail - 1;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [{"line_number": 420, "new_lines": ["        outPos = out.length - 1;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [{"line_number": 420, "new_lines": ["        outPos = outAvail - 1;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [{"line_number": 420, "new_lines": ["        outPos = out.length - 1;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [{"line_number": 420, "new_lines": ["        outPos = out.length - 1;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [{"line_number": 420, "new_lines": ["        outPos = outAvail - 1;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [{"line_number": 420, "new_lines": ["        outPos = out.length - 1;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [{"line_number": 420, "new_lines": ["        outPos = outAvail - 1;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len + 1);"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len - 1);"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len * 2);"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len / 2);"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len + 2);"}]}
][
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length < outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length != outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail != out.length) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail > out.length) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail < out.length) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail == 0"]}, ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail == out.length-1"]}, ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail == out.length+1"]}, ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && out.length > outAvail"]}, ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && out.length < outAvail"]}, ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && out.length <= outAvail"]}, ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && out.length >= outAvail"]}, ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outPos == 0"]}, ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outPos == out.length-1"]}, ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outPos == out.length+1"]}, ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outPos < 0"]}, ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outPos > 0"]}, ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outPos <= 0"]}, ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outPos >= out.length"]}, ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outPos <= out.length-1"]}, ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outPos <= out.length+1"]}, ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail < 0"]}, ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail > 0"]}, ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= 0"]}, ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": []}
][
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length < outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length >= outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length < outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length >= outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length < outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length >= outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length < outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length >= outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outAvail) {"}]}
][
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outPos) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outPos) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outPos) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outPos) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outPos) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out == null || out.length == outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out == null || out.length == outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null) {", "            if(out.length != outAvail) {", "                throw new IllegalArgumentException(\"Length of out array should match outAvail\");", "            }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null) {", "            if(out.length == outAvail) {", "                // Perform some additional operations here", "            }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null) {", "            if(out.length == outAvail) {", "                // Insert some logging statements here", "            }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null) {", "            if(out.length == outAvail) {", "                // Add some debug information here", "            }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null) {", "            if(out.length == outAvail) {", "                // Potential fix can be added here", "            }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null) {", "            if(out.length == outAvail) {", "                // Consider adding a fix here", "            }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null) {", "            if(out.length == outAvail) {", "                // Possible fix can be inserted here", "            }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null) {", "            if(out.length == outAvail) {", "                // Fix might be applied here", "            }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null) {", "            if(out.length == outAvail) {", "                // Fix could be implemented here", "            }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null) {", "            if(out.length == outAvail) {", "                // Potential fix here", "            }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null) {", "            if(out.length == outAvail) {", "                // Possible fix here", "            }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null) {", "            if(out.length == outAvail) {", "                // Fix might be placed here", "            }"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out == null || out.length != outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out == null || out.length < outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail && outPos >= 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail && outPos >= 0 && outPos < out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail && outPos >= 0 && outPos <= out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail < out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length == outAvail && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length == outAvail && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length == outAvail && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length == outAvail && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length == outAvail && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length == outAvail && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length == outAvail && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length == outAvail && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length == outAvail && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length == outAvail && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length == outAvail && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length == outAvail && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length == outAvail && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length == outAvail && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length == outAvail && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && out.length > 0 && outAvail > 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && out.length >= 0 && outAvail >= 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && out.length > outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && out.length >= outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && out.length > outAvail && out.length > 0 && outAvail > 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && out.length >= outAvail && out.length >= 0 && outAvail >= 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && out.length < outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && out.length <= outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && out.length <= outAvail && out.length >= 0 && outAvail >= 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && out.length > 0 && outAvail > 0 && out.length < outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && out.length >= 0 && outAvail >= 0 && out.length < outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && out.length > outAvail && out.length > 0 && outAvail > 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail && out.length >= outAvail && out.length >= 0 && outAvail >= 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail && out.length > 0 && outAvail > 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outAvail && out.length >= 0 && outAvail >= 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail && out.length < 0 && outAvail < 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail && out.length <= 0 && outAvail <= 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outAvail && out.length >= 0 && outAvail >= 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail && out.length < 0 && outAvail < 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail && out.length <= 0 && outAvail <= 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outAvail && out.length >= 0 && outAvail >= 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail && out.length > 0 && outAvail > 0) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outAvail && out.length >= 0 && outAvail >= 0) {"}]}
][
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}, {"line_number": 422, "modified_line": "            pos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outPos == outAvail) {"}, {"line_number": 422, "modified_line": "            pos = outPos - 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out == null && out.length == outAvail) {"}, {"line_number": 422, "modified_line": "            pos = outPos * 2;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}, {"line_number": 422, "modified_line": "            pos = outPos / 2;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}, {"line_number": 422, "modified_line": "            pos = outPos + outAvail;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}, {"line_number": 422, "modified_line": "            pos = outPos - outAvail;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outAvail) {"}, {"line_number": 422, "modified_line": "            pos = outPos + outAvail;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail) {"}, {"line_number": 422, "modified_line": "            pos = outPos * outAvail;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outPos) {"}, {"line_number": 422, "modified_line": "            pos = outPos / 2;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outPos) {"}, {"line_number": 422, "modified_line": "            pos = outPos + 2;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out == null && out.length == outAvail) {"}, {"line_number": 422, "modified_line": "            pos = outPos - 2;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out == null && out.length != outAvail) {"}, {"line_number": 422, "modified_line": "            pos = outPos * 3;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out == null && out.length == outAvail) {"}, {"line_number": 422, "modified_line": "            pos = outPos / 3;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}, {"line_number": 422, "modified_line": "            pos = outPos + 3;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out == null && out.length == outAvail) {"}, {"line_number": 422, "modified_line": "            pos = outPos - 3;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}, {"line_number": 422, "modified_line": "            pos = outPos + outAvail + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}, {"line_number": 422, "modified_line": "            pos = outPos - outAvail - 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outAvail) {"}, {"line_number": 422, "modified_line": "            pos = outPos + outAvail - 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail) {"}, {"line_number": 422, "modified_line": "            pos = outPos * outAvail + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outPos) {"}, {"line_number": 422, "modified_line": "            pos = outPos / 2 + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outPos) {"}, {"line_number": 422, "modified_line": "            pos = outPos + 2 - 1;"}]}
]```python
[
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["423", "            readPos = outPos + 1;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail) {"], ["424", "        pos = outPos + 1;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail) {"}, {"line_number": 424, "modified_line": "        pos = outPos + 1;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["425", "    } // end of setInitialBuffer method"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}, {"line_number": 425, "modified_line": "    } // end of setInitialBuffer method"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail) {"], ["422", "            pos = outPos + 2;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail) {"}, {"line_number": 422, "modified_line": "            pos = outPos + 2;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length >= outAvail) {"], ["421", "            buffer = out; // update buffer"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outAvail) {"}, {"line_number": 421, "modified_line": "            buffer = out; // update buffer"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length < outAvail) {"], ["423", "            readPos = outPos - 1;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos - 1;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], ["424", "        pos = outPos - 1;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}, {"line_number": 424, "modified_line": "        pos = outPos - 1;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["425", "    } // end of setInitialBuffer method"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}, {"line_number": 425, "modified_line": "    } // end of setInitialBuffer method"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail) {"], ["422", "            pos = outPos; // reset pos"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail) {"}, {"line_number": 422, "modified_line": "            pos = outPos; // reset pos"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length != outAvail) {"], ["424", "        pos = outPos + 2;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out == null || out.length != outAvail) {"}, {"line_number": 424, "modified_line": "        pos = outPos + 2;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length > outAvail) {"], ["423", "            readPos = outPos + 1;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out == null || out.length > outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["425", "    } // end of setInitialBuffer method"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail) {"}, {"line_number": 425, "modified_line": "    } // end of setInitialBuffer method"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length <= outAvail) {"], ["424", "        pos = outPos - 2;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out == null || out.length <= outAvail) {"}, {"line_number": 424, "modified_line": "        pos = outPos - 2;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length < outAvail) {"], ["421", "            buffer = out; // set buffer"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out == null || out.length < outAvail) {"}, {"line_number": 421, "modified_line": "            buffer = out; // set buffer"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], ["423", "            readPos = outPos - 1;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos - 1;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length != outAvail) {"], ["424", "        pos = outPos - 1;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out == null || out.length != outAvail) {"}, {"line_number": 424, "modified_line": "        pos = outPos - 1;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail) {"], ["425", "    } // ending setInitialBuffer method"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail) {"}, {"line_number": 425, "modified_line": "    } // ending setInitialBuffer method"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length < outAvail) {"], ["422", "            pos = outPos - 2; // adjust pos"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}, {"line_number": 422, "modified_line": "            pos = outPos - 2; // adjust pos"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length >= outAvail) {"], ["423", "            readPos = outPos; // set readPos"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos; // set readPos"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length < outAvail) {"], ["424", "        pos = outPos + 1; // increment pos"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}, {"line_number": 424, "modified_line": "        pos = outPos + 1; // increment pos"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["425", "    } // end of setInitialBuffer method"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail) {"}, {"line_number": 425, "modified_line": "    } // end of setInitialBuffer method"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length <= outAvail) {"], ["421", "            buffer = out; // update buffer"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out == null || out.length <= outAvail) {"}, {"line_number": 421, "modified_line": "            buffer = out; // update buffer"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length > outAvail) {"], ["423", "            readPos = outPos + 1; // advance readPos"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out == null || out.length > outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos + 1; // advance readPos"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length != outAvail) {"], ["422", "            pos = outPos + 2; // update pos"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out == null || out.length != outAvail) {"}, {"line_number": 422, "modified_line": "            pos = outPos + 2; // update pos"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length >= outAvail) {"], ["425", "    } // end of setInitialBuffer method"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out == null || out.length >= outAvail) {"}, {"line_number": 425, "modified_line": "    } // end of setInitialBuffer method"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length < outAvail) {"], ["424", "        pos = outPos - 2; // adjust pos"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out == null || out.length < outAvail) {"}, {"line_number": 424, "modified_line": "        pos = outPos - 2; // adjust pos"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length <= outAvail) {"], ["421", "            buffer = out; // set buffer"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out == null || out.length <= outAvail) {"}, {"line_number": 421, "modified_line": "            buffer = out; // set buffer"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length > outAvail) {"], ["423", "            readPos = outPos - 1; // decrement readPos"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out == null || out.length > outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos - 1; // decrement readPos"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out == null || out.length == outAvail) {"], ["425", "    } // end of setInitialBuffer method"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out == null || out.length == outAvail) {"}, {"line_number": 425, "modified_line": "    } // end of setInitialBuffer method"}]}
]
```  [
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["423", "            readPos = outPos + 1;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length < outAvail) {"], ["423", "            readPos = outPos - 1;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail) {"], ["423", "            readPos = outPos * 2;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length >= outAvail) {"], ["423", "            readPos = outPos / 2;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], ["423", "            readPos = outPos % 3;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["423", "            readPos = outPos + 2;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["423", "            readPos = outPos - 2;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["423", "            readPos = outPos * 3;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["423", "            readPos = outPos / 3;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length < outAvail) {"], ["423", "            readPos = outPos + 3;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail) {"], ["423", "            readPos = outPos - 3;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail) {"], ["423", "            readPos = outPos * 4;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], ["423", "            readPos = outPos / 4;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["423", "            readPos = outPos + 4;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["423", "            readPos = outPos - 4;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["423", "            readPos = outPos * 5;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["423", "            readPos = outPos / 5;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail) {"], ["423", "            readPos = outPos + 5;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail) {"], ["423", "            readPos = outPos - 5;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos * 6;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos / 6;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length < outAvail) {"], ["423", "            readPos = outPos + 6;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length < outAvail) {"], ["423", "            readPos = outPos - 6;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["423", "            readPos = outPos * 7;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["423", "            readPos = outPos / 7;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length == outAvail && outPos >= 0 && outPos < out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length == outAvail && outPos >= 0 && outPos < outAvail) {"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}, {"line_number": 422, "modified_line": "            pos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}, {"line_number": 424, "modified_line": ""}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}],
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["421", "            buffer = out;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 421, "modified_line": "            buffer = out.clone();"}, {"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["421", "            buffer = out;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 421, "modified_line": "            buffer = out.clone();"}, {"line_number": 424, "modified_line": ""}],
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["421", "            buffer = out;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 421, "modified_line": "            buffer = out.clone();"}],
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, Math.min(len, b.length + 1));"}],
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, Math.min(len, b.length - 1));"]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, Math.min(len, b.length * 2));"]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset + 1, len);"]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset - 1, len);"]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len + 1);"]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len - 1);"]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len * 2);"]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len / 2);"]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len % 2);"]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, -len);"]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len == 0 ? 1 : len);"]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, len == 0 ? 0 : len);"]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [{"line_number": 420, "new_lines": ["            outPos++;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [{"line_number": 420, "new_lines": ["            outPos--;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [{"line_number": 420, "new_lines": ["            outPos = 0;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [{"line_number": 420, "new_lines": ["            outPos = out.length - 1;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["422", "            pos = outPos;"]], "insertions": [{"line_number": 422, "new_lines": ["            pos++;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["422", "            pos = outPos;"]], "insertions": [{"line_number": 422, "new_lines": ["            pos--;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["422", "            pos = outPos;"]], "insertions": [{"line_number": 422, "new_lines": ["            pos = 0;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["422", "            pos = outPos;"]], "insertions": [{"line_number": 422, "new_lines": ["            pos = out.length - 1;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"]], "insertions": [{"line_number": 170, "new_lines": ["                        offset++;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"]], "insertions": [{"line_number": 170, "new_lines": ["                        offset--;"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail != out.length) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["424", "        }"]], "insertions": [{"line_number": 422, "new_lines": ["            pos = outPos + 1;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"], ["424", "        }"]], "insertions": [{"line_number": 423, "new_lines": ["            readPos = outPos + 1;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["424", "        }"]], "insertions": [{"line_number": 423, "new_lines": ["            readPos = outPos + 1;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"], ["424", "        }"]], "insertions": [{"line_number": 423, "new_lines": ["            readPos = outPos + 1;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["424", "        }"]], "insertions": [{"line_number": 422, "new_lines": ["            pos = outPos + 1;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"], ["424", "        }"]], "insertions": [{"line_number": 423, "new_lines": ["            readPos = outPos + 1;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["424", "        }"]], "insertions": [{"line_number": 423, "new_lines": ["            readPos = outPos + 1;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"], ["424", "        }"]], "insertions": [{"line_number": 423, "new_lines": ["            readPos = outPos + 1;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["169", "                    if (c > 0 && b.length == len) {"], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], "insertions": [], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [{"line_number": 421, "new_lines": ["            if (outPos < 0){", "                return;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 422, "new_lines": ["            if (outPos < 0 || outAvail < 0){", "                return;"]}], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail && outPos >= 0 && outAvail >= 0 && outPos < out.length && outAvail <= out.length) {"}, {"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [{"line_number": 424, "new_lines": ["            if (out.length == 0) {", "                return;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [{"line_number": 421, "new_lines": ["            if (outPos < 0 || outAvail < 0) {", "                return;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail && outPos >= 0 && outAvail >= 0 && outPos < out.length && outAvail <= out.length) {"}, {"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [{"line_number": 421, "new_lines": ["            if (outPos < 0){", "                return;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 422, "new_lines": ["            if (outPos < 0 || outAvail < 0){", "                return;"]}], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail && outPos >= 0 && outAvail >= 0 && outPos < out.length && outAvail <= out.length) {"}, {"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [{"line_number": 424, "new_lines": ["            if (out.length == 0) {", "                return;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [{"line_number": 421, "new_lines": ["            if (outPos < 0 || outAvail < 0) {", "                return;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail && outPos >= 0 && outAvail >= 0 && outPos < out.length && outAvail <= out.length) {"}, {"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [{"line_number": 421, "new_lines": ["            if (outPos < 0){", "                return;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 422, "new_lines": ["            if (outPos < 0 || outAvail < 0){", "                return;"]}], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail && outPos >= 0 && outAvail >= 0 && outPos < out.length && outAvail <= out.length) {"}, {"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [{"line_number": 424, "new_lines": ["            if (out.length == 0) {", "                return;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [{"line_number": 421, "new_lines": ["            if (outPos < 0 || outAvail < 0) {", "                return;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail && outPos >= 0 && outAvail >= 0 && outPos < out.length && outAvail <= out.length) {"}, {"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [{"line_number": 421, "new_lines": ["            if (outPos < 0){", "                return;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 422, "new_lines": ["            if (outPos < 0 || outAvail < 0){", "                return;"]}], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail && outPos >= 0 && outAvail >= 0 && outPos < out.length && outAvail <= out.length) {"}, {"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [{"line_number": 424, "new_lines": ["            if (out.length == 0) {", "                return;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [{"line_number": 421, "new_lines": ["            if (outPos < 0 || outAvail < 0) {", "                return;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail && outPos >= 0 && outAvail >= 0 && outPos < out.length && outAvail <= out.length) {"}, {"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [{"line_number": 421, "new_lines": ["            if (outPos < 0){", "                return;"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outAvail;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}, {"line_number": 424, "modified_line": "        } else { // Handle out.length >= outAvail"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail) {"}, {"line_number": 421, "modified_line": "            buffer = new byte[outAvail]; // Adjust buffer size"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}, {"line_number": 422, "modified_line": "            pos = Math.min(outPos, outAvail); // Ensure pos is within bounds"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["425", "    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outAvail) {"}, {"line_number": 425, "modified_line": "} // End of method setInitialBuffer"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["425", "    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}, {"line_number": 425, "modified_line": "} // End of setInitialBuffer method"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["421", "            buffer = out;"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 421, "modified_line": "            buffer = new byte[outAvail]; // Adjust buffer size"}, {"line_number": 422, "modified_line": "            pos = Math.min(outPos, outAvail); // Ensure pos is within bounds"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["421", "            buffer = out;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 421, "modified_line": "            buffer = new byte[outAvail]; // Adjust buffer size"}, {"line_number": 423, "modified_line": "            readPos = Math.min(outPos, outAvail); // Ensure readPos is within bounds"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["421", "            buffer = out;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 421, "modified_line": "            buffer = new byte[outAvail]; // Adjust buffer size"}, {"line_number": 424, "modified_line": "        } // End of if condition"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 422, "modified_line": "            pos = Math.min(outPos, outAvail); // Ensure pos is within bounds"}, {"line_number": 423, "modified_line": "            readPos = Math.min(outPos, outAvail); // Ensure readPos is within bounds"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["422", "            pos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 422, "modified_line": "            pos = Math.min(outPos, outAvail); // Ensure pos is within bounds"}, {"line_number": 424, "modified_line": "        } // End of if condition"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 423, "modified_line": "            readPos = Math.min(outPos, outAvail); // Ensure readPos is within bounds"}, {"line_number": 424, "modified_line": "        } // End of if condition"}]},
{"file_name": "org/apache/commons/codec/binary/Base64InputStream.java", "target_lines": [["170", "                        base64.setInitialBuffer(b, offset, len);"], ["171", "                    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 170, "modified_line": "                        base64.setInitialBuffer(b, offset, Math.min(len, out.length)); // Ensure length is within bounds"}, {"line_number": 171, "modified_line": "                    // End of if condition"}]}
][
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["423", "            readPos = outPos + 1;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length < outAvail) {"], ["423", "            readPos = outPos - 1;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], ["423", "            readPos = outPos + 2;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail) {"], ["423", "            readPos = outPos - 2;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length >= outAvail) {"], ["423", "            readPos = outPos * 2;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["423", "            readPos = outPos / 2;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], ["423", "            readPos = outPos % 3;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail) {"], ["423", "            readPos = outPos + 3;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length >= outAvail) {"], ["423", "            readPos = outPos - 3;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos * 3;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["423", "            readPos = outPos / 3;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length < outAvail) {"], ["423", "            readPos = outPos + 4;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], ["423", "            readPos = outPos - 4;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail) {"], ["423", "            readPos = outPos * 4;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length >= outAvail) {"], ["423", "            readPos = outPos / 4;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos % 5;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["423", "            readPos = outPos + 5;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length < outAvail) {"], ["423", "            readPos = outPos - 5;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], ["423", "            readPos = outPos * 5;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail) {"], ["423", "            readPos = outPos / 5;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length >= outAvail) {"], ["423", "            readPos = outPos % 6;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos + 6;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["423", "            readPos = outPos - 6;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length < outAvail) {"], ["423", "            readPos = outPos * 6;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], ["423", "            readPos = outPos / 6;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail) {"], ["423", "            readPos = outPos % 7;"]], "insertions": [], "deletions": [421, 422, 424], "modifications": []}
][
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outAvail;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outAvail;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos;"}]}
][
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length >= outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outAvail != 0 && out.length == outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outAvail > 0 && out.length == outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outAvail >= 0 && out.length == outAvail) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 423, "modified_line": "            readPos = outPos - 1;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail && outPos >= 0 && outPos < out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail && outPos >= 0 && outPos <= out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail && outPos > 0 && outPos < out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail && outPos > 0 && outPos <= out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail && outPos > 0 && outPos < out.length && outAvail > 0 && outAvail < out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 423, "modified_line": "            readPos = outPos + 2;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 423, "modified_line": "            readPos = outPos - 2;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 423, "modified_line": "            readPos = outPos * 2;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 423, "modified_line": "            readPos = outPos / 2;"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail && outPos > 0 && outPos < out.length && outAvail > 0 && outAvail < out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 421, "new_lines": ["            int temp = outPos;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 422, "new_lines": ["            buffer[temp] = out[temp];"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 421, "new_lines": ["            outPos++;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 422, "new_lines": ["            outPos--;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 421, "new_lines": ["            outPos += 2;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 422, "new_lines": ["            outPos -= 2;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 421, "new_lines": ["            outPos *= 2;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 422, "new_lines": ["            outPos /= 2;"]}], "deletions": [], "modifications": []}
][
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length < outAvail) {"], ["423", "            readPos = outPos - 1;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos - 1;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["423", "            readPos = outPos + 1;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos + 1;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], ["423", "            readPos = outPos + 2;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos + 2;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length > outAvail) {"], ["423", "            readPos = outPos - 2;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length > outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos - 2;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos * 2;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos * 2;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos / 2;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos / 2;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos % 2;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos % 2;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], ["423", "            readPos = outPos * 3;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos * 3;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], ["423", "            readPos = outPos / 3;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos / 3;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos + outAvail;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos + outAvail;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos - outAvail;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos - outAvail;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos * outAvail;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos * outAvail;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos / outAvail;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos / outAvail;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos % outAvail;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length == outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos % outAvail;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], ["423", "            readPos = outPos * outAvail * 2;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos * outAvail * 2;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], ["423", "            readPos = outPos + outAvail * 2;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos + outAvail * 2;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], ["423", "            readPos = outPos - outAvail * 2;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos - outAvail * 2;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], ["423", "            readPos = outPos * outAvail / 2;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos * outAvail / 2;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], ["423", "            readPos = outPos / outAvail * 2;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos / outAvail * 2;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length <= outAvail) {"], ["423", "            readPos = outPos % outAvail * 2;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos % outAvail * 2;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["423", "            readPos = outPos * 4 - 2;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos * 4 - 2;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["423", "            readPos = outPos * 4 + 2;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos * 4 + 2;"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length != outAvail) {"], ["423", "            readPos = outPos / 4 - 2;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length != outAvail) {"}, {"line_number": 423, "modified_line": "            readPos = outPos / 4 - 2;"}]}
][
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length != outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [420], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && outPos < out.length && outAvail < out.length) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outPos < out.length && outAvail < out.length) {"}]},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length > outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length < outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [420], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length != outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length >= outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length <= outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length > outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length < outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [420], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length != outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length >= outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length <= outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length > outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length < outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [420], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length != outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length >= outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length <= outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length > outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length < outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [420], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length != outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length >= outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length <= outAvail) {"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [], "deletions": [420], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length != outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail < out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail < out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length <= outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length <= outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && out.length <= outAvail) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"]}], "deletions": [], "modifications": []}
]```python
[
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length < outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"], ["425", "    }"], "insertions": [], "deletions": [420], "modifications": []},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["425", "    }"]], "insertions": [{"line_number": 420, "new_lines": ["        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"}, {"line_number": 424, "modified_line": "        } // Added a comment"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"}, {"line_number": 424, "modified_line": "// End of setInitialBuffer method"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"}, {"line_number": 423, "modified_line": "            readPos = pos; // Fixed readPos assignment"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"}, {"line_number": 421, "modified_line": "            buffer = out; // Fixed buffer assignment"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"}, {"line_number": 422, "modified_line": "            pos = outPos; // Fixed pos assignment"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"}, {"line_number": 424, "modified_line": "        } // Fixed method closure"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"}, {"line_number": 423, "modified_line": "            readPos = pos; // Fixed readPos assignment"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"}, {"line_number": 424, "modified_line": "        } // Added a comment"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"}, {"line_number": 424, "modified_line": "// End of setInitialBuffer method"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && outPos >= 0 && outPos < out.length && outAvail >= 0 && outAvail <= out.length) {"}, {"line_number": 423, "modified_line": "            readPos = pos; // Fixed readPos assignment"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length <= outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["419", "    void setInitialBuffer(byte[] out, int outPos, int outAvail) {"], ["420", "        if (out != null && out.length == outAvail) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["421", "            buffer = out;"], ["422", "            pos = outPos;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["422", "            pos = outPos;"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}]},
    {"file_name": "org/apache/commons/codec/binary/Base64.java", "target_lines": [["420", "        if (out != null && out.length == outAvail) {"], ["423", "            readPos = outPos;"], ["424", "        }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 420, "modified_line": "        if (out != null && out.length < outAvail) {"}]
]
```