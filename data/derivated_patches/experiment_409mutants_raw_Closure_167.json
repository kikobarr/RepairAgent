[
    {"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": [{"line_number": 301, "modified_line": "          left, leftIsRefineable, merged.typeA,"}, {"line_number": 302, "modified_line": "          right, rightIsRefineable, merged.typeB);"}, {"line_number": 348, "modified_line": "          left, leftIsRefineable, restrictedLeftType,"}, {"line_number": 349, "modified_line": "          right, rightIsRefineable, restrictedRightType);"}, {"line_number": 394, "modified_line": "    if (restrictedType != null && !restrictedType.equals(originalType)) {"}, {"line_number": 407, "modified_line": "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"}, {"line_number": 408, "modified_line": "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"}, {"line_number": 410, "modified_line": "        leftIsRefineable && restrictedLeftType != null;"}, {"line_number": 412, "modified_line": "        rightIsRefineable && restrictedRightType != null;"}, {"line_number": 430, "modified_line": "      JSType restrictedType ="}, {"line_number": 431, "modified_line": "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"}, {"line_number": 432, "modified_line": "      FlowScope informed = blindScope.createChildFlowScope();"}, {"line_number": 433, "modified_line": "      declareNameInScope(informed, name, restrictedType);"}, {"line_number": 434, "modified_line": "      return informed;"}]},
    {"file_name": "com/google/javascript/rhino/jstype/JSType.java", "target_lines": [["883", "//"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable || restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 412], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable || restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [302, 412], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType == null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [412], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable || restrictedRightType == null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 412], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable || restrictedLeftType == null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [302, 412], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable || restrictedLeftType == null;"], ["412", "        rightIsRefineable && restrictedRightType == null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [412], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType == null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 412], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType == null;"], ["412", "        rightIsRefineable || restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [302, 412], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable || restrictedLeftType == null;"], ["412", "        rightIsRefineable || restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 412], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable || restrictedRightType == null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [412], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable || restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType == null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 412], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType == null;"], ["412", "        rightIsRefineable && restrictedRightType == null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 412], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable || restrictedLeftType == null;"], ["412", "        rightIsRefineable || restrictedRightType == null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 412], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType == null;"], ["412", "        rightIsRefineable && restrictedRightType == null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restricted[
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// New line added for the fix"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Fix inserted here to resolve the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Potential fix added here"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Bug fix injected here"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Fix for the bug goes here"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 348, "new_lines": ["          // Inserted new line to fix the bug"]}], "deletions": [301, 302, 394, 407, 412, 430], "modifications": [{"line_number": 410, "modified_line": "        leftIsRefineable && restrictedLeftType != null && !restrictedLeftType.equals(originalType);"}, {"line_number": 408, "modified_line": "        rightIsRefineable && restrictedRightType != null && !restrictedRightType.equals(originalType);"}]},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 394, "new_lines": ["          // Inserted new line to fix the bug"]}], "deletions": [348, 412, 430], "modifications": [{"line_number": 410, "modified_line": "        leftIsRefineable && restrictedLeftType != null;"}, {"line_number": 408, "modified_line": "        rightIsRefineable && restrictedRightType != null;"}]},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 430, "new_lines": ["          // Inserted new line to fix the bug"]}], "deletions": [301, 394, 412], "modifications": [{"line_number": 410, "modified_line": "        leftIsRefineable && restrictedLeftType != null;"}, {"line_number": 408, "modified_line": "        rightIsRefineable && restrictedRightType != null;"}]}
][
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null && !restrictedLeftType.equals(originalType);"], ["412", "        rightIsRefineable && restrictedRightType != null && !restrictedRightType.equals(originalType);"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null && !restrictedLeftType.equals(originalType);"], ["412", "        rightIsRefineable && restrictedRightType != null && !restrictedRightType.equals(originalType);"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null && !restrictedLeftType.equals(originalType);"], ["412", "        rightIsRefineable && restrictedRightType != null && !restrictedRightType.equals(originalType);"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines":["//Insertion to fix bug"]}]],
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines":["//Fix for the issue"]}]],
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines":["//Mutation for fixing bug"]}]],
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines":["//Potential fix for the bug"]}]],
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines":["//Fix attempt"]}]]
][
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted new line here to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Additional line inserted here to address the issue"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Fix inserted at this line to correct the issue"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Fix added at this line to solve the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// New line inserted here as part of the bug fix"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line for bug fix"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 301, "modified_line": "          left, leftIsRefineable, merged.typeA,"}, {"line_number": 302, "modified_line": "          right, rightIsRefineable, merged.typeB);"}, {"line_number": 348, "modified_line": "          left, leftIsRefineable, restrictedLeftType,"}, {"line_number": 349, "modified_line": "          right, rightIsRefineable, restrictedRightType);"}, {"line_number": 394, "modified_line": "    if (restrictedType != null && !restrictedType.equals(originalType)) {"}, {"line_number": 407, "modified_line": "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"}, {"line_number": 408, "modified_line": "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"}, {"line_number": 410, "modified_line": "        leftIsRefineable && restrictedLeftType != null;"}, {"line_number": 412, "modified_line": "        rightIsRefineable && restrictedRightType != null;"}, {"line_number": 430, "modified_line": "      JSType restrictedType ="}, {"line_number": 431, "modified_line": "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"}, {"line_number": 432, "modified_line": "      FlowScope informed = blindScope.createChildFlowScope();"}, {"line_number": 433, "modified_line": "      declareNameInScope(informed, name, restrictedType);"}, {"line_number": 434, "modified_line": "      return informed;"}]},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 301, "modified_line": "          left, leftIsRefineable, merged.typeA,"}, {"line_number": 302, "modified_line": "          right, rightIsRefineable, merged.typeB);"}, {"line_number": 348, "modified_line": "          left, leftIsRefineable, restrictedLeftType,"}, {"line_number": 349, "modified_line": "          right, rightIsRefineable, restrictedRightType);"}, {"line_number": 394, "modified_line": "    if (restrictedType != null && !restrictedType.equals(originalType)) {"}, {"line_number": 407, "modified_line": "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"}, {"line_number": 408, "modified_line": "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"}, {"line_number": 410, "modified_line": "        leftIsRefineable && restrictedLeftType != null;"}, {"line_number": 412, "modified_line": "        rightIsRefineable && restrictedRightType != null;"}, {"line_number": 430, "modified_line": "      JSType restrictedType ="}, {"line_number": 431, "modified_line": "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"}, {"line_number": 432, "modified_line": "      FlowScope informed = blindScope.createChildFlowScope();"}, {"line_number": 433, "modified_line": "      declareNameInScope(informed, name, restrictedType);"}, {"line_number": 434, "modified_line": "      return informed;"}]},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 301, "modified_line": "          left, leftIsRefineable, merged.typeA,"}, {"line_number": 302, "modified_line": "          right, rightIsRefineable, merged.typeB);"}, {"line_number": 348, "modified_line": "          left, leftIsRefineable, restrictedLeftType,"}, {"line_number": 349, "modified_line": "          right, rightIsRefineable, restrictedRightType);"}, {"line_number": 394, "modified_line": "    if (restrictedType != null && !restrictedType.equals(originalType)) {"}, {"line_number": 407, "modified_line": "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"}, {"line_number": 408, "modified_line": "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"}, {"line_number": 410, "modified_line": "        leftIsRefineable && restrictedLeftType != null;"}, {"line_number": 412, "modified_line": "        rightIsRefineable && restrictedRightType != null;"}, {"line_number": 430, "modified_line": "      JSType restrictedType ="}, {"line_number": 431, "modified_line": "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"}, {"line_number": 432, "modified_line": "      FlowScope informed = blindScope.createChildFlowScope();"}, {"line_number": 433, "modified_line": "      declareNameInScope(informed, name, restrictedType);"}, {"line_number": 434, "modified_line": "      return informed;"}]},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 301, "modified_line": "          left, leftIsRefineable, merged.typeA,"}, {"line_number": 302, "modified_line": "          right, rightIsRefineable, merged.typeB);"}, {"line_number": 348, "modified_line": "          left, leftIsRefineable, restrictedLeftType,"}, {"line_number": 349, "modified_line": "          right, rightIsRefineable, restrictedRightType);"}, {"line_number": 394, "modified_line": "    if (restrictedType != null && !restrictedType.equals(originalType)) {"}, {"line_number": 407, "modified_line": "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"}, {"line_number": 408, "modified_line": "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"}, {"line_number": 410, "modified_line": "        leftIsRefineable && restrictedLeftType != null;"}, {"line_number": 412, "modified_line": "        rightIsRefineable && restrictedRightType != null;"}, {"line_number": 430, "modified_line": "      JSType restrictedType ="}, {"line_number": 431, "modified_line": "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"}, {"line_number": 432, "modified_line": "      FlowScope informed = blindScope.createChildFlowScope();"}, {"line_number": 433, "modified_line": "      declareNameInScope(informed, name, restrictedType);"}, {"line_number": 434, "modified_line": "      return informed;"}]}
][{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []}][
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 301, "modified_line": "          left, leftIsRefineable, merged.typeB,"}, {"line_number": 302, "modified_line": "          right, rightIsRefineable, merged.typeA);"}, {"line_number": 348, "modified_line": "          left, leftIsRefineable, restrictedRightType,"}, {"line_number": 349, "modified_line": "          right, rightIsRefineable, restrictedLeftType);"}, {"line_number": 394, "modified_line": "    if (restrictedType != null && !restrictedType.equals(originalType)) {"}, {"line_number": 407, "modified_line": "      Node left, boolean leftIsRefineable, JSType restrictedRightType,"}, {"line_number": 408, "modified_line": "      Node right, boolean rightIsRefineable, JSType restrictedLeftType) {"}, {"line_number": 410, "modified_line": "        leftIsRefineable && restrictedRightType != null;"}, {"line_number": 412, "modified_line": "        rightIsRefineable && restrictedLeftType != null;"}, {"line_number": 430, "modified_line": "      JSType restrictedType ="}, {"line_number": 431, "modified_line": "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"}, {"line_number": 432, "modified_line": "      FlowScope informed = blindScope.createChildFlowScope();"}, {"line_number": 433, "modified_line": "      declareNameInScope(informed, name, restrictedType);"}, {"line_number": 434, "modified_line": "      return informed;"}]},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 394, "modified_line": "    if (restrictedType != null && !restrictedType.equals(originalType)) {"}, {"line_number": 407, "modified_line": "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"}, {"line_number": 408, "modified_line": "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"}, {"line_number": 410, "modified_line": "        leftIsRefineable && restrictedLeftType != null && !restrictedLeftType.equals(originalType);"}, {"line_number": 412, "modified_line": "        rightIsRefineable && restrictedRightType != null && !restrictedRightType.equals(originalType);"}, {"line_number": 430, "modified_line": "      JSType restrictedType ="}, {"line_number": 431, "modified_line": "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"}, {"line_number": 432, "modified_line": "      FlowScope informed = blindScope.createChildFlowScope();"}, {"line_number": 433, "modified_line": "      declareNameInScope(informed, name, restrictedType);"}, {"line_number": 434, "modified_line": "      return informed;"}]},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 394, "modified_line": "    if (restrictedType != null && !restrictedType.equals(originalType)) {"}, {"line_number": 407, "modified_line": "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"}, {"line_number": 408, "modified_line": "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"}, {"line_number": 410, "modified_line": "        leftIsRefineable && restrictedLeftType != null && !restrictedLeftType.equals(originalType);"}, {"line_number": 412, "modified_line": "        rightIsRefineable && restrictedRightType != null && !restrictedRightType.equals(originalType);"}, {"line_number": 430, "modified_line": "      JSType restrictedType ="}, {"line_number": 431, "modified_line": "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"}, {"line_number": 432, "modified_line": "      FlowScope informed = blindScope.createChildFlowScope();"}, {"line_number": 433, "modified_line": "      declareNameInScope(informed, name, restrictedType);"}, {"line_number": 434, "modified_line": "      return informed;"}]},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 394, "modified_line": "    if (restrictedType != null && !restrictedType.equals(originalType)) {"}, {"line_number": 407, "modified_line": "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"}, {"line_number": 408, "modified_line": "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"}, {"line_number": 410, "modified_line": "        leftIsRefineable && restrictedLeftType != null && !restrictedLeftType.equals(originalType);"}, {"line_number": 412, "modified_line": "        rightIsRefineable && restrictedRightType != null && !restrictedRightType.equals(originalType);"}, {"line_number": 430, "modified_line": "      JSType restrictedType ="}, {"line_number": 431, "modified_line": "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"}, {"line_number": 432, "modified_line": "      FlowScope informed = blindScope.createChildFlowScope();"}, {"line_number": 433, "modified_line": "      declareNameInScope(informed, name, restrictedType);"}, {"line_number": 434, "modified_line": "      return informed;"}]}
][
    {
        "file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java",
        "target_lines": [
            ["301", "          left, leftIsRefineable, merged.typeA,"]
        ],
        "insertions": [],
        "deletions": [],
        "modifications": [
            {"line_number": 301, "modified_line": "          left, leftIsRefineable, merged.typeB,"}
        ]
    },
    {
        "file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java",
        "target_lines": [
            ["302", "          right, rightIsRefineable, merged.typeB);"]
        ],
        "insertions": [],
        "deletions": [],
        "modifications": [
            {"line_number": 302, "modified_line": "          right, rightIsRefineable, merged.typeA);"}
        ]
    },
    {
        "file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java",
        "target_lines": [
            ["348", "          left, leftIsRefineable, restrictedLeftType,"]
        ],
        "insertions": [],
        "deletions": [],
        "modifications": [
            {"line_number": 348, "modified_line": "          left, leftIsRefineable, restrictedRightType,"}
        ]
    },
    {
        "file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java",
        "target_lines": [
            ["349", "          right, rightIsRefineable, restrictedRightType);"]
        ],
        "insertions": [],
        "deletions": [],
        "modifications": [
            {"line_number": 349, "modified_line": "          right, rightIsRefineable, restrictedLeftType);"}
        ]
    },
    {
        "file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java",
        "target_lines": [
            ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"]
        ],
        "insertions": [],
        "deletions": [],
        "modifications": [
            {"line_number": 394, "modified_line": "    if (restrictedType != null && restrictedType.equals(originalType)) {"}
        ]
    },
    {
        "file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java",
        "target_lines": [
            ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"]
        ],
        "insertions": [],
        "deletions": [],
        "modifications": [
            {"line_number": 407, "modified_line": "      Node left, boolean leftIsRefineable, JSType restrictedRightType,"}
        ]
    },
    {
        "file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java",
        "target_lines": [
            ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"]
        ],
        "insertions": [],
        "deletions": [],
        "modifications": [
            {"line_number": 408, "modified_line": "      Node right, boolean rightIsRefineable, JSType restrictedLeftType) {"}
        ]
    },
    {
        "file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java",
        "target_lines": [
            ["410", "        leftIsRefineable && restrictedLeftType != null;"]
        ],
        "insertions": [],
        "deletions": [],
        "modifications": [
            {"line_number": 410, "modified_line": "        leftIsRefineable || restrictedLeftType != null;"}
        ]
    },
    {
        "file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java",
        "target_lines": [
            ["412", "        rightIsRefineable && restrictedRightType != null;"]
        ],
        "insertions": [],
        "deletions": [],
        "modifications": [
            {"line_number": 412, "modified_line": "        rightIsRefineable || restrictedRightType != null;"}
        ]
    },
    {
        "file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java",
        "target_lines": [
            ["430", "      JSType restrictedType ="]
        ],
        "insertions": [],
        "deletions": [],
        "modifications": [
            {"line_number": 430, "modified_line": "      JSType restrictedType = type.getRestrictedTypeGivenToBooleanOutcome(!outcome);"}
        ]
    },
    {
        "file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java",
        "target_lines": [
            ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"]
        ],
        "insertions": [],
        "deletions": [],
        "modifications": [
            {"line_number": 431, "modified_line": "          type.getRestrictedTypeGivenToBooleanOutcome(!outcome);"}
        ]
    },
    {
        "file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java",
        "target_lines": [
            ["432", "      FlowScope informed = blindScope.createChildFlowScope();"]
        ],
        "insertions": [],
        "deletions": [],
        "modifications": [
            {"line_number": 432, "modified_line": "      FlowScope informed = blindScope.createChildFlowScope(); // Fix for bug"}
        ]
    },
    {
        "file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java",
        "target_lines": [
            ["433", "      declareNameInScope(informed, name, restrictedType);"]
        ],
        "insertions": [],
        "deletions": [],
        "modifications": [
            {"line_number": 433, "modified_line": "      declareNameInScope(informed, name, restrictedType); // Adjusted call"}
        ]
    },
    {
        "file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java",
        "target_lines": [
            ["434", "      return informed;"]
        ],
        "insertions": [],
        "deletions": [],
        "modifications": [
            {"line_number": 434, "modified_line": "      return informed; // Potential fix"}
        ]
    },
    {
        "file_name": "com/google/javascript/rhino/jstype/JSType.java",
        "target_lines": [
            ["883", "//"]
        ],
        "insertions": [
            {"line_number": 883, "new_lines": ["// Inserted fix for bug here"]}
        ],
        "deletions": [],
        "modifications": []
    }
][
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []}
]