[
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() != Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() == Token.EXPR_RESULT || parent.getType() == Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [101], "modifications": []},
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() != Token.COMMA && parent.getType() != Token.EXPR_RESULT) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["123", "           n == parent.getFirstChild().getNext().getNext())) {"], ["124", "      } else {"], ["125", "      }"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [102], "modifications": []},
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (!gramps.isCall() && parent != gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [103], "modifications": []},
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent != gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [104], "modifications": []},
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && !n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [105], "modifications": []},
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && !\"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [106], "modifications": []},
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString()) || true) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [111], "modifications": []},
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n != parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [112], "modifications": []},
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR || parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [113], "modifications": []},
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK)[
    {"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() != Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() == Token.EXPR_RESULT && parent.getType() == Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (!n.isQualifiedName() && n.getJSDocInfo() == null) {"], ["135", "        return;"], ["136", "      } else if (!n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [101, 122, 134, 136], "modifications": []},
    {"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() != Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() != Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (!n.isQualifiedName() && n.getJSDocInfo() == null) {"], ["135", "        return;"], ["136", "      } else if (!n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [122], "modifications": []},
    {"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT || parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [122], "modifications": []},
    {"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR || parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [123], "modifications": []},
    {"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n != parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 123, "modified_line": "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n != parent.getFirstChild() ||"}]},
    {"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n != parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 124, "modified_line": "           n != parent.getFirstChild().getNext().getNext()) {"}]},
    {"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n != parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [104], "modifications": [{"line_number": 104, "modified_line": "        if (n != parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"}]},
    {"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 3 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [104], "modifications": [{"line_number": 104, "modified_line": "        if (n == parent.getFirstChild() && parent.getChildCount() == 3 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"}]},
    {"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.AND) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [101], "modifications": [{"line_number": 101, "modified_line": "    if (parent.getType() == Token.AND) {"}]},
    {"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA && parent.getType() == Token.AND) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent[
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() != Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            break;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            continue;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() == Token.EXPR_RESULT && parent.getType() == Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [106, 115], "modifications": []},
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA && gramps.isCall()) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [101], "modifications": []},
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA && n == parent.getFirstChild()) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [104], "modifications": []},
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString()) && parent.getParent().getType() == Token.COMMA) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 104, "modified_line": "if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString()) && parent.getParent().getType() == Token.COMMA) {"}]},
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString()) && n.getParent().getType() == Token.COMMA) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 104, "modified_line": "if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString()) && n.getParent().getType() == Token.COMMA) {"}]},
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.ADD) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [101], "modifications": []},
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [104], "modifications": []},
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [106], "modifications": []},
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [115], "modifications": []},
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent[
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [104], "modifications": [{"line_number": 104, "modified_line": "if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString()) && parent.getParent().getType() == Token.COMMA) {"}]}
][
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() != Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (!gramps.isCall() || parent != gramps.getFirstChild()) {"], ["104", "        if (n != parent.getFirstChild() || parent.getChildCount() != 2 || !n.getNext().isName() || !"eval".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n != parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType != Token.COMMA)"], ["115", "            break;"], ["116", "          if (ancestorType == Token.EXPR_RESULT || ancestorType == Token.BLOCK)"], ["117", "            continue;"], ["118", "          else"], ["119", "            return;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() == Token.EXPR_RESULT || parent.getType() == Token.BLOCK) {"], ["123", "      if (parent.getType() != Token.FOR || parent.getChildCount() != 4 || (n != parent.getFirstChild() &&"], ["124", "           n != parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (!n.isQualifiedName() || n.getJSDocInfo() == null) {"], ["135", "        return;"], ["136", "      } else if (!n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA || parent.getType() == Token.EXPR_RESULT) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() != Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.EXPR_RESULT || parent.getType() == Token.BLOCK) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() == Token.COMMA) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() != Token.COMMA && parent.getType() != Token.EXPR_RESULT) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (gramps.isCall() && parent == gramps.getFirstChild()) {"], ["104", "        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && \"eval\".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n == parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType == Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() == Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (n.isQualifiedName() && n.getJSDocInfo() != null) {"], ["135", "        return;"], ["136", "      } else if (n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/CheckSideEffects.java", "target_lines": [["101", "    if (parent.getType() == Token.COMMA) {"], ["102", "      Node gramps = parent.getParent();"], ["103", "      if (!gramps.isCall() || parent != gramps.getFirstChild()) {"], ["104", "        if (n != parent.getFirstChild() || parent.getChildCount() != 2 || !n.getNext().isName() || !"eval".equals(n.getNext().getString())) {"], ["106", "        }"], ["111", "      if (n != parent.getLastChild()) {"], ["112", "        for (Node an : parent.getAncestors()) {"], ["113", "          int ancestorType = an.getType();"], ["114", "          if (ancestorType != Token.COMMA)"], ["115", "            continue;"], ["116", "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)"], ["117", "            return;"], ["118", "          else"], ["119", "            break;"], ["120", "        }"], ["121", "      }"], ["122", "    } else if (parent.getType() == Token.EXPR_RESULT && parent.getType() == Token.BLOCK) {"], ["123", "      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||"], ["124", "           n == parent.getFirstChild().getNext().getNext())) {"], ["125", "      } else {"], ["127", "      }"], ["134", "      if (!n.isQualifiedName() || n.getJSDocInfo() == null) {"], ["135", "        return;"], ["136", "      } else if (!n.isExprResult()) {"], ["137", "        return;"], ["138", "      }"]], "insertions": [], "deletions": [], "modifications": []}
]