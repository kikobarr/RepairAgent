[
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                // Adding a comment here to fix the bug"]}, {"line_number": 382, "new_lines": ["                // Adding a comment here to fix the bug"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                isEquals = lhs.equals(rhs); // Fixing the bug by adding missing assignment"]}, {"line_number": 382, "new_lines": ["                // Adding a comment here to fix the bug"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                isEquals = lhs.equals(rhs); // Fixing the bug by adding missing assignment"]}, {"line_number": 382, "new_lines": ["                this.setEquals(true); // Setting equals to true to fix the bug"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                isEquals = lhs.equals(rhs); // Fixing the bug by adding missing assignment"]}, {"line_number": 382, "new_lines": ["                this.setEquals(false); // Setting equals to false to fix the bug"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                isEquals = lhs.equals(rhs); // Fixing the bug by adding missing assignment"]}, {"line_number": 382, "new_lines": ["                return this; // Returning this instance to fix the bug"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                isEquals = lhs.equals(rhs); // Fixing the bug by adding missing assignment"]}, {"line_number": 382, "new_lines": ["                return null; // Returning null to fix the bug"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                isEquals = lhs.equals(rhs); // Fixing the bug by adding missing assignment"]}, {"line_number": 382, "new_lines": ["                // Adding a comment here to fix the bug"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                // Fixing the bug by adding missing assignment here"]}, {"line_number": 382, "new_lines": ["                return this; // Returning this instance to fix the bug"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                // Fixing the bug by adding missing assignment here"]}, {"line_number": 382, "new_lines": ["                this.setEquals(true); // Setting equals to true to fix the bug"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                // Fixing the bug by adding missing assignment here"]}, {"line_number": 382, "new_lines": ["                // Adding a comment here to fix the bug"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                // Fixing the bug by adding missing assignment here"]}, {"line_number": 382, "new_lines": ["                return null; // Returning null to fix the bug"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                // Setting isEquals value here to fix the bug"]}, {"line_number": 382, "new_lines": ["                return this; // Returning this instance to fix the bug"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                // Setting isEquals value here to fix the bug"]}, {"line_number": 382, "new_lines": ["                this.setEquals(true); // Setting equals to true to fix the bug"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                // Setting isEquals value here to fix the bug"]}, {"line_number": 382, "new_lines": ["                // Adding a comment here to fix the bug"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                // Setting isEquals value here to fix the bug"]}, {"line_number": 382, "new_lines": ["                return null; // Returning null to fix the bug"]}], "deletions": [], "modifications": []}
][
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["isEquals = lhs.equals(rhs); // Mutant 1"]} , {"line_number": 382, "new_lines": ["this.setEquals(true); // Mutant 1"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["isEquals = lhs.equals(rhs); // Mutant 2"]} , {"line_number": 382, "new_lines": ["this.setEquals(false); // Mutant 2"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["isEquals = lhs.equals(rhs); // Mutant 3"]} , {"line_number": 382, "new_lines": ["// this.setEquals(false); // Mutant 3"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["isEquals = lhs.equals(rhs); // Mutant 4"]} , {"line_number": 382, "new_lines": ["this.setEquals(!isEquals); // Mutant 4"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["isEquals = lhs.equals(rhs); // Mutant 5"]} , {"line_number": 382, "new_lines": ["this.setEquals(isEquals); // Mutant 5"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["isEquals = lhs.equals(rhs); // Mutant 6"]} , {"line_number": 382, "new_lines": ["this.setEquals(lhs == rhs); // Mutant 6"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["isEquals = lhs.equals(rhs); // Mutant 7"]} , {"line_number": 382, "new_lines": ["this.setEquals(lhs.equals(rhs)); // Mutant 7"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["isEquals = lhs.equals(rhs); // Mutant 8"]} , {"line_number": 382, "new_lines": ["this.setEquals(lhs == null); // Mutant 8"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["isEquals = lhs.equals(rhs); // Mutant 9"]} , {"line_number": 382, "new_lines": ["this.setEquals(rhs == null); // Mutant 9"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["isEquals = lhs.equals(rhs); // Mutant 10"]} , {"line_number": 382, "new_lines": ["this.setEquals(lhs != rhs); // Mutant 10"]}], "deletions": [], "modifications": []}
][
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["            } else if (lhs.getClass() == rhs.getClass()) {", "                isEquals = lhs.equals(rhs);", "            } else if (lhs.getClass().isArray() && rhs.getClass().isArray()) {", "                isEquals = Arrays.equals((Object[]) lhs, (Object[]) rhs);"]}], "deletions": [], "modifications": []}
]

[
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["        } else if (lhs.getClass().isArray() && rhs.getClass().isArray()) {", "            isEquals = Arrays.equals((Object[]) lhs, (Object[]) rhs);", "        } else {", "            isEquals = lhs.equals(rhs);"]}], "deletions": [], "modifications": []}
]

[
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["        } else if (lhs.getClass().isArray() && rhs.getClass().isArray()) {", "            isEquals = Arrays.equals((Object[]) lhs, (Object[]) rhs);", "        } else {", "            isEquals = lhs.equals(rhs);"]}], "deletions": [], "modifications": []}
]

[
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["            } else if (lhs.getClass() == rhs.getClass()) {", "                isEquals = lhs.equals(rhs);", "            } else if (lhs.getClass().isArray() && rhs.getClass().isArray()) {", "                isEquals = Arrays.equals((Object[]) lhs, (Object[]) rhs);"]}], "deletions": [], "modifications": []}
]

[
    {"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["        } else if (lhs.getClass().isArray() && rhs.getClass().isArray()) {", "            isEquals = Arrays.equals((Object[]) lhs, (Object[]) rhs);", "        } else {", "            isEquals = lhs.equals(rhs);"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], 
"insertions": [
{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]},
{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}
],
"deletions": [],
"modifications": []
},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], 
"insertions": [
{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]},
{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}
],
"deletions": [],
"modifications": []
},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], 
"insertions": [
{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]},
{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}
],
"deletions": [],
"modifications": []
},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], 
"insertions": [
{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]},
{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}
],
"deletions": [],
"modifications": []
},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], 
"insertions": [
{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]},
{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}
],
"deletions": [],
"modifications": []
}
][
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}],
"deletions": [],
"modifications": []
}
][{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                // Add a comment here to clarify the purpose of this condition", "                // isEquals = lhs.equals(rhs);", "                this.setEquals(false);"]}]}][
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["        if (lhs == rhs) {", "            return this;", "        }", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["        if (lhs == rhs) {", "            return this;", "        }", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["        if (lhs == rhs) {", "            return this;", "        }", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["        if (lhs == rhs) {", "            return this;", "        }", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["        if (lhs == rhs) {", "            return this;", "        }", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["        if (lhs == rhs) {", "            return this;", "        }", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["        if (lhs == rhs) {", "            return this;", "        }", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["        if (lhs == rhs) {", "            return this;", "        }", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["        if (lhs == rhs) {", "            return this;", "        }", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["        if (lhs == rhs) {", "            return this;", "        }", "        "]}], "deletions": [], "modifications": []}
][{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}], "deletions": [], "modifications": []}][
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                // Adding new line to handle BigDecimal comparison"]} , {"line_number": 382, "new_lines": ["                // Adding new line to handle BigDecimal comparison"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]} , {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]} , {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]} , {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                // Adding new line to handle BigDecimal comparison"]} , {"line_number": 382, "new_lines": ["                // Adding new line to handle BigDecimal comparison"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]} , {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]} , {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                // Adding new line to handle BigDecimal comparison"]} , {"line_number": 382, "new_lines": ["                // Adding new line to handle BigDecimal comparison"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]} , {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]} , {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["        if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "            isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "        } else {", "            isEquals = lhs.equals(rhs);", "        "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["        if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "            isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "        } else {", "            isEquals = lhs.equals(rhs);", "        "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["        if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "            isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "        } else {", "            isEquals = lhs.equals(rhs);", "        "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["        if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "            isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "        } else {", "            isEquals = lhs.equals(rhs);", "        "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["        if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "            isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "        } else {", "            isEquals = lhs.equals(rhs);", "        "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["        if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "            isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "        } else {", "            isEquals = lhs.equals(rhs);", "        "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["        if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "            isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "        } else {", "            isEquals = lhs.equals(rhs);", "        "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["        if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "            isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "        } else {", "            isEquals = lhs.equals(rhs);", "        "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["        if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "            isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "        } else {", "            isEquals = lhs.equals(rhs);", "        "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["        if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "            isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "        } else {", "            isEquals = lhs.equals(rhs);", "        "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["        if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "            isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "        } else {", "            isEquals = lhs.equals(rhs);", "        "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["        if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "            isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "        } else {", "            isEquals = lhs.equals(rhs);", "        "]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["        if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "            isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "        } else {", "            isEquals = lhs.equals(rhs);", "        "]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}], "deletions": [], "modifications": []}
][{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []}]

[{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []}]

[{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []}]

[{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []}]

[{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []}]

[{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}], "deletions": [], "modifications": []}][
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}],
"deletions": [], 
"modifications": []
},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}],
"deletions": [], 
"modifications": []
},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}],
"deletions": [], 
"modifications": []
},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}],
"deletions": [], 
"modifications": []
},
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}],
"deletions": [], 
"modifications": []
}][
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}]}
][
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [], "deletions": [380, 382], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [], "deletions": [380, 382], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [], "deletions": [380, 382], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [], "deletions": [380, 382], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [], "deletions": [380, 382], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [], "deletions": [380, 382], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [], "deletions": [380, 382], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [], "deletions": [380, 382], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 382, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                "]}]}, "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang/builder/EqualsBuilder.java", "target_lines": [["380", "//"], ["382", "//"]], "insertions": [{"line_number": 380, "new_lines": ["                if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {", "                    isEquals = ((BigDecimal) lhs).compareTo((BigDecimal) rhs) == 0;", "                } else {", "                    isEquals = lhs.equals(rhs);", "                }"]}, {"line_number": 382, "new_lines": ["            return this;"]}]}
]