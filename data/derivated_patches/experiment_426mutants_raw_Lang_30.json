[
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j + 1] == cs.charAt(i + 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) < 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1376, "new_lines":["// Check for supplementary characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars[j + 1] == cs.charAt(i + 1)) {","                    return true;","                }"]}, {"line_number": 1377, "new_lines":["            return false;"]}, {"line_number": 1381, "new_lines":["// Check for supplementary characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars.indexOf(cs.charAt(i + 1)) >= 0) {","                    return false;","                }"]}, {"line_number": 1382, "new_lines":["            return true;"]}, {"line_number": 1383, "new_lines":["        }"]}, {"line_number": 1533, "new_lines":["// Check for supplementary characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars.indexOf(ch) >= 0) {","                    return false;","                }"]}, {"line_number": 1534, "new_lines":["            return true;"]}, {"line_number": 1539, "new_lines":["// Check for supplementary characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars.indexOf(cs.charAt(i + 1)) >= 0) {","                    return true;","                }"]}, {"line_number": 1540, "new_lines":["            return false;"]}, {"line_number": 1578, "new_lines":["// Check for supplementary characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars.indexOf(cs.charAt(i + 1)) >= 0) {","                    return true;","                }"]}, {"line_number": 1678, "new_lines":["// Check for supplementary characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars.indexOf(cs.charAt(i + 1)) >= 0) {","                    return true;","                }"]}, {"line_number": 1679, "new_lines":["            return false;"]}, {"line_number": 1683, "new_lines":["// Check for supplementary characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars.indexOf(cs.charAt(i + 1)) >= 0) {","                    return false;","                }"]}, {"line_number": 1684, "new_lines":["            return true;"]}, {"line_number": 1686, "new_lines":["        }"]}], "deletions": [1443, 1455, 1457, 1497, 1576], "modifications": []},
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j + 1] == cs.charAt(i + 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) < 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1376, "new_lines":["// Handle supplementary characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars[j + 1] == cs.charAt(i + 1)) {","                    return false;","                }"]}, {"line_number": 1377, "new_lines":["            return true;"]}, {"line_number": 1381, "new_lines":["// Handle supplementary characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars.indexOf(cs.charAt(i + 1)) >= 0) {","                    return true;","                }"]}, {"line_number": 1382, "new_lines":["            return false;"]}, {"line_number": 1383, "new_lines":["        }"]}, {"line_number": 1533, "new_lines":["// Handle supplementary characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars.indexOf(ch) >= 0) {","                    return true;","                }"]}, {"line_number": 1534, "new_lines":["            return false;"]}, {"line_number": 1539, "new_lines":["// Handle supplementary characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars.indexOf(cs.charAt(i + 1)) >= 0) {","                    return false;","                }"]}, {"line_number": 1540, "new_lines":["            return true;"]}, {"line_number": 1578, "new_lines":["// Handle supplementary characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars.indexOf(cs.charAt(i + 1)) >= 0) {","                    return false;","                }"]}, {"line_number": 1678, "new_lines":["// Handle supplementary characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars.indexOf(cs.charAt(i + 1)) >= 0) {","                    return false;","                }"]}, {"line_number": 1679, "new_lines":["            return true;"]}, {"line_number": 1683, "new_lines":["// Handle supplementary characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars.indexOf(cs.charAt(i + 1)) >= 0) {","                    return true;","                }"]}, {"line_number": 1684, "new_lines":["            return false;"]}, {"line_number": 1686, "new_lines":["        }"]}], "deletions": [1443, 1455, 1457, 1497, 1576], "modifications": []},
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j + 1] == cs.charAt(i + 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) < 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1376, "new_lines":["// Handle special characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars[j + 1] == cs.charAt(i + 1)) {","                    return true;","                }"]}, {"line_number": 1377, "new_lines":["            return false;"]}, {"line_number": 1381, "new_lines":["// Handle special characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars.indexOf(cs.charAt(i + 1)) >= 0) {","                    return false;","                }"]}, {"line_number": 1382, "new_lines":["            return true;"]}, {"line_number": 1383, "new_lines":["        }"]}, {"line_number": 1533, "new_lines":["// Handle special characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars.indexOf(ch) >= 0) {","                    return false;","                }"]}, {"line_number": 1534, "new_lines":["            return true;"]}, {"line_number": 1539, "new_lines":["// Handle special characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars.indexOf(cs.charAt(i + 1)) >= 0) {","                    return true;","                }"]}, {"line_number": 1540, "new_lines":["            return false;"]}, {"line_number": 1578, "new_lines":["// Handle special characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars.indexOf(cs.charAt(i + 1)) >= 0) {","                    return true;","                }"]}, {"line_number": 1678, "new_lines":["// Handle special characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars.indexOf(cs.charAt(i + 1)) >= 0) {","                    return true;","                }"]}, {"line_number": 1679, "new_lines":["            return false;"]}, {"line_number": 1683, "new_lines":["// Handle special characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars.indexOf(cs.charAt(i + 1)) >= 0) {","                    return false;","                }"]}, {"line_number": 1684, "new_lines":["            return true;"]}, {"line_number": 1686, "new_lines":["        }"]}], "deletions": [1443, 1455, 1457, 1497, 1576], "modifications": []},
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j + 1] == cs.charAt(i + 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) < 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1376, "new_lines":["// Handle characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars[j + 1] == cs.charAt(i + 1)) {","                    return true;","                }"]}, {"line_number": 1377, "new_lines":["            return false;"]}, {"line_number": 1381, "new_lines":["// Handle characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars.indexOf(cs.charAt(i + 1)) >= 0) {","                    return false;","                }"]}, {"line_number": 1382, "new_lines":["            return true;"]}, {"line_number": 1383, "new_lines":["        }"]}, {"line_number": 1533, "new_lines":["// Handle characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars.indexOf(ch) >= 0) {","                    return false;","                }"]}, {"line_number": 1534, "new_lines":["            return true;"]}, {"line_number": 1539, "new_lines":["// Handle characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars.indexOf(cs.charAt(i + 1)) >= 0) {","                    return true;","                }"]}, {"line_number": 1540, "new_lines":["            return false;"]}, {"line_number": 1578, "new_lines":["// Handle characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars.indexOf(cs.charAt(i + 1)) >= 0) {","                    return true;","                }"]}, {"line_number": 1678, "new_lines":["// Handle characters","\t\tif (Character.isHighSurrogate(ch) && i < csLast && j < searchLast) {","                if (Character.isLowSurrogate(cs.charAt(i + 1)) && searchChars.indexOf(cs.charAt(i + 1)) >= 0) {","                    return true;","                }"]}, {"line_number": 1679, "new_lines":["            return false;"]}, {"line_number": 1683, "new_lines":["// Handle characters","\t\tif (Character.isHighSurrogate[
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i <= csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j] == cs.charAt(i)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) >= 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1376, "new_lines": ["// Adding missing condition to handle supplementary characters in containsAny method"]}, {"line_number": 1377, "new_lines": ["                if (Character.isSurrogate(ch)) {", "                    i++;", "                }"]}, {"line_number": 1381, "new_lines": ["        }"]}, {"line_number": 1382, "new_lines": ["        return INDEX_NOT_FOUND;"]}, {"line_number": 1383, "new_lines": ["    }"]}, {"line_number": 1533, "new_lines": ["                if (Character.isSurrogate(ch)) {", "                    i++;", "                }"]}, {"line_number": 1534, "new_lines": ["        }"]}, {"line_number": 1539, "new_lines": ["        return INDEX_NOT_FOUND;"]}, {"line_number": 1540, "new_lines": ["    }"]}, {"line_number": 1578, "new_lines": ["        }"]}, {"line_number": 1678, "new_lines": ["// Adding missing condition to handle supplementary characters in containsAny method"]}, {"line_number": 1679, "new_lines": ["                if (Character.isSurrogate(ch)) {", "                    i++;", "                }"]}, {"line_number": 1683, "new_lines": ["        }"]}, {"line_number": 1684, "new_lines": ["        return INDEX_NOT_FOUND;"]}, {"line_number": 1686, "new_lines": ["    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j <= searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j] == cs.charAt(i)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) >= 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1376, "new_lines": ["// Adding missing condition to handle supplementary characters in containsAny method"]}, {"line_number": 1377, "new_lines": ["                if (Character.isSurrogate(ch)) {", "                    i++;", "                }"]}, {"line_number": 1381, "new_lines": ["        }"]}, {"line_number": 1382, "new_lines": ["        return INDEX_NOT_FOUND;"]}, {"line_number": 1383, "new_lines": ["    }"]}, {"line_number": 1533, "new_lines": ["                if (Character.isSurrogate(ch)) {", "                    i++;", "                }"]}, {"line_number": 1534, "new_lines": ["        }"]}, {"line_number": 1539, "new_lines": ["        return INDEX_NOT_FOUND;"]}, {"line_number": 1540, "new_lines": ["    }"]}, {"line_number": 1578, "new_lines": ["        }"]}, {"line_number": 1678, "new_lines": ["// Adding missing condition to handle supplementary characters in containsAny method"]}, {"line_number": 1679, "new_lines": ["                if (Character.isSurrogate(ch)) {", "                    i++;", "                }"]}, {"line_number": 1683, "new_lines": ["        }"]}, {"line_number": 1684, "new_lines": ["        return INDEX_NOT_FOUND;"]}, {"line_number": 1686, "new_lines": ["    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch > Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j] == cs.charAt(i)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) >= 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1376, "new_lines": ["// Adding missing condition to handle supplementary characters in containsAny method"]}, {"line_number": 1377, "new_lines": ["                if (Character.isSurrogate(ch)) {", "                    i++;", "                }"]}, {"line_number": 1381, "new_lines": ["        }"]}, {"line_number": 1382, "new_lines": ["        return INDEX_NOT_FOUND;"]}, {"line_number": 1383, "new_lines": ["    }"]}, {"line_number": 1533, "new_lines": ["                if (Character.isSurrogate(ch)) {", "                    i++;", "                }"]}, {"line_number": 1534, "new_lines": ["        }"]}, {"line_number": 1539, "new_lines": ["        return INDEX_NOT_FOUND;"]}, {"line_number": 1540, "new_lines": ["    }"]}, {"line_number": 1578, "new_lines": ["        }"]}, {"line_number": 1678, "new_lines": ["// Adding missing condition to handle supplementary characters in containsAny method"]}, {"line_number": 1679, "new_lines": ["                if (Character.isSurrogate(ch)) {", "                    i++;", "                }"]}, {"line_number": 1683, "new_lines": ["        }"]}, {"line_number": 1684, "new_lines": ["        return INDEX_NOT_FOUND;"]}, {"line_number": 1686, "new_lines": ["    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch < Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j] == cs.charAt(i)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) >= 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1376, "new_lines": ["// Adding missing condition to handle supplementary characters in containsAny method"]}, {"line_number": 1377, "new_lines": ["                if (Character.isSurrogate(ch)) {", "                    i++;", "                }"]}, {"line_number": 1381, "new_lines": ["        }"]}, {"line_number": 1382, "new_lines": ["        return INDEX_NOT_FOUND;"]}, {"line_number": 1383, "new_lines": ["    }"]}, {"line_number": 1533, "new_lines": ["                if (Character.isSurrogate(ch)) {", "                    i++;", "                }"]}, {"line_number": 1534, "new_lines": ["        }"]}, {"line_number": 1539, "new_lines": ["        return INDEX_NOT_FOUND;"]}, {"line_number": 1540, "new_lines": ["    }"]}, {"line_number": 1578, "new_lines": ["        }"]}, {"line_number": 1678, "new_lines": ["// Adding missing condition to handle supplementary characters in containsAny method"]}, {"line_number": 1679, "new_lines": ["                if (Character.isSurrogate(ch)) {", "                    i++;", "                }"]}, {"line_number": 1683, "new_lines": ["        }"]}, {"line_number": 1684, "new_lines": ["        return INDEX_NOT_FOUND;"]}, {"line_number": 1686, "new_lines": ["    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j] != cs.charAt(i)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) >= 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1376, "new_lines": ["// Adding missing condition to handle supplementary characters in containsAny method"]}, {"line_number": 1377, "new_lines": ["                if (Character.isSurrogate(ch)) {", "                    i++;", "                }"]}, {"line_number": 1381, "new_lines": ["        }"]}, {"line_number": 1382, "new_lines": ["        return INDEX_NOT_FOUND;"]}, {"line_number": 1383, "new_lines": ["    }"]}, {"line_number": 1533, "new_lines": ["                if (Character.isSurrogate(ch)) {", "                    i++;", "                }"]}, {"line_number": 1534, "new_lines": ["        }"]}, {"line_number": 1539, "new_lines": ["        return INDEX_NOT_FOUND;"]}, {"line_number": 1540, "new_lines": ["    }"]}, {"line_number": 1578, "new_lines": ["        }"]}, {"line_number": 1678, "new_lines": ["// Adding missing condition to handle supplementary characters in containsAny method"]}, {"line_number": 1679, "new_lines": ["                if (Character.isSurrogate(ch)) {", "                    i++;", "                }"]}, {"line_number": 1683, "new_lines": ["        }"]}, {"line_number": 1684, "new_lines": ["        return INDEX_NOT_FOUND;"]}, {"line_number": 1686, "new_lines": ["    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j] == cs.charAt(i + 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) >= 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1376, "new_lines": ["// Adding missing condition to handle supplementary characters in containsAny method"]}, {"line_number": 1377, "new_lines": ["                if (Character.isSurrogate(ch)) {", "                    i++;", "                }"]}, {"line_number": 1381, "new_lines": ["        }"]}, {"line_number": 1382, "new_lines": ["        return INDEX_NOT_FOUND;"]}, {"line_number": 1383, "new_lines": ["    }"]}, {"line_number": 1533, "new_lines": ["                if (Character.isSurrogate(ch)) {", "                    i++;", "                }"]}, {"line_number": 1534, "new_lines": ["        }"]}, {"line_number": 1539, "new_lines": ["        return INDEX_NOT_FOUND;"]}, {"line_number": 1540, "new_lines": ["    }"]}, {"line_number": 1578, "new_lines": ["        }"]}, {"line_number": 1678, "new_lines": ["// Adding missing condition to handle supplementary characters in containsAny method"]}, {"line_number": 1679, "new_lines": ["                if (Character.isSurrogate(ch)) {", "                    i++;", "                }"]}, {"line_number": 1683, "new_lines": ["        }"]}, {"line_number": 1684, "new_lines": ["        return INDEX_NOT_FOUND;"]}, {"line_number": 1686, "new_lines": ["    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j] == cs.charAt(i - 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) >= 0) {"], ["1376", "//[
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j + 1] == cs.charAt(i + 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) < 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number":1376, "new_lines":["// Inserted to fix the bug"]}, {"line_number":1377, "new_lines":["// Inserted to fix the bug"]}, {"line_number":1381, "new_lines":["// Inserted to fix the bug"]}, {"line_number":1382, "new_lines":["// Inserted to fix the bug"]}, {"line_number":1383, "new_lines":["// Inserted to fix the bug"]}, {"line_number":1533, "new_lines":["// Inserted to fix the bug"]}, {"line_number":1534, "new_lines":["// Inserted to fix the bug"]}, {"line_number":1539, "new_lines":["// Inserted to fix the bug"]}, {"line_number":1540, "new_lines":["// Inserted to fix the bug"]}, {"line_number":1578, "new_lines":["// Inserted to fix the bug"]}, {"line_number":1678, "new_lines":["// Inserted to fix the bug"]}, {"line_number":1679, "new_lines":["// Inserted to fix the bug"]}, {"line_number":1683, "new_lines":["// Inserted to fix the bug"]}, {"line_number":1684, "new_lines":["// Inserted to fix the bug"]}, {"line_number":1686, "new_lines":["// Inserted to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j + 1] == cs.charAt(i + 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) < 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number":1376, "new_lines":["// New line added for fixing the bug"]}, {"line_number":1377, "new_lines":["// New line added for fixing the bug"]}, {"line_number":1381, "new_lines":["// New line added for fixing the bug"]}, {"line_number":1382, "new_lines":["// New line added for fixing the bug"]}, {"line_number":1383, "new_lines":["// New line added for fixing the bug"]}, {"line_number":1533, "new_lines":["// New line added for fixing the bug"]}, {"line_number":1534, "new_lines":["// New line added for fixing the bug"]}, {"line_number":1539, "new_lines":["// New line added for fixing the bug"]}, {"line_number":1540, "new_lines":["// New line added for fixing the bug"]}, {"line_number":1578, "new_lines":["// New line added for fixing the bug"]}, {"line_number":1678, "new_lines":["// New line added for fixing the bug"]}, {"line_number":1679, "new_lines":["// New line added for fixing the bug"]}, {"line_number":1683, "new_lines":["// New line added for fixing the bug"]}, {"line_number":1684, "new_lines":["// New line added for fixing the bug"]}, {"line_number":1686, "new_lines":["// New line added for fixing the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j + 1] == cs.charAt(i + 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) < 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number":1376, "new_lines":["// Mutation for fixing the bug"]}, {"line_number":1377, "new_lines":["// Mutation for fixing the bug"]}, {"line_number":1381, "new_lines":["// Mutation for fixing the bug"]}, {"line_number":1382, "new_lines":["// Mutation for fixing the bug"]}, {"line_number":1383, "new_lines":["// Mutation for fixing the bug"]}, {"line_number":1533, "new_lines":["// Mutation for fixing the bug"]}, {"line_number":1534, "new_lines":["// Mutation for fixing the bug"]}, {"line_number":1539, "new_lines":["// Mutation for fixing the bug"]}, {"line_number":1540, "new_lines":["// Mutation for fixing the bug"]}, {"line_number":1578, "new_lines":["// Mutation for fixing the bug"]}, {"line_number":1678, "new_lines":["// Mutation for fixing the bug"]}, {"line_number":1679, "new_lines":["// Mutation for fixing the bug"]}, {"line_number":1683, "new_lines":["// Mutation for fixing the bug"]}, {"line_number":1684, "new_lines":["// Mutation for fixing the bug"]}, {"line_number":1686, "new_lines":["// Mutation for fixing the bug"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j + 1] == cs.charAt(i + 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) < 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1376, "new_lines": ["// Adding fix for the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j + 1] == cs.charAt(i + 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) < 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1377, "new_lines": ["// Possible fix for the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j + 1] == cs.charAt(i + 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) < 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1381, "new_lines": ["// Fix added for the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j + 1] == cs.charAt(i + 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) < 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1382, "new_lines": ["// Fix for the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j + 1] == cs.charAt(i + 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) < 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1383, "new_lines": ["// Fix added to address the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j + 1] == cs.charAt(i + 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) < 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1533, "new_lines": ["// Introducing fix for the bug"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j + 1] == cs.charAt(i + 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) < 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1376, "new_lines": ["        if (searchChars.contains(ch)) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j + 1] == cs.charAt(i + 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) < 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1376, "new_lines": ["        if (ArrayUtils.contains(searchChars, ch)) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j + 1] == cs.charAt(i + 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) < 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1381, "new_lines": ["            if (ArrayUtils.contains(searchChars, ch)) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j + 1] == cs.charAt(i + 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) < 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1382, "new_lines": ["                if (ArrayUtils.contains(searchChars, ch)) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j + 1] == cs.charAt(i + 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) < 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1533, "new_lines": ["        if (ArrayUtils.contains(searchChars, ch)) {"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j + 1] == cs.charAt(i + 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) < 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1376, "new_lines": ["        int searchLen = searchChars.length;"]}, {"line_number": 1377, "new_lines": ["        for (int i = 0; i < csLen; i++) {"]}, {"line_number": 1381, "new_lines": ["            char ch = cs.charAt(i);"]}, {"line_number": 1382, "new_lines": ["            for (int j = 0; j < searchLen; j++) {"]}, {"line_number": 1383, "new_lines": ["                if (searchChars[j] == ch) {"]}, {"line_number": 1533, "new_lines": ["        if (isEmpty(cs) || isEmpty(searchChars)) {"]}, {"line_number": 1534, "new_lines": ["            return INDEX_NOT_FOUND;"]}, {"line_number": 1539, "new_lines": ["        return indexOfAny(cs, searchChars.toCharArray());"]}, {"line_number": 1540, "new_lines": ["    }"]}, {"line_number": 1578, "new_lines": ["    public static int indexOfAny(CharSequence cs, String searchChars) {"]}, {"line_number": 1678, "new_lines": ["    public static boolean containsAny(CharSequence cs, String searchChars) {"]}, {"line_number": 1679, "new_lines": ["        if (isEmpty(cs) || isEmpty(searchChars)) {"]}, {"line_number": 1683, "new_lines": ["            return indexOfAny(cs, searchChars.toCharArray());"]}, {"line_number": 1684, "new_lines": ["        }"]}, {"line_number": 1686, "new_lines": ["    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j + 1] == cs.charAt(i + 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) < 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1376, "new_lines": ["        int searchLen = searchChars.length;"]}, {"line_number": 1377, "new_lines": ["        for (int i = 0; i < csLen; i++) {"]}, {"line_number": 1381, "new_lines": ["            char ch = cs.charAt(i);"]}, {"line_number": 1382, "new_lines": ["            for (int j = 0; j < searchLen; j++) {"]}, {"line_number": 1383, "new_lines": ["                if (searchChars[j] == ch) {"]}, {"line_number": 1533, "new_lines": ["        if (isEmpty(cs) || isEmpty(searchChars)) {"]}, {"line_number": 1534, "new_lines": ["            return INDEX_NOT_FOUND;"]}, {"line_number": 1539, "new_lines": ["        return indexOfAny(cs, searchChars.toCharArray());"]}, {"line_number": 1540, "new_lines": ["    }"]}, {"line_number": 1578, "new_lines": ["    public static int indexOfAny(CharSequence cs, String searchChars) {"]}, {"line_number": 1678, "new_lines": ["    public static boolean containsAny(CharSequence cs, String searchChars) {"]}, {"line_number": 1679, "new_lines": ["        if (isEmpty(cs) || isEmpty(searchChars)) {"]}, {"line_number": 1683, "new_lines": ["            return indexOfAny(cs, searchChars.toCharArray());"]}, {"line_number": 1684, "new_lines": ["        }"]}, {"line_number": 1686, "new_lines": ["    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j + 1] == cs.charAt(i + 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) < 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1376, "new_lines": ["        int searchLen = searchChars.length;"]}, {"line_number": 1377, "new_lines": ["        for (int i = 0; i < csLen; i++) {"]}, {"line_number": 1381, "new_lines": ["            char ch = cs.charAt(i);"]}, {"line_number": 1382, "new_lines": ["            for (int j = 0; j < searchLen; j++) {"]}, {"line_number": 1383, "new_lines": ["                if (searchChars[j] == ch) {"]}, {"line_number": 1533, "new_lines": ["        if (isEmpty(cs) || isEmpty(searchChars)) {"]}, {"line_number": 1534, "new_lines": ["            return INDEX_NOT_FOUND;"]}, {"line_number": 1539, "new_lines": ["        return indexOfAny(cs, searchChars.toCharArray());"]}, {"line_number": 1540, "new_lines": ["    }"]}, {"line_number": 1578, "new_lines": ["    public static int indexOfAny(CharSequence cs, String searchChars) {"]}, {"line_number": 1678, "new_lines": ["    public static boolean containsAny(CharSequence cs, String searchChars) {"]}, {"line_number": 1679, "new_lines": ["        if (isEmpty(cs) || isEmpty(searchChars)) {"]}, {"line_number": 1683, "new_lines": ["            return indexOfAny(cs, searchChars.toCharArray());"]}, {"line_number": 1684, "new_lines": ["        }"]}, {"line_number": 1686, "new_lines": ["    }"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang3/StringUtils.java", "target_lines": [["1443", "    public static boolean containsAny(CharSequence cs, char[] searchChars) {"], ["1455", "                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {"], ["1457", "                        if (searchChars[j + 1] == cs.charAt(i + 1)) {"], ["1497", "    public static boolean containsAny(CharSequence cs, String searchChars) {"], ["1576", "            if (searchChars.indexOf(ch) < 0) {"], ["1376", "//"], ["1377", "//"], ["1381", "//"], ["1382", "//"], ["1383", "//"], ["1533", "//"], ["1534", "//"], ["1539", "//"], ["1540", "//"], ["1578", "//"], ["1678", "//"], ["1679", "//"], ["1683", "//"], ["1684", "//"], ["1686", "//"]], "insertions": [{"line_number": 1376, "new_lines": ["        if (cs == null || searchChars == null) {", "            return false;", "        }"]}, {"line_number": 1377, "new_lines": ["        int csLen = cs.length();", "        int searchLen = searchChars.length;", "        if (csLen == 0 || searchLen == 0) {", "            return false;", "        }"]}, {"line_number": 1381, "new_lines": ["        int csLen = cs.length();", "        int searchLen = searchChars.length;", "        if (csLen == 0 || searchLen == 0) {", "            return false;", "        }"]}, {"line_number": 1382, "new_lines": ["        int csLen = cs.length();", "        int searchLen = searchChars.length;", "        if (csLen == 0 || searchLen == 0) {", "            return false;", "        }"]}, {"line_number": 1383, "new_lines": ["        int csLen = cs.length();", "        int searchLen = searchChars.length;", "        if (csLen == 0 || searchLen == 0) {", "            return false;", "        }"]}, {"line_number": 1533, "new_lines": ["        if (cs == null || searchChars == null) {", "            return INDEX_NOT_FOUND;", "        }"]}, {"line_number": 1534, "new_lines": ["        int csLen = cs.length();", "        int searchLen = searchChars.length;", "        if (csLen == 0 || searchLen == 0) {", "            return INDEX_NOT_FOUND;", "        }"]}, {"line_number": 1539, "new_lines": ["        if (cs == null || searchChars == null) {", "            return INDEX_NOT_FOUND;", "        }"]}, {"line_number": 1540, "new_lines": ["        int csLen = cs.length();", "        int searchLen = searchChars.length;", "        if (csLen == 0 || searchLen == 0) {", "            return INDEX_NOT_FOUND;", "        }"]}, {"line_number": 1578, "new_lines": ["        if (cs == null || searchChars == null) {", "            return false;", "        }"]}, {"line_number": 1678, "new_lines": ["        if (cs == null || searchChars == null) {", "            return INDEX_NOT_FOUND;", "        }"]}, {"line_number": 1679, "new_lines": ["        int csLen = cs.length();", "        int searchLen = searchChars.length;", "        if (csLen == 0 || searchLen == 0) {", "            return INDEX_NOT_FOUND;", "        }"]}, {"line_number": 1683, "new_lines": ["        if (cs == null || searchChars == null) {", "            return INDEX_NOT_FOUND;", "        }"]}, {"line_number": 1684, "new_lines": ["        int csLen = cs.length();", "        int searchLen = searchChars.length;", "        if (csLen == 0 || searchLen == 0) {", "            return INDEX_NOT_FOUND;", "        }"]}, {"line_number": 1686, "new_lines": ["        if (cs == null || searchChars == null) {", "            return INDEX_NOT_FOUND;", "        }"]}], "deletions": [1376, 1377, 1381, 1382, 1383, 1533, 1534, 1539, 1540, 1578, 1678, 1679, 1683, 1684, 1686], "modifications": []}
]