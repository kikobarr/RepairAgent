[
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], 
     "insertions": [{"line_number": 156, "new_lines": ["        return;"]}],
     "deletions": [],
     "modifications": []
    },
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], 
     "insertions": [{"line_number": 156, "new_lines": ["        // Fix the issue by handling the unexpected token"]}],
     "deletions": [],
     "modifications": []
    },
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], 
     "insertions": [{"line_number": 156, "new_lines": ["        // Fix the issue by skipping the unexpected token"]}],
     "deletions": [],
     "modifications": []
    }
    // Add more mutants here
][
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["    // Fix bug by adding missing line here"]}]}
][
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '|') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '*') {", "            output = filterForAllElements(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '^') {", "            output = filterForStartsWith(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '$') {", "            output = filterForEndsWith(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '1') {", "            output = filterForFirstElement(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'l') {", "            output = filterForLastElement(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'r') {", "            output = filterForRoot(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'a') {", "            output = filterForAncestors(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'c') {", "            output = filterForChildren(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'd') {", "            output = filterForDescendants(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 's') {", "            output = filterForSiblings(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'u') {", "            output = filterForUncles(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'n') {", "            output = filterForNephews(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'c') {", "            output = filterForCousins(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'p') {", "            output = filterForParents(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'b') {", "            output = filterForBrothers(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 's') {", "            output = filterForSisters(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'x') {", "            output = filterForXPath(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'o') {", "            output = filterForOrphaned(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'm') {", "            output = filterForMarried(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'd') {", "            output = filterForDivorced(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'v') {", "            output = filterForValid(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'i') {", "            output = filterForInvalid(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'f') {", "            output = filterForForbidden(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'e') {", "            output = filterForAllowed(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'w') {", "            output = filterForWeird(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'k') {", "            output = filterForKeywords(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 't') {", "            output = filterForTags(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'z') {", "            output = filterForZero(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'g') {", "            output = filterForGreat(elements, select(subQuery, elements));", "        "]}], "deletions": [], "modifications": []}
][
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '|') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '&') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '^') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '$') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '!') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '(') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == ')') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '[') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == ']') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '{') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '}') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '_') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '='') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '+') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '-') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '*') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '/') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '<') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '>') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '%') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '?') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == ':') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == ';') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '\"') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '\'') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '<>') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '<>') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '<>') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '<>') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
}][
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '|') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '&') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '^') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '[') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == ']') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '~') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '*') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '?') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '!') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '/') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": []}
][
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '|') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'x') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'y') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == 'z') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '&') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '^') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '*') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '$') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '!') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '%') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
}
][
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '|') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '&') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '^') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '$') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '*') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '?') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '#') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '!') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '@') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '1') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '2') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '3') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '4') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '5') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '6') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '7') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '8') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '9') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '0') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '_') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '-') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '+') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == ':') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == ';') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == ',') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '.') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '<') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '>') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '=') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '|') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '|') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '|') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["        if (combinator == '|') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 155, "new_lines": ["        if (combinator == '|') {", "            output = filterForAttributeRegex(elements, select(subQuery, elements));", "        }"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [{"line_number": 155, "new_lines": ["        switch (combinator) {", "            case '|':", "                output = filterForAttributeRegex(elements, select(subQuery, elements));", "                break;"]}]],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["139", "        String subQuery = tq.consumeToAny(combinators);"], ["156", "//"]], "insertions": [],
"deletions": [],
"modifications": [{"line_number": 139, "modified_line": "        String subQuery = tq.consumeTo(combinators);"}, {"line_number": 156, "modified_line": "        if (combinator == '|') {"}]
}
]