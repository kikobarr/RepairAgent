[
    {"file_name": "org/apache/commons/compress/archivers/ArchiveStreamFactory.java", "target_lines": [["297", "//"], ["298", "//"], ["360", "//"], ["361", "//"]], 
    "insertions": [
        {"line_number": 297, "new_lines": ["// Inserted line to fix the bug", "if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "throw new StreamingNotSupportedException(SEVEN_Z);", "}"]},
        {"line_number": 298, "new_lines": ["// Inserted line to fix the bug", "if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "throw new StreamingNotSupportedException(SEVEN_Z);", "}"]},
        {"line_number": 360, "new_lines": ["// Inserted line to fix the bug", "if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "throw new StreamingNotSupportedException(SEVEN_Z);", "}"]},
        {"line_number": 361, "new_lines": ["// Inserted line to fix the bug", "if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "throw new StreamingNotSupportedException(SEVEN_Z);", "}"]}
    ], 
    "deletions": [], 
    "modifications": []
    },
    {"file_name": "org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java", "target_lines": [["97", "//"], ["155", "//"]], 
    "insertions": [
        {"line_number": 97, "new_lines": ["// Inserted line to fix the bug", "if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "throw new StreamingNotSupportedException(SEVEN_Z);", "}"]},
        {"line_number": 155, "new_lines": ["// Inserted line to fix the bug", "if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "throw new StreamingNotSupportedException(SEVEN_Z);", "}"]}
    ], 
    "deletions": [], 
    "modifications": []
    },
    {"file_name": "org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java", "target_lines": [["98", "//"], ["162", "//"]], 
    "insertions": [
        {"line_number": 98, "new_lines": ["// Inserted line to fix the bug", "if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "throw new StreamingNotSupportedException(SEVEN_Z);", "}"]},
        {"line_number": 162, "new_lines": ["// Inserted line to fix the bug", "if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "throw new StreamingNotSupportedException(SEVEN_Z);", "}"]}
    ], 
    "deletions": [], 
    "modifications": []
    },
    {"file_name": "org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java", "target_lines": [["80", "//"], ["104", "//"]], 
    "insertions": [
        {"line_number": 80, "new_lines": ["// Inserted line to fix the bug", "if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "throw new StreamingNotSupportedException(SEVEN_Z);", "}"]},
        {"line_number": 104, "new_lines": ["// Inserted line to fix the bug", "if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "throw new StreamingNotSupportedException(SEVEN_Z);", "}"]}
    ], 
    "deletions": [], 
    "modifications": []
    },
    {"file_name": "org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java", "target_lines": [["79", "//"], ["142", "//"]], 
    "insertions": [
        {"line_number": 79, "new_lines": ["// Inserted line to fix the bug", "if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "throw new StreamingNotSupportedException(SEVEN_Z);", "}"]},
        {"line_number": 142, "new_lines": ["// Inserted line to fix the bug", "if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "throw new StreamingNotSupportedException(SEVEN_Z);", "}"]}
    ], 
    "deletions": [], 
    "modifications": []
    },
    {"file_name": "org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java", "target_lines": [["90", "//"], ["155", "//"]], 
    "insertions": [
        {"line_number": 90, "new_lines": ["// Inserted line to fix the bug", "if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "throw new StreamingNotSupportedException(SEVEN_Z);", "}"]},
        {"line_number": 155, "new_lines": ["// Inserted line to fix the bug", "if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "throw new StreamingNotSupportedException(SEVEN_Z);", "}"]}
    ], 
    "deletions": [], 
    "modifications": []
    },
    {"file_name": "org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java", "target_lines": [["65", "//"], ["184", "//"]], 
    "insertions": [
        {"line_number": 65, "new_lines": ["// Inserted line to fix the bug", "if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "throw new StreamingNotSupportedException(SEVEN_Z);", "}"]},
        {"line_number": 184, "new_lines": ["// Inserted line to fix the bug", "if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "throw new StreamingNotSupportedException(SEVEN_Z);", "}"]}
    ], 
    "deletions": [], 
    "modifications": []
    }
][
{"file_name": "org/apache/commons/compress/archivers/ArchiveStreamFactory.java", "target_lines": [["297", "//"]], "insertions": [{"line_number": 297, "new_lines": ["            if (TAR.equalsIgnoreCase(archiverName)) {", "                if (entryEncoding != null) {", "                    return new TarArchiveOutputStream(out, entryEncoding);", "                } else {", "                    return new TarArchiveOutputStream(out);", "                }"]}]}
][
{"file_name": "org/apache/commons/compress/archivers/ArchiveStreamFactory.java", "target_lines": [["297", "//"]], "insertions": [{"line_number": 297, "new_lines": ["            if (TAR.equalsIgnoreCase(archiverName)) {", "                if (entryEncoding != null) {", "                    return new TarArchiveInputStream(in, entryEncoding);", "                } else {", "                    return new TarArchiveInputStream(in);", "                }"]}]}
{"file_name": "org/apache/commons/compress/archivers/ArchiveStreamFactory.java", "target_lines": [["298", "//"]], "insertions": [{"line_number": 298, "new_lines": ["            if (CPIO.equalsIgnoreCase(archiverName)) {", "                if (entryEncoding != null) {", "                    return new CpioArchiveInputStream(in, entryEncoding);", "                } else {", "                    return new CpioArchiveInputStream(in);", "                }"]}]}
{"file_name": "org/apache/commons/compress/archivers/ArchiveStreamFactory.java", "target_lines": [["360", "//"]], "insertions": [{"line_number": 360, "new_lines": ["            if (ARJ.equalsIgnoreCase(archiverName)) {", "                return new ArjArchiveInputStream(in);"]}]}
{"file_name": "org/apache/commons/compress/archivers/ArchiveStreamFactory.java", "target_lines": [["361", "//"]], "insertions": [{"line_number": 361, "new_lines": ["            if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "                throw new StreamingNotSupportedException(SEVEN_Z);"]}]}
{"file_name": "org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java", "target_lines": [["97", "//"]], "insertions": [{"line_number": 97, "new_lines": ["            if (ARJ.equalsIgnoreCase(archiverName)) {", "                return new ArjArchiveInputStream(in);"]}]}
{"file_name": "org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java", "target_lines": [["155", "//"]], "insertions": [{"line_number": 155, "new_lines": ["            if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "                throw new StreamingNotSupportedException(SEVEN_Z);"]}]}
{"file_name": "org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java", "target_lines": [["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            if (ZIP.equalsIgnoreCase(archiverName)) {", "                if (entryEncoding != null) {", "                    return new ZipArchiveOutputStream(out, entryEncoding);", "                } else {", "                    return new ZipArchiveOutputStream(out);", "                }"]}]}
{"file_name": "org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (DUMP.equalsIgnoreCase(archiverName)) {", "                if (entryEncoding != null) {", "                    return new DumpArchiveOutputStream(out, entryEncoding);", "                } else {", "                    return new DumpArchiveOutputStream(out);", "                }"]}]}
{"file_name": "org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java", "target_lines": [["80", "//"]], "insertions": [{"line_number": 80, "new_lines": ["            if (ZIP.equalsIgnoreCase(archiverName)) {", "                if (entryEncoding != null) {", "                    return new ZipArchiveInputStream(in, entryEncoding);", "                } else {", "                    return new ZipArchiveInputStream(in);", "                }"]}]}
{"file_name": "org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java", "target_lines": [["104", "//"]], "insertions": [{"line_number": 104, "new_lines": ["            if (TAR.equalsIgnoreCase(archiverName)) {", "                if (entryEncoding != null) {", "                    return new TarArchiveInputStream(in, entryEncoding);", "                } else {", "                    return new TarArchiveInputStream(in);", "                }"]}]}
{"file_name": "org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java", "target_lines": [["79", "//"]], "insertions": [{"line_number": 79, "new_lines": ["            if (CPIO.equalsIgnoreCase(archiverName)) {", "                if (entryEncoding != null) {", "                    return new CpioArchiveInputStream(in, entryEncoding);", "                } else {", "                    return new CpioArchiveInputStream(in);", "                }"]}]}
{"file_name": "org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java", "target_lines": [["142", "//"]], "insertions": [{"line_number": 142, "new_lines": ["            if (ARJ.equalsIgnoreCase(archiverName)) {", "                return new ArjArchiveInputStream(in);"]}]}
{"file_name": "org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java", "target_lines": [["90", "//"]], "insertions": [{"line_number": 90, "new_lines": ["            if (DUMP.equalsIgnoreCase(archiverName)) {", "                if (entryEncoding != null) {", "                    return new DumpArchiveOutputStream(out, entryEncoding);", "                } else {", "                    return new DumpArchiveOutputStream(out);", "                }"]}]}
{"file_name": "org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java", "target_lines": [["155", "//"]], "insertions": [{"line_number": 155, "new_lines": ["            if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "                throw new StreamingNotSupportedException(SEVEN_Z);"]}]}
{"file_name": "org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java", "target_lines": [["65", "//"]], "insertions": [{"line_number": 65, "new_lines": ["            if (TAR.equalsIgnoreCase(archiverName)) {", "                if (entryEncoding != null) {", "                    return new TarArchiveInputStream(in, entryEncoding);", "                } else {", "                    return new TarArchiveInputStream(in);", "                }"]}]}
{"file_name": "org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java", "target_lines": [["184", "//"]], "insertions": [{"line_number": 184, "new_lines": ["            if (DUMP.equalsIgnoreCase(archiverName)) {", "                if (entryEncoding != null) {", "                    return new DumpArchiveInputStream(in, entryEncoding);", "                } else {", "                    return new DumpArchiveInputStream(in);", "                }"]}]}
]```python
[
    {"file_name": "org/apache/commons/compress/archivers/ArchiveStreamFactory.java", "target_lines": [["297", "//"], ["298", "//"], ["360", "//"], ["361", "//"]], "insertions": [{"line_number": 297, "new_lines": ["            if (GZIP.equalsIgnoreCase(archiverName)) {", "                if (entryEncoding != null) {", "                    return new GzipArchiveInputStream(in, entryEncoding);", "                } else {", "                    return new GzipArchiveInputStream(in);", "                }"]}, {"line_number": 298, "new_lines": ["            if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "                return new SevenZArchiveInputStream(in);"]}, {"line_number": 360, "new_lines": ["            if (ARJ.equalsIgnoreCase(archiverName)) {", "                if (entryEncoding != null) {", "                    return new ArjArchiveInputStream(in, entryEncoding);", "                } else {", "                    return new ArjArchiveInputStream(in);", "                }"]}, {"line_number": 361, "new_lines": ["            if (DUMP.equalsIgnoreCase(archiverName)) {", "                if (entryEncoding != null) {", "                    return new DumpArchiveInputStream(in, entryEncoding);", "                } else {", "                    return new DumpArchiveInputStream(in);", "                }"]} ], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java", "target_lines": [["97", "//"], ["155", "//"]], "insertions": [{"line_number": 97, "new_lines": ["            if (GZIP.equalsIgnoreCase(archiverName)) {", "                if (entryEncoding != null) {", "                    return new GzipArchiveInputStream(in, entryEncoding);", "                } else {", "                    return new GzipArchiveInputStream(in);", "                }"]}, {"line_number": 155, "new_lines": ["            if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "                return new SevenZArchiveInputStream(in);"]} ], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java", "target_lines": [["98", "//"], ["162", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            if (GZIP.equalsIgnoreCase(archiverName)) {", "                if (entryEncoding != null) {", "                    return new GzipArchiveOutputStream(out, entryEncoding);", "                } else {", "                    return new GzipArchiveOutputStream(out);", "                }"]}, {"line_number": 162, "new_lines": ["            if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "                return new SevenZArchiveOutputStream(out);"]} ], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java", "target_lines": [["80", "//"], ["104", "//"]], "insertions": [{"line_number": 80, "new_lines": ["            if (GZIP.equalsIgnoreCase(archiverName)) {", "                if (entryEncoding != null) {", "                    return new GzipArchiveInputStream(in, entryEncoding);", "                } else {", "                    return new GzipArchiveInputStream(in);", "                }"]}, {"line_number": 104, "new_lines": ["            if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "                return new SevenZArchiveInputStream(in);"]} ], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java", "target_lines": [["79", "//"], ["142", "//"]], "insertions": [{"line_number": 79, "new_lines": ["            if (GZIP.equalsIgnoreCase(archiverName)) {", "                if (entryEncoding != null) {", "                    return new GzipArchiveInputStream(in, entryEncoding);", "                } else {", "                    return new GzipArchiveInputStream(in);", "                }"]}, {"line_number": 142, "new_lines": ["            if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "                return new SevenZArchiveInputStream(in);"]} ], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java", "target_lines": [["90", "//"], ["155", "//"]], "insertions": [{"line_number": 90, "new_lines": ["            if (GZIP.equalsIgnoreCase(archiverName)) {", "                if (entryEncoding != null) {", "                    return new GzipArchiveOutputStream(out, entryEncoding);", "                } else {", "                    return new GzipArchiveOutputStream(out);", "                }"]}, {"line_number": 155, "new_lines": ["            if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "                return new SevenZArchiveOutputStream(out);"]} ], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java", "target_lines": [["65", "//"], ["184", "//"]], "insertions": [{"line_number": 65, "new_lines": ["            if (GZIP.equalsIgnoreCase(archiverName)) {", "                if (entryEncoding != null) {", "                    return new GzipArchiveInputStream(in, entryEncoding);", "                } else {", "                    return new GzipArchiveInputStream(in);", "                }"]}, {"line_number": 184, "new_lines": ["            if (SEVEN_Z.equalsIgnoreCase(archiverName)) {", "                return new SevenZArchiveInputStream(in);"]} ], "deletions": [], "modifications": []}
]
```[
    {
        "file_name": "org/apache/commons/compress/archivers/ArchiveStreamFactory.java",
        "target_lines": [["297", "//"], ["298", "//"], ["360", "//"], ["361", "//"]],
        "insertions": [
            {"line_number": 297, "new_lines": ["            if (NEW_ARCHIVER.equalsIgnoreCase(archiverName)) {", "                if (entryEncoding != null) {", "                    return new NewArchiveInputStream(in, entryEncoding);", "                } else {", "                    return new NewArchiveInputStream(in);", "                }"]},
            {"line_number": 298, "new_lines": ["            if (ANOTHER_ARCHIVER.equalsIgnoreCase(archiverName)) {", "                if (entryEncoding != null) {", "                    return new AnotherArchiveInputStream(in, entryEncoding);", "                } else {", "                    return new AnotherArchiveInputStream(in);", "                }"]},
            {"line_number": 360, "new_lines": ["            if (SOME_ARCHIVER.equalsIgnoreCase(archiverName)) {", "                if (entryEncoding != null) {", "                    return new SomeArchiveInputStream(in, entryEncoding);", "                } else {", "                    return new SomeArchiveInputStream(in);", "                }"]},
            {"line_number": 361, "new_lines": ["            if (NEW_ARCHIVER2.equalsIgnoreCase(archiverName)) {", "                return new NewArchive2InputStream(in);"]}
        ],
        "deletions": [],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java",
        "target_lines": [["97", "//"], ["155", "//"]],
        "insertions": [
            {"line_number": 97, "new_lines": ["            if (entryEncoding != null) {", "                return new ModifiedCpioArchiveInputStream(in, entryEncoding);", "            } else {", "                return new ModifiedCpioArchiveInputStream(in);", "            }"]},
            {"line_number": 155, "new_lines": ["            if (entryEncoding != null) {", "                return new ModifiedCpioArchiveInputStream(in, entryEncoding);", "            } else {", "                return new ModifiedCpioArchiveInputStream(in);", "            }"]}
        ],
        "deletions": [],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java",
        "target_lines": [["98", "//"], ["162", "//"]],
        "insertions": [
            {"line_number": 98, "new_lines": ["            if (entryEncoding != null) {", "                return new ModifiedCpioArchiveOutputStream(out, entryEncoding);", "            } else {", "                return new ModifiedCpioArchiveOutputStream(out);", "            }"]},
            {"line_number": 162, "new_lines": ["            if (entryEncoding != null) {", "                return new ModifiedCpioArchiveOutputStream(out, entryEncoding);", "            } else {", "                return new ModifiedCpioArchiveOutputStream(out);", "            }"]}
        ],
        "deletions": [],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java",
        "target_lines": [["80", "//"], ["104", "//"]],
        "insertions": [
            {"line_number": 80, "new_lines": ["            if (entryEncoding != null) {", "                return new ModifiedDumpArchiveInputStream(in, entryEncoding);", "            } else {", "                return new ModifiedDumpArchiveInputStream(in);", "            }"]},
            {"line_number": 104, "new_lines": ["            if (entryEncoding != null) {", "                return new ModifiedDumpArchiveInputStream(in, entryEncoding);", "            } else {", "                return new ModifiedDumpArchiveInputStream(in);", "            }"]}
        ],
        "deletions": [],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java",
        "target_lines": [["79", "//"], ["142", "//"]],
        "insertions": [
            {"line_number": 79, "new_lines": ["            if (entryEncoding != null) {", "                return new ModifiedTarArchiveInputStream(in, entryEncoding);", "            } else {", "                return new ModifiedTarArchiveInputStream(in);", "            }"]},
            {"line_number": 142, "new_lines": ["            if (entryEncoding != null) {", "                return new ModifiedTarArchiveInputStream(in, entryEncoding);", "            } else {", "                return new ModifiedTarArchiveInputStream(in);", "            }"]}
        ],
        "deletions": [],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java",
        "target_lines": [["90", "//"], ["155", "//"]],
        "insertions": [
            {"line_number": 90, "new_lines": ["            if (entryEncoding != null) {", "                return new ModifiedTarArchiveOutputStream(out, entryEncoding);", "            } else {", "                return new ModifiedTarArchiveOutputStream(out);", "            }"]},
            {"line_number": 155, "new_lines": ["            if (entryEncoding != null) {", "                return new ModifiedTarArchiveOutputStream(out, entryEncoding);", "            } else {", "                return new ModifiedTarArchiveOutputStream(out);", "            }"]}
        ],
        "deletions": [],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java",
        "target_lines": [["65", "//"], ["184", "//"]],
        "insertions": [
            {"line_number": 65, "new_lines": ["            if (entryEncoding != null) {", "                return new ModifiedZipArchiveInputStream(in, entryEncoding);", "            } else {", "                return new ModifiedZipArchiveInputStream(in);", "            }"]},
            {"line_number": 184, "new_lines": ["            if (entryEncoding != null) {", "                return new ModifiedZipArchiveInputStream(in, entryEncoding);", "            } else {", "                return new ModifiedZipArchiveInputStream(in);", "            }"]}
        ],
        "deletions": [],
        "modifications": []
    }
]