[
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["len = Math.min(buf.length, len);"]}, {"line_number": 532, "new_lines": ["if (len2 < 0) {", "    throw new IllegalArgumentException(\"Invalid length: \" + len2);", "}"]}, {"line_number": 539, "new_lines": ["}"]}, {"line_number": 672, "new_lines": ["}"]}], "deletions": [534, 536, 1887], "modifications": []
    },
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["len = Math.max(buf.length, len);"]}, {"line_number": 532, "new_lines": ["if (len2 == 0) {", "    return;","}"]}, {"line_number": 539, "new_lines": ["}"]}, {"line_number": 672, "new_lines": ["}"]}], "deletions": [534, 536, 1887], "modifications": []
    },
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["len = buf.length;"]}, {"line_number": 532, "new_lines": ["if (len2 > len) {", "    len2 = len;","}"]}, {"line_number": 539, "new_lines": ["}"]}, {"line_number": 672, "new_lines": ["}"]}], "deletions": [534, 536, 1887], "modifications": []
    }
][
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 < buf.length) {", "                len2++;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (len2 < buf.length) {", "                len2++;", "            }"]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 < buf.length) {", "                len2++;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 < buf.length) {", "                len2++;", "            }"]}, {"line_number": 672, "new_lines": ["            if (len2 > 0) {", "                len2--;", "            }"]}], "deletions": [534, 536, 1887], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0) {", "                len2--;", "            "]}, {"line_number": 539, "new_lines": ["            if (len2 > 0) {", "                len2--;", "            "]}, {"line_number": 672, "new_lines": ["            if (len2 > 0) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 == buf.length) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 == buf.length) {", "                len2--;", "            "]}, {"line_number": 539, "new_lines": ["            if (len2 == buf.length) {", "                len2--;", "            "]}, {"line_number": 672, "new_lines": ["            if (len2 == buf.length) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 < buf.length) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 < buf.length) {", "                len2--;", "            "]}, {"line_number": 539, "new_lines": ["            if (len2 < buf.length) {", "                len2--;", "            "]}, {"line_number": 672, "new_lines": ["            if (len2 < buf.length) {", "                len2--;", "            "]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isWhitespace(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 532, "new_lines": ["            if (Character.isWhitespace(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 539, "new_lines": ["            if (Character.isWhitespace(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 672, "new_lines": ["            if (Character.isWhitespace(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowerCase(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 532, "new_lines": ["            if (Character.isLowerCase(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 539, "new_lines": ["            if (Character.isLowerCase(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 672, "new_lines": ["            if (Character.isLowerCase(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isUpperCase(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 532, "new_lines": ["            if (Character.isUpperCase(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 539, "new_lines": ["            if (Character.isUpperCase(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 672, "new_lines": ["            if (Character.isUpperCase(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLetter(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 532, "new_lines": ["            if (Character.isLetter(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 539, "new_lines": ["            if (Character.isLetter(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 672, "new_lines": ["            if (Character.isLetter(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [534, 536, 1887], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0) {", "                buf[len2 - 1] = 'X';"]}, {"line_number": 532, "new_lines": ["            len2 = Math.max(buf.length, len);"]}, {"line_number": 539, "new_lines": ["            len2 = Math.max(buf.length, len);"]}, {"line_number": 672, "new_lines": ["            if (len2 > 0) {", "                buf[len2 - 1] = 'X';"]}], "deletions": [534, 536, 1887], "modifications": []},

{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0) {", "                buf[len2 - 1] = 'X';"]}, {"line_number": 532, "new_lines": ["            len2 = Math.min(buf.length, len);"]}, {"line_number": 539, "new_lines": ["            len2 = Math.min(buf.length, len);"]}, {"line_number": 672, "new_lines": ["            if (len2 > 0) {", "                buf[len2 - 1] = 'X';"]}], "deletions": [534, 536, 1887], "modifications": []},

{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0) {", "                buf[len2 - 1] = 'X';"]}, {"line_number": 532, "new_lines": ["            len2 = Math.min(buf.length, len);"]}, {"line_number": 539, "new_lines": ["            len2 = Math.min(buf.length, len);"]}, {"line_number": 672, "new_lines": ["            if (len2 > 0) {", "                buf[len2 - 1] = 'X';"]}], "deletions": [534, 536, 1887], "modifications": []},

{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0) {", "                buf[len2 - 1] = 'X';"]}, {"line_number": 532, "new_lines": ["            len2 = Math.min(buf.length, len);"]}, {"line_number": 539, "new_lines": ["            len2 = Math.min(buf.length, len);"]}, {"line_number": 672, "new_lines": ["            if (len2 > 0) {", "                buf[len2 - 1] = 'X';"]}], "deletions": [534, 536, 1887], "modifications": []},

{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0) {", "                buf[len2 - 1] = 'X';"]}, {"line_number": 532, "new_lines": ["            len2 = Math.min(buf.length, len);"]}, {"line_number": 539, "new_lines": ["            len2 = Math.min(buf.length, len);"]}, {"line_number": 672, "new_lines": ["            if (len2 > 0) {", "                buf[len2 - 1] = 'X';"]}], "deletions": [534, 536, 1887], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0) {", "                // Add your insertion here"]}, {"line_number": 532, "new_lines": ["            // Add your insertion here"]}, {"line_number": 539, "new_lines": ["            // Add your insertion here"]}, {"line_number": 672, "new_lines": ["            // Add your insertion here"]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            // Add your insertion here"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0) {", "                // Add your insertion here"]}, {"line_number": 539, "new_lines": ["            // Add your insertion here"]}, {"line_number": 672, "new_lines": ["            // Add your insertion here"]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            // Add your insertion here"]}, {"line_number": 532, "new_lines": ["            // Add your insertion here"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0) {", "                // Add your insertion here"]}, {"line_number": 672, "new_lines": ["            // Add your insertion here"]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            // Add your insertion here"]}, {"line_number": 532, "new_lines": ["            // Add your insertion here"]}, {"line_number": 539, "new_lines": ["            // Add your insertion here"]}, {"line_number": 672, "new_lines": ["            if (len2 > 0) {", "                // Add your insertion here"]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0) {", "                // Add your insertion here"]}, {"line_number": 532, "new_lines": ["            // Add your insertion here"]}, {"line_number": 539, "new_lines": ["            // Add your insertion here"]}, {"line_number": 672, "new_lines": ["            // Add your insertion here"]}], "deletions": [534, 536, 1887], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;", "            "]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;", "            "]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;", "            "]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 = Math.min(buf.length, len - 1);", "            "]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 = Math.min(buf.length, len - 1);", "            "]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 = Math.min(buf.length, len - 1);", "            "]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 = Math.min(buf.length, len - 1);", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 = Math.min(buf.length, len - 1);", "            "]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 = Math.min(buf.length, len - 1);", "            "]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 = Math.min(buf.length, len - 1);", "            "]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 = Math.min(buf.length, len - 1);", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 = Math.max(0, len2 - 1);", "            "]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 = Math.max(0, len2 - 1);", "            "]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 = Math.max(0, len2 - 1);", "            "]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 = Math.max(0, len2 - 1);", "            "]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
][
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0) {"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0) {"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0) {"]}, {"line_number": 672, "new_lines": ["            if (len2 > 0) {"]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 <= buf.length) {"]}, {"line_number": 532, "new_lines": ["            if (len2 <= buf.length) {"]}, {"line_number": 539, "new_lines": ["            if (len2 <= buf.length) {"]}, {"line_number": 672, "new_lines": ["            if (len2 <= buf.length) {"]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0 && len2 < buf.length) {"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0 && len2 < buf.length) {"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0 && len2 < buf.length) {"]}, {"line_number": 672, "new_lines": ["            if (len2 > 0 && len2 < buf.length) {"]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (buf.length > 0) {"]}, {"line_number": 532, "new_lines": ["            if (buf.length > 0) {"]}, {"line_number": 539, "new_lines": ["            if (buf.length > 0) {"]}, {"line_number": 672, "new_lines": ["            if (buf.length > 0) {"]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0 && len2 < buf.length) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0 && len2 < buf.length) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0 && len2 < buf.length) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (len2 > 0 && len2 < buf.length) {", "                len2--;"]}], "deletions": [534, 536, 1887], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 532, "new_lines": ["            while (len > 0) {", "                len--;", "            "]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 532, "new_lines": ["            while (len > 0) {", "                len--;", "            "]}], "deletions": [534, 536, 1887], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [534, 536, 1887], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0 && Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0 && Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0 && Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (len2 > 0 && Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}], "deletions": [534, 536, 1887]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0 && Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0 && Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0 && Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (len2 > 0 && Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}], "deletions": [534, 536, 1887]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0 && Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0 && Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0 && Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (len2 > 0 && Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}], "deletions": [534, 536, 1887]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0 && Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0 && Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0 && Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (len2 > 0 && Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}], "deletions": [534, 536, 1887]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0 && Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0 && Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0 && Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (len2 > 0 && Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}], "deletions": [534, 536, 1887]}
][
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
][
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} , {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} , {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} , {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} , {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} , {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}], "deletions": [], "modifications": []}
][{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            len2--;"]}, {"line_number": 532, "new_lines": ["            len2--;"]}, {"line_number": 539, "new_lines": ["            len2--;"]}, {"line_number": 672, "new_lines": ["            len2--;"]}], "deletions": [], "modifications": []}][
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 *= 2;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 *= 2;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 *= 2;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 *= 2;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 += 1;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 += 1;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 += 1;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 += 1;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 += 2;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 += 2;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 += 2;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 += 2;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 -= 1;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 -= 1;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 -= 1;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 -= 1;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 -= 2;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 -= 2;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 -= 2;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2 -= 2;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2++;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 *= 2;"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 *= 2;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 *= 2;"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 *= 2;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 += 1;"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 += 1;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 += 1;"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 += 1;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 += 2;"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 += 2;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 += 2;"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 += 2;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 -= 1;"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 -= 1;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 -= 1;"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 -= 1;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 -= 2;"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 -= 2;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 -= 2;"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2 -= 2;"]}]},
][
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 1) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 > 1) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 > 1) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 >= 0) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 >= 0) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 >= 0) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0 && buf != null) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0 && buf != null) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0 && buf != null) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0 && len2 < buf.length) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0 && len2 < buf.length) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0 && len2 < buf.length) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0 && len2 != buf.length) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0 && len2 != buf.length) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0 && len2 != buf.length) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0 && len2 > 1) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0 && len2 > 1) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0 && len2 > 1) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0 && len2 == buf.length) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0 && len2 == buf.length) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0 && len2 == buf.length) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0 && len2 <= buf.length) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0 && len2 <= buf.length) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0 && len2 <= buf.length) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0 && len2 > 0) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0 && len2 > 0) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0 && len2 > 0) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0 && len2 < buf.length - 1) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0 && len2 < buf.length - 1) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0 && len2 < buf.length - 1) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0 && len2 == buf.length - 1) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0 && len2 == buf.length - 1) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0 && len2 == buf.length - 1) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0 && len2 <= buf.length - 1) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0 && len2 <= buf.length - 1) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0 && len2 <= buf.length - 1) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0 && len2 != buf.length - 1) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0 && len2 != buf.length - 1) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0 && len2 != buf.length - 1) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0 && len2 > buf.length - 1) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0 && len2 > buf.length - 1) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0 && len2 > buf.length - 1) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0 && len2 >= buf.length - 1) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0 && len2 >= buf.length - 1) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0 && len2 >= buf.length - 1) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "[
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}]}},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}]}},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--; // Fixing the bug by decrementing len2 to handle split surrogate case"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--; // Fixing the bug by decrementing len2 to handle split surrogate case"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--; // Fixing the bug by decrementing len2 to handle split surrogate case"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--; // Fixing the bug by decrementing len2 to handle split surrogate case"]}]}
][
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0) {"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0) {"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0) {"]}, {"line_number": 672, "new_lines": ["            if (len2 > 0) {"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 <= buf.length) {"]}, {"line_number": 532, "new_lines": ["            if (len2 <= buf.length) {"]}, {"line_number": 539, "new_lines": ["            if (len2 <= buf.length) {"]}, {"line_number": 672, "new_lines": ["            if (len2 <= buf.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 < buf.length) {"]}, {"line_number": 532, "new_lines": ["            if (len2 < buf.length) {"]}, {"line_number": 539, "new_lines": ["            if (len2 < buf.length) {"]}, {"line_number": 672, "new_lines": ["            if (len2 < buf.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 >= buf.length) {"]}, {"line_number": 532, "new_lines": ["            if (len2 >= buf.length) {"]}, {"line_number": 539, "new_lines": ["            if (len2 >= buf.length) {"]}, {"line_number": 672, "new_lines": ["            if (len2 >= buf.length) {"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 == buf.length) {"]}, {"line_number": 532, "new_lines": ["            if (len2 == buf.length) {"]}, {"line_number": 539, "new_lines": ["            if (len2 == buf.length) {"]}, {"line_number": 672, "new_lines": ["            if (len2 == buf.length) {"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
][
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (buf[len2 - 1] == '\\uFFFF') {", "                len2--;"]}]},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887",[
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.max(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = buf.length;"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, text.length());"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len) + 1;"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len) - 1;"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len) * 2;"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len) / 2;"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = len;"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = buf.length - 1;"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = buf.length + len;"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = buf.length / len;"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = buf.length % len;"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = len - 1;"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = len + 1;"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = len / 2;"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError[
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2++;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2++"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2++"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2++"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2++;"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2++"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isSurrogate(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isSupplementaryCodePoint(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isSupplementaryCodePoint(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isSupplementaryCodePoint(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isSupplementaryCodePoint(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isBmpCodePoint(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isBmpCodePoint(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isBmpCodePoint(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isBmpCodePoint(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isAlphabetic(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isAlphabetic(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isAlphabetic(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isAlphabetic(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isDigit(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isDigit(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isDigit(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isDigit(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLetter(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isLetter(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isLetter(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isLetter(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isWhitespace(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isWhitespace(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isWhitespace(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isWhitespace(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isUpperCase(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isUpperCase(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isUpperCase(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isUpperCase(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowerCase(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowerCase(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowerCase(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowerCase(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isISOControl(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isISOControl(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isISOControl(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isISOControl(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isDefined(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isDefined(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isDefined(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isDefined(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowerCase(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowerCase(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowerCase(buf[len2 - 1])) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowerCase(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/core/json/UTF8[
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (len2 > 0) {", "                len2--;"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 != 0) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (len2 != 0) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (len2 != 0) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (len2 != 0) {", "                len2--;"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 <= 0) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (len2 <= 0) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (len2 <= 0) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (len2 <= 0) {", "                len2--;"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 >= 0) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (len2 >= 0) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (len2 >= 0) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (len2 >= 0) {", "                len2--;"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 < buf.length) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (len2 < buf.length) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (len2 < buf.length) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (len2 < buf.length) {", "                len2--;"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > buf.length) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (len2 > buf.length) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (len2 > buf.length) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (len2 > buf.length) {", "                len2--;"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 == buf.length) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (len2 == buf.length) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (len2 == buf.length) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (len2 == buf.length) {", "                len2--;"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 != buf.length) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (len2 != buf.length) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (len2 != buf.length) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (len2 != buf.length) {", "                len2--;"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 < len) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (len2 < len) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (len2 < len) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (len2 < len) {", "                len2--;"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > len) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (len2 > len) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (len2 > len) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (len2 > len) {", "                len2--;"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}]}],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}]}],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}]}],
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2++;"]}]}]
][
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 != 0) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 != 0) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 != 0) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 1) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 > 1) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 > 1) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 >= 0) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 >= 0) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 >= 0) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 2) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 > 2) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 > 2) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 5) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 > 5) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 > 5) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 < buf.length) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 < buf.length) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 < buf.length) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 == buf.length) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 == buf.length) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 == buf.length) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 != buf.length) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 != buf.length) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 != buf.length) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > buf.length) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 > buf.length) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 > buf.length) {", "                len2--;", "            "]}], "deletions": [], "modifications": []}
][
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}], "deletions": [], "modifications": []}
]
[
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isSurrogate(buf[len2 - 1])) {", "                len2--;"]}], "deletions": [], "modifications": []}
]
[
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isSurrogate(buf[len2 - 1])) {", "                len2--;"]}], "deletions": [], "modifications": []}
]
[
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}], "deletions": [], "modifications": []}
]
[
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}], "deletions": [], "modifications": []}
][{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 % 2 == 0) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (len2 % 2 == 0) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (len2 % 2 == 0) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (len2 % 2 == 0) {", "                len2--;"]}], "deletions": [], "modifications": []}][
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;", "            "]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 == buf.length) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 < buf.length) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (len2 != 0) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 >= 0) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 <= buf.length) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (len2 != buf.length) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 < buf.length) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 != buf.length) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 == 0) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (len2 > 0) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 != buf.length) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 < 0) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 >= buf.length) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (len2 <= 0) {", "                len2--;", "            "]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > buf.length) {", "                len2--;", "            }"]}, {"line_number": 532, "new_lines": ["            if (len2 == 0) {", "                len2--;", "            }"]}, {"line_number": 539, "new_lines": ["            if (len2 < buf.length) {", "                len2--;", "            }"]}, {"line_number": 672, "new_lines": ["            if (len2 != 0) {", "                len2--;", "            "]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
[
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]}]}
],
[
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (len2 > 0) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (len2 > 0) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (len2 > 0) {", "                len2--;"]}]}
],
[
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 + 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 + 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 + 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 + 1])) {", "                len2--;"]}]}
],
[
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 1])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 1])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 1])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 1])) {", "                len2--;"]}]}
],
[
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 1])) {", "                len2++;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 1])) {", "                len2++;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 1])) {", "                len2++;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 1])) {", "                len2++;"]}]}
],
[
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 2])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 2])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 2])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 2])) {", "                len2--;"]}]}
],
[
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 2])) {", "                len2++;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 2])) {", "                len2++;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 2])) {", "                len2++;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 2])) {", "                len2++;"]}]}
],
[
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 2])) {", "                len2--;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 2])) {", "                len2--;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 2])) {", "                len2--;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 2])) {", "                len2--;"]}]}
],
[
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 2])) {", "                len2++;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 2])) {", "                len2++;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 2])) {", "                len2++;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 2])) {", "                len2++;"]}]}
],
[
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 2])) {", "                len2 = len2 - 2;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 2])) {", "                len2 = len2 - 2;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 2])) {", "                len2 = len2 - 2;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 2])) {", "                len2 = len2 - 2;"]}]}
],
[
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 2])) {", "                len2 = len2 + 2;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 2])) {", "                len2 = len2 + 2;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 2])) {", "                len2 = len2 + 2;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 2])) {", "                len2 = len2 + 2;"]}]}
],
[
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 2])) {", "                len2 = len2 + 2;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 2])) {", "                len2 = len2 + 2;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 2])) {", "                len2 = len2 + 2;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 2])) {", "                len2 = len2 + 2;"]}]}
],
[
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 2])) {", "                len2 = len2 - 2;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 2])) {", "                len2 = len2 - 2;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 2])) {", "                len2 = len2 - 2;"]}, {"line_number": 672, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 + 2])) {", "                len2 = len2 - 2;"]}]}
],
[
{"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 2])) {", "                len2 = 0;"]}, {"line_number": 532, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 2])) {", "                len2 = 0;"]}, {"line_number": 539, "new_lines": ["            if (Character.isHighSurrogate(buf[len2 - 2])) {", "                len2 = 0;"]}, {"line[
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} , {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} , {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} , {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} ], "deletions": [], "modifications": []}
    },
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} , {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} , {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} , {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} ], "deletions": [], "modifications": []}
    },
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} , {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} , {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} , {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} ], "deletions": [], "modifications": []}
    },
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} , {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} , {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} , {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} ], "deletions": [], "modifications": []}
    },
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} , {"line_number": 532, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} , {"line_number": 539, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} , {"line_number": 672, "new_lines": ["            if (Character.isLowSurrogate(buf[len2 - 1])) {", "                len2--;"]} ], "deletions": [], "modifications": []}
    }
][
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            len2--;"]}, {"line_number": 532, "new_lines": ["            len2--;"]}, {"line_number": 539, "new_lines": ["            len2--;"]}, {"line_number": 672, "new_lines": ["            len2--;"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            len2 -= 2;"]}, {"line_number": 532, "new_lines": ["            len2 -= 2;"]}, {"line_number": 539, "new_lines": ["            len2 -= 2;"]}, {"line_number": 672, "new_lines": ["            len2 -= 2;"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            len2 += 1;"]}, {"line_number": 532, "new_lines": ["            len2 += 1;"]}, {"line_number": 539, "new_lines": ["            len2 += 1;"]}, {"line_number": 672, "new_lines": ["            len2 += 1;"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            len2 += 2;"]}, {"line_number": 532, "new_lines": ["            len2 += 2;"]}, {"line_number": 539, "new_lines": ["            len2 += 2;"]}, {"line_number": 672, "new_lines": ["            len2 += 2;"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            len2 *= 2;"]}, {"line_number": 532, "new_lines": ["            len2 *= 2;"]}, {"line_number": 539, "new_lines": ["            len2 *= 2;"]}, {"line_number": 672, "new_lines": ["            len2 *= 2;"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            len2 /= 2;"]}, {"line_number": 532, "new_lines": ["            len2 /= 2;"]}, {"line_number": 539, "new_lines": ["            len2 /= 2;"]}, {"line_number": 672, "new_lines": ["            len2 /= 2;"]}], "deletions": [], "modifications": []}
][
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 > 0) {"]}, {"line_number": 532, "new_lines": ["            if (len2 > 10) {"]}, {"line_number": 539, "new_lines": ["            if (len2 > 5) {"]}, {"line_number": 672, "new_lines": ["            if (len2 > 15) {"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 < 0) {"]}, {"line_number": 532, "new_lines": ["            if (len2 < 10) {"]}, {"line_number": 539, "new_lines": ["            if (len2 < 5) {"]}, {"line_number": 672, "new_lines": ["            if (len2 < 15) {"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 <= 0) {"]}, {"line_number": 532, "new_lines": ["            if (len2 <= 10) {"]}, {"line_number": 539, "new_lines": ["            if (len2 <= 5) {"]}, {"line_number": 672, "new_lines": ["            if (len2 <= 15) {"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 >= 0) {"]}, {"line_number": 532, "new_lines": ["            if (len2 >= 10) {"]}, {"line_number": 539, "new_lines": ["            if (len2 >= 5) {"]}, {"line_number": 672, "new_lines": ["            if (len2 >= 15) {"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java", "target_lines": [["534", "            int len2 = Math.min(buf.length, len);"], ["536", "            writeRaw(buf, 0, len2);"], ["1887", "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");"], ["528", "//"], ["532", "//"], ["539", "//"], ["672", "//"]], "insertions": [{"line_number": 528, "new_lines": ["            if (len2 != 0) {"]}, {"line_number": 532, "new_lines": ["            if (len2 != 10) {"]}, {"line_number": 539, "new_lines": ["            if (len2 != 5) {"]}, {"line_number": 672, "new_lines": ["            if (len2 != 15) {"]}], "deletions": [], "modifications": []}
]