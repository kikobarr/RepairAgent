[
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": [
"// Inserted new line to fix the bug by handling unexpected token"
]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": [
"if (p.getCurrentToken() == JsonToken.VALUE_STRING) {",
"    ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME,",
"            \"missing property '\"+_typePropertyName+\"' that is to contain type id  (for class \"+baseTypeName()+\")\");",
"    return null;",
"}"
]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": [
"if (p.getCurrentToken() == JsonToken.VALUE_STRING) {",
"    ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME,",
"            \"missing property '\"+_typePropertyName+\"' that is to contain type id  (for class \"+baseTypeName()+\")\");",
"}"
]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": [
"if (p.getCurrentToken() == JsonToken.VALUE_STRING) {",
"    ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME,",
"            \"missing property '\"+_typePropertyName+\"' that is to contain type id  (for class \"+baseTypeName()+\")\");",
"} else {",
"    return super.deserializeTypedFromAny(p, ctxt);",
"}"
]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": [
"if (p.getCurrentToken() == JsonToken.VALUE_STRING) {",
"    ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME,",
"            \"missing property '\"+_typePropertyName+\"' that is to contain type id  (for class \"+baseTypeName()+\")\");",
"} else {",
"    return null;",
"}"
]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": [
"if (p.getCurrentToken() == JsonToken.VALUE_STRING) {",
"    ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME,",
"            \"missing property '\"+_typePropertyName+\"' that is to contain type id  (for class \"+baseTypeName()+\")\");",
"    return super.deserializeTypedFromAny(p, ctxt);",
"}"
]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": [
"if (p.getCurrentToken() == JsonToken.VALUE_STRING) {",
"    ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME,",
"            \"missing property '\"+_typePropertyName+\"' that is to contain type id  (for class \"+baseTypeName()+\")\");",
"    return result;",
"}"
]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": [
"if (p.getCurrentToken() == JsonToken.VALUE_STRING) {",
"    ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME,",
"            \"missing property '\"+_typePropertyName+\"' that is to contain type id  (for class \"+baseTypeName()+\")\");",
"    return result;",
"} else {",
"    return super.deserializeTypedFromAny(p, ctxt);",
"}"
]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": [
"if (p.getCurrentToken() == JsonToken.VALUE_STRING) {",
"    ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME,",
"            \"missing property '\"+_typePropertyName+\"' that is to contain type id  (for class \"+baseTypeName()+\")\");",
"    return result;",
"} else {",
"    ctxt.reportWrongTokenException(p, JsonToken.START_ARRAY,",
"            \"unexpected token, expected FIELD_NAME 'type' to contain type id (for class \"+baseTypeName()+\")\");",
"    return null;",
"}"
]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": [
"if (p.getCurrentToken() == JsonToken.VALUE_STRING) {",
"    ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME,",
"            \"missing property '\"+_typePropertyName+\"' that is to contain type id  (for class \"+baseTypeName()+\")\");",
"    return result;",
"} else {",
"    ctxt.reportWrongTokenException(p, JsonToken.START_ARRAY,",
"            \"unexpected token, expected FIELD_NAME 'type' to contain type id (for class \"+baseTypeName()+\")\");",
"    return super.deserializeTypedFromAny(p, ctxt);",
"}"
]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '\"+_typePropertyName+\"' that is to contain type id  (for class \"+baseTypeName()+\")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '\"+_typePropertyName+\"' for type id  (for class \"+baseTypeName()+\")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '\"+_typePropertyName+\"' required for type id  (for class \"+baseTypeName()+\")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '\"+_typePropertyName+\"' needed for type id  (for class \"+baseTypeName()+\")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '\"+_typePropertyName+\"' expected for type id  (for class \"+baseTypeName()+\")\");", "return null;"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY || !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() != JsonToken.START_ARRAY && ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []}
][
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '\"+_typePropertyName+\"' that is to contain type id  (for class \"+baseTypeName()+\")\");", "return null;"]}], "deletions": [], "modifications": []}
]
,
[
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_OBJECT && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '\"+_typePropertyName+\"' that is to contain type id  (for class \"+baseTypeName()+\")\");", "return null;"]}], "deletions": [], "modifications": []}
]
,
[
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_OBJECT) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '\"+_typePropertyName+\"' that is to contain type id  (for class \"+baseTypeName()+\")\");", "return null;"]}], "deletions": [], "modifications": []}
]
,
[
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_OBJECT && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY) && !_typePropertyName.isEmpty()) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '\"+_typePropertyName+\"' that is to contain type id  (for class \"+baseTypeName()+\")\");", "return null;"]}], "deletions": [], "modifications": []}
]
,
[
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_OBJECT && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '\"+_typePropertyName+\"' that is to contain type id  (for class \"+baseTypeName()+\")\");", "return null;"]}], "deletions": [], "modifications": []}
]
,
[
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !_typePropertyName.isEmpty()) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '\"+_typePropertyName+\"' that is to contain type id  (for class \"+baseTypeName()+\")\");", "return null;"]}], "deletions": [], "modifications": []}
]
,
[
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY) && !_typePropertyName.isEmpty()) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '\"+_typePropertyName+\"' that is to contain type id  (for class \"+baseTypeName()+\")\");", "return null;"]}], "deletions": [], "modifications": []}
]
,
[
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !_typePropertyName.isEmpty() && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '\"+_typePropertyName+\"' that is to contain type id  (for class \"+baseTypeName()+\")\");", "return null;"]}], "deletions": [], "modifications": []}
]
,
[
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '\"+_typePropertyName+\"' that is to contain type id  (for class \"+baseTypeName()+\")\");", "return null;"]}]}
][{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []}][
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_OBJECT) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_OBJECT && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_OBJECT) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_OBJECT && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")");", "return null;"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY || p.getCurrentToken() == JsonToken.VALUE_NULL) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_OBJECT) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && ctxt.isEnabled(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY || p.getCurrentToken() == JsonToken.END_ARRAY) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && ctxt.isEnabled(DeserializationFeature.ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY || ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY || !ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY && ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java", "target_lines": [["156", "//"]], "insertions": [{"line_number": 156, "new_lines": ["if (p.getCurrentToken() == JsonToken.START_ARRAY || ctxt.isEnabled(DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY)) {", "ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")\");", "return null;"]}], "deletions": [], "modifications": []}
]