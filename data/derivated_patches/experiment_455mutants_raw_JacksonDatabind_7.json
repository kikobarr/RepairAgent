[
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["return this; // Fixed the bug by explicitly returning 'this'"]}, {"line_number": 406, "new_lines": ["return this; // Fixed the bug by explicitly returning 'this'"]}, {"line_number": 410, "new_lines": ["return this; // Fixed the bug by explicitly returning 'this'"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["return new TokenBuffer(); // Fixed the bug by returning a new TokenBuffer instance"]}, {"line_number": 406, "new_lines": ["return new TokenBuffer(); // Fixed the bug by returning a new TokenBuffer instance"]}, {"line_number": 410, "new_lines": ["return new TokenBuffer(); // Fixed the bug by returning a new TokenBuffer instance"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["return new TokenBuffer().deserialize(jp, ctxt); // Fixed the bug by returning a deserialized TokenBuffer instance"]}, {"line_number": 406, "new_lines": ["return new TokenBuffer().deserialize(jp, ctxt); // Fixed the bug by returning a deserialized TokenBuffer instance"]}, {"line_number": 410, "new_lines": ["return new TokenBuffer().deserialize(jp, ctxt); // Fixed the bug by returning a deserialized TokenBuffer instance"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["return this.deserialize(jp, ctxt); // Fixed the bug by calling the deserialize method"]}, {"line_number": 406, "new_lines": ["return this.deserialize(jp, ctxt); // Fixed the bug by calling the deserialize method"]}, {"line_number": 410, "new_lines": ["return this.deserialize(jp, ctxt); // Fixed the bug by calling the deserialize method"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["return new TokenBuffer().copyCurrentStructure(jp); // Fixed the bug by returning a new TokenBuffer instance with copied structure"]}, {"line_number": 406, "new_lines": ["return new TokenBuffer().copyCurrentStructure(jp); // Fixed the bug by returning a new TokenBuffer instance with copied structure"]}, {"line_number": 410, "new_lines": ["return new TokenBuffer().copyCurrentStructure(jp); // Fixed the bug by returning a new TokenBuffer instance with copied structure"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["return new TokenBuffer().toString(); // Fixed the bug by returning a string representation of a new TokenBuffer instance"]}, {"line_number": 406, "new_lines": ["return new TokenBuffer().toString(); // Fixed the bug by returning a string representation of a new TokenBuffer instance"]}, {"line_number": 410, "new_lines": ["return new TokenBuffer().toString(); // Fixed the bug by returning a string representation of a new TokenBuffer instance"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["return null; // Fixed the bug by explicitly returning null"]}, {"line_number": 406, "new_lines": ["return null; // Fixed the bug by explicitly returning null"]}, {"line_number": 410, "new_lines": ["return null; // Fixed the bug by explicitly returning null"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["return new TokenBuffer(); // Fixed the bug by returning a new TokenBuffer instance"]}, {"line_number": 406, "new_lines": ["return new TokenBuffer(); // Fixed the bug by returning a new TokenBuffer instance"]}, {"line_number": 410, "new_lines": ["return new TokenBuffer(); // Fixed the bug by returning a new TokenBuffer instance"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["return new TokenBuffer().asParser(); // Fixed the bug by returning a new parser instance"]}, {"line_number": 406, "new_lines": ["return new TokenBuffer().asParser(); // Fixed the bug by returning a new parser instance"]}, {"line_number": 410, "new_lines": ["return new TokenBuffer().asParser(); // Fixed the bug by returning a new parser instance"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["return new TokenBuffer().toString(); // Fixed the bug by returning a string representation of a new TokenBuffer instance"]}, {"line_number": 406, "new_lines": ["return new TokenBuffer().toString(); // Fixed the bug by returning a string representation of a new TokenBuffer instance"]}, {"line_number": 410, "new_lines": ["return new TokenBuffer().toString(); // Fixed the bug by returning a string representation of a new TokenBuffer instance"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines":["if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "    jp.nextToken(); // Consume FIELD_NAME token", "    jp.nextToken(); // Expecting START_OBJECT token"]} , {"line_number": 406, "new_lines":["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token"]} , {"line_number": 410, "new_lines":["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token"]} ], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.END_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.END_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.END_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_ARRAY) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_ARRAY) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_ARRAY) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.END_ARRAY) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.END_ARRAY) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.END_ARRAY) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.VALUE_STRING) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.VALUE_STRING) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.VALUE_STRING) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.VALUE_NUMBER_INT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.VALUE_NUMBER_INT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.VALUE_NUMBER_INT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.VALUE_TRUE) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.VALUE_TRUE) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.VALUE_TRUE) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.VALUE_FALSE) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.VALUE_FALSE) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.VALUE_FALSE) {", "            return this;", "        "]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "[
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []}
]
[
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []}
]
[
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            return this;", "        "]}], "deletions": [], "modifications": []}
]
[
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []}
]
[
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []}
]
[
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            return this;", "        "]}], "deletions": [], "modifications": []}
]
[
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []}
]
[
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []}
]
[
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}]}, "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}]}, "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}]}, "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "insertions": [], "deletions": [405, 406, 410], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME && jp.getCurrentToken() != JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME && jp.getCurrentToken() != JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME && jp.getCurrentToken() != JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME && !isStartObjectToken(jp)) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME && !isStartObjectToken(jp)) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME && !isStartObjectToken(jp)) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() != JsonToken.START_OBJECT) {", "                throw new IllegalStateException(\"Expected START_OBJECT token\");", "            }", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() != JsonToken.START_OBJECT) {", "                throw new IllegalStateException(\"Expected START_OBJECT token\");", "            }", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() != JsonToken.START_OBJECT) {", "                throw new IllegalStateException(\"Expected START_OBJECT token\");", "            }", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() != JsonToken.START_OBJECT) {", "                jp.nextToken(); // Consume unexpected token", "            }", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() != JsonToken.START_OBJECT) {", "                jp.nextToken(); // Consume unexpected token", "            }", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() != JsonToken.START_OBJECT) {", "                jp.nextToken(); // Consume unexpected token", "            }", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() != JsonToken.START_OBJECT) {", "                throw new IllegalStateException(\"Expected START_OBJECT token\");", "            } else {", "                throw new IllegalStateException(\"Unexpected token after FIELD_NAME\");", "            }", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() != JsonToken.START_OBJECT) {", "                throw new IllegalStateException(\"Expected START_OBJECT token\");", "            } else {", "                throw new IllegalStateException(\"Unexpected token after FIELD_NAME\");", "            }", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() != JsonToken.START_OBJECT) {", "                throw new IllegalStateException(\"Expected START_OBJECT token\");", "            } else {", "                throw new IllegalStateException(\"Unexpected token after FIELD_NAME\");", "            }", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "                jp.nextToken(); // Consume START_OBJECT token", "            }", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "                jp.nextToken(); // Consume START_OBJECT token", "            }", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "                jp.nextToken(); // Consume START_OBJECT token", "            }", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() != JsonToken.START_OBJECT) {", "                jp.nextValue(); // Consume unexpected token", "            }", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() != JsonToken.START_OBJECT) {", "                jp.nextValue(); // Consume unexpected token", "            }", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() != JsonToken.START_OBJECT) {", "                jp.nextValue(); // Consume unexpected token", "            }", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() == JsonToken.END_OBJECT) {", "                throw new IllegalStateException(\"Unexpected END_OBJECT token\");", "            }", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() == JsonToken.END_OBJECT) {", "                throw new IllegalStateException(\"Unexpected END_OBJECT token\");", "            }", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() == JsonToken.END_OBJECT) {", "                throw new IllegalStateException(\"Unexpected END_OBJECT token\");", "            }", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME && jp.getCurrentToken() != JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME && jp.getCurrentToken() != JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME && jp.getCurrentToken() != JsonToken.START_OBJECT) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() != JsonToken.START_OBJECT) {", "                throw new IllegalStateException(\"Expected START_OBJECT token\");", "            }", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() != JsonToken.START_OBJECT) {", "                throw new IllegalStateException(\"Expected START_OBJECT token\");", "            }", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() != JsonToken.START_OBJECT) {", "                throw new IllegalStateException(\"Expected START_OBJECT token\");", "            }", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "                jp.nextToken(); // Consume START_OBJECT token", "            }", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "                jp.nextToken(); // Consume START_OBJECT token", "            }", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "                jp.nextToken(); // Consume START_OBJECT token", "            }", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() == JsonToken.END_OBJECT) {", "                throw new IllegalStateException(\"Unexpected END_OBJECT token\");", "            }", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() == JsonToken.END_OBJECT) {", "                throw new IllegalStateException(\"Unexpected END_OBJECT token\");", "            }", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            if (jp.getCurrentToken() == JsonToken.END_OBJECT) {", "                throw new IllegalStateException(\"Unexpected END_OBJECT token\");", "            }", "            return this;", "        "]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, {"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, {"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], "insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], 
"insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, 
{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}, 
{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {", "            jp.nextToken(); // Consume FIELD_NAME token", "            jp.nextToken(); // Expecting START_OBJECT token", "            return this;", "        "]}], 
"deletions": [], 
"modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], 
"insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, 
{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, 
{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], 
"deletions": [], 
"modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], 
"insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME && jp.getCurrentToken().isStructStart()) {", "            return this;", "        "]}, 
{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME && jp.getCurrentToken().isStructStart()) {", "            return this;", "        "]}, 
{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.FIELD_NAME && jp.getCurrentToken().isStructStart()) {", "            return this;", "        "]}], 
"deletions": [], 
"modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], 
"insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, 
{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}, 
{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT) {", "            return this;", "        "]}], 
"deletions": [], 
"modifications": []},
{"file_name": "com/fasterxml/jackson/databind/util/TokenBuffer.java", "target_lines": [["405", "//"], ["406", "//"], ["410", "//"]], 
"insertions": [{"line_number": 405, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT && !jp.getParsingContext().inRoot()) {", "            return this;", "        "]}, 
{"line_number": 406, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT && !jp.getParsingContext().inRoot()) {", "            return this;", "        "]}, 
{"line_number": 410, "new_lines": ["        if (jp.getCurrentToken() == JsonToken.START_OBJECT && !jp.getParsingContext().inRoot()) {", "            return this;", "        "]}], 
"deletions": [], 
"modifications": []}
]