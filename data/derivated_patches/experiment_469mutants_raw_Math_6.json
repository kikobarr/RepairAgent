[
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java",
        "target_lines": [["191", "        int iter = 0;"], ["193", "            ++iter;"], ["227", "                    stop = checker.converged(iter, previous, current);"]],
        "insertions": [
            {"line_number": 192, "new_lines": ["        if (iter >= maxIterations) {", "            break;"]},
            {"line_number": 194, "new_lines": ["        if (iter >= maxIterations) {", "            break;"]},
            {"line_number": 228, "new_lines": ["                    if (iter >= maxIterations) {", "                        break;"]}
        ],
        "deletions": [],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java",
        "target_lines": [["214", "        int iter = 0;"], ["217", "            ++iter;"], ["223", "                if (checker.converged(iter, previous, current)) {"], ["277", "            if (iter % n == 0 ||"]],
        "insertions": [
            {"line_number": 215, "new_lines": ["        if (iter >= maxIterations) {", "            break;"]},
            {"line_number": 218, "new_lines": ["            if (iter >= maxIterations) {", "                break;"]},
            {"line_number": 224, "new_lines": ["                    if (iter >= maxIterations) {", "                        break;"]},
            {"line_number": 278, "new_lines": ["            if (iter >= maxIterations) {", "                break;"]}
        ],
        "deletions": [],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java",
        "target_lines": [["158", "            if (iteration > 0) {"], ["175", "\t\t\t++iteration;"]],
        "insertions": [
            {"line_number": 159, "new_lines": ["            if (iteration >= maxIterations) {", "                break;"]},
            {"line_number": 176, "new_lines": ["\t\t\tif (iteration >= maxIterations) {", "\t\t\t\tbreak;"]}
        ],
        "deletions": [],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java",
        "target_lines": [["106", "        int iter = 0;"], ["108", "            ++iter;"], ["160", "                converged = checker.converged(iter, previous, current);"]],
        "insertions": [
            {"line_number": 107, "new_lines": ["        if (iter >= maxIterations) {", "            break;"]},
            {"line_number": 109, "new_lines": ["            if (iter >= maxIterations) {", "                break;"]},
            {"line_number": 161, "new_lines": ["                if (iter >= maxIterations) {", "                    break;"]}
        ],
        "deletions": [],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/BaseOptimizer.java",
        "target_lines": [["51", "        iterations = new Incrementor(0, new MaxIterCallback());"]],
        "insertions": [
            {"line_number": 52, "new_lines": ["        if (iterations.getCount() >= maxIterations) {", "            throw new TooManyIterationsException(maxIterations);"]}
        ],
        "deletions": [],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java",
        "target_lines": [["322", "        int iter = 0;"], ["325", "            ++iter;"], ["489", "                        if (checker.converged(iter, previous, current)) {"],
        "insertions": [
            {"line_number": 323, "new_lines": ["        if (iter >= maxIterations) {", "            break;"]},
            {"line_number": 326, "new_lines": ["            if (iter >= maxIterations) {", "                break;"]},
            {"line_number": 490, "new_lines": ["                        if (iter >= maxIterations) {", "                            break;"]}
        ],
        "deletions": [],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "target_lines": [["388", "//"]],
        "insertions": [
            {"line_number": 388, "new_lines": ["        if (iteration >= maxIterations) {", "            stop = true;"]}
        ],
        "deletions": [],
        "modifications": []
    }
][
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java",
        "target_lines": [["191", "        int iter = 0;"], ["193", "            ++iter;"], ["227", "                    stop = checker.converged(iter, previous, current);"]],
        "insertions": [],
        "deletions": [191, 193, 227],
        "modifications": [
            {"line_number": 191, "modified_line": "        int iteration = 0;"},
            {"line_number": 193, "modified_line": "            ++iteration;"},
            {"line_number": 227, "modified_line": "                    stop = checker.converged(iteration, previous, current);"}
        ]
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java",
        "target_lines": [["214", "        int iter = 0;"], ["217", "            ++iter;"], ["223", "                if (checker.converged(iter, previous, current)) {"], ["277", "            if (iter % n == 0 ||"]],
        "insertions": [],
        "deletions": [214, 217, 223, 277],
        "modifications": [
            {"line_number": 214, "modified_line": "        int iteration = 0;"},
            {"line_number": 217, "modified_line": "            ++iteration;"},
            {"line_number": 223, "modified_line": "                if (checker.converged(iteration, previous, current)) {"}
        ]
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java",
        "target_lines": [["158", "            if (iteration > 0) {"], ["175", "\t\t\t++iteration;"]],
        "insertions": [],
        "deletions": [158, 175],
        "modifications": [
            {"line_number": 158, "modified_line": "            if (iter > 0) {"},
            {"line_number": 175, "modified_line": "\t\t\t++iter;"}
        ]
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java",
        "target_lines": [["106", "        int iter = 0;"], ["108", "            ++iter;"], ["160", "                converged = checker.converged(iter, previous, current);"]],
        "insertions": [],
        "deletions": [106, 108, 160],
        "modifications": [
            {"line_number": 106, "modified_line": "        int iteration = 0;"},
            {"line_number": 108, "modified_line": "            ++iteration;"},
            {"line_number": 160, "modified_line": "                converged = checker.converged(iteration, previous, current);"}
        ]
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java",
        "target_lines": [["322", "        int iter = 0;"], ["325", "            ++iter;"], ["489", "                        if (checker.converged(iter, previous, current)) {"],
        "insertions": [],
        "deletions": [322, 325, 489],
        "modifications": [
            {"line_number": 322, "modified_line": "        int iteration = 0;"},
            {"line_number": 325, "modified_line": "            ++iteration;"},
            {"line_number": 489, "modified_line": "                        if (checker.converged(iteration, previous, current)) {"}
        ]
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "target_lines": [["388", "//"]],
        "insertions": [
            {"line_number": 388, "new_lines": ["        int iteration = 0;"]}
        ],
        "deletions": [],
        "modifications": []
    }
][
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java",
        "target_lines": [["191", "        int iter = 0;"]],
        "insertions": [],
        "deletions": [191],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java",
        "target_lines": [["193", "            ++iter;"]],
        "insertions": [],
        "deletions": [193],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java",
        "target_lines": [["227", "                    stop = checker.converged(iter, previous, current);"]],
        "insertions": [],
        "deletions": [227],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java",
        "target_lines": [["214", "        int iter = 0;"]],
        "insertions": [],
        "deletions": [214],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java",
        "target_lines": [["217", "            ++iter;"]],
        "insertions": [],
        "deletions": [217],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java",
        "target_lines": [["223", "                if (checker.converged(iter, previous, current)) {"],
        "insertions": [],
        "deletions": [223],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java",
        "target_lines": [["277", "            if (iter % n == 0 ||"]],
        "insertions": [],
        "deletions": [277],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java",
        "target_lines": [["158", "            if (iteration > 0) {"],
        "insertions": [],
        "deletions": [158],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java",
        "target_lines": [["175", "\t\t\t++iteration;"]],
        "insertions": [],
        "deletions": [175],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java",
        "target_lines": [["106", "        int iter = 0;"]],
        "insertions": [],
        "deletions": [106],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java",
        "target_lines": [["108", "            ++iter;"]],
        "insertions": [],
        "deletions": [108],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java",
        "target_lines": [["160", "                converged = checker.converged(iter, previous, current);"]],
        "insertions": [],
        "deletions": [160],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/BaseOptimizer.java",
        "target_lines": [["51", "        iterations = new Incrementor(0, new MaxIterCallback());"]],
        "insertions": [],
        "deletions": [51],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java",
        "target_lines": [["322", "        int iter = 0;"]],
        "insertions": [],
        "deletions": [322],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java",
        "target_lines": [["325", "            ++iter;"]],
        "insertions": [],
        "deletions": [325],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java",
        "target_lines": [["489", "                        if (checker.converged(iter, previous, current)) {"],
        "insertions": [],
        "deletions": [489],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "target_lines": [["388", "//"]],
        "insertions": [],
        "deletions": [388],
        "modifications": []
    }
][
    {"file_name": "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java", "target_lines": [["191", "        int iter = 0;"], ["193", "            ++iter;"], ["227", "                    stop = checker.converged(iter, previous, current);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 191, "modified_line": "        int iter = 1;"}, {"line_number": 193, "modified_line": "            iter += 2;"}, {"line_number": 227, "modified_line": "                    stop = checker.converged(++iter, previous, current);"}]},
    {"file_name": "org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java", "target_lines": [["214", "        int iter = 0;"], ["217", "            ++iter;"], ["223", "                if (checker.converged(iter, previous, current)) {"], ["277", "            if (iter % n == 0 ||"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 214, "modified_line": "        int iter = 1;"}, {"line_number": 217, "modified_line": "            iter += 2;"}, {"line_number": 223, "modified_line": "                if (checker.converged(++iter, previous, current)) {"}, {"line_number": 277, "modified_line": "            if (++iter % n == 0 ||"}]},
    {"file_name": "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java", "target_lines": [["158", "            if (iteration > 0) {"], ["175", "\t\t\t++iteration;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 158, "modified_line": "            if (iteration >= 0) {"}, {"line_number": 175, "modified_line": "\t\t\titeration++;"}]},
    {"file_name": "org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java", "target_lines": [["106", "        int iter = 0;"], ["108", "            ++iter;"], ["160", "                converged = checker.converged(iter, previous, current);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 106, "modified_line": "        int iter = 1;"}, {"line_number": 108, "modified_line": "            iter += 2;"}, {"line_number": 160, "modified_line": "                converged = checker.converged(++iter, previous, current);"}]},
    {"file_name": "org/apache/commons/math3/optim/BaseOptimizer.java", "target_lines": [["51", "        iterations = new Incrementor(0, new MaxIterCallback());"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 51, "modified_line": "        iterations = new Incrementor(1, new MaxIterCallback());"}]},
    {"file_name": "org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java", "target_lines": [["322", "        int iter = 0;"], ["325", "            ++iter;"], ["489", "                        if (checker.converged(iter, previous, current)) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 322, "modified_line": "        int iter = 1;"}, {"line_number": 325, "modified_line": "            iter += 2;"}, {"line_number": 489, "modified_line": "                        if (checker.converged(++iter, previous, current)) {"}]},
    {"file_name": "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java", "target_lines": [["388", "//"]], "insertions": [{"line_number": 388, "new_lines": ["        if (iter >= maxIterations) {", "            stop = true;", "        } else {", "            stop = checker.converged(iter, previous, current);", "        }"]}], "deletions": [], "modifications": []}
][
    {"file_name": "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java", "target_lines": [["191", "        int iter = 0;"], ["193", "            ++iter;"], ["227", "                    stop = checker.converged(iter, previous, current);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 191, "modified_line": "        int iter = 1;"}, {"line_number": 193, "modified_line": "            iter += 2;"}, {"line_number": 227, "modified_line": "                    stop = checker.converged(iter+1, previous, current);"}]},
    {"file_name": "org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java", "target_lines": [["214", "        int iter = 0;"], ["217", "            ++iter;"], ["223", "                if (checker.converged(iter, previous, current)) {"], ["277", "            if (iter % n == 0 ||"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 214, "modified_line": "        int iter = 1;"}, {"line_number": 217, "modified_line": "            iter += 2;"}, {"line_number": 223, "modified_line": "                if (checker.converged(iter+1, previous, current)) {"}, {"line_number": 277, "modified_line": "            if (iter % n == 1 ||"}]},
    {"file_name": "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java", "target_lines": [["158", "            if (iteration > 0) {"], ["175", "\t\t\t++iteration;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 158, "modified_line": "            if (iteration <= 0) {"}, {"line_number": 175, "modified_line": "\t\t\titeration += 2;"}]},
    {"file_name": "org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java", "target_lines": [["106", "        int iter = 0;"], ["108", "            ++iter;"], ["160", "                converged = checker.converged(iter, previous, current);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 106, "modified_line": "        int iter = 1;"}, {"line_number": 108, "modified_line": "            iter += 2;"}, {"line_number": 160, "modified_line": "                converged = checker.converged(iter+1, previous, current);"}]},
    {"file_name": "org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java", "target_lines": [["322", "        int iter = 0;"], ["325", "            ++iter;"], ["489", "                        if (checker.converged(iter, previous, current)) {"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 322, "modified_line": "        int iter = 1;"}, {"line_number": 325, "modified_line": "            iter += 2;"}, {"line_number": 489, "modified_line": "                        if (checker.converged(iter+1, previous, current)) {"}]},
    {"file_name": "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java", "target_lines": [["388", "//"]], "insertions": [{"line_number": 388, "new_lines": ["        if (iter >= maxIterations) {", "            stop = true;", "        } else {", "            stop = checker.converged(iter+1, previous, current);", "        }"]}], "deletions": [], "modifications": []}
][
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java",
        "target_lines": [
            ["191", "        int iter = 0;"],
            ["193", "            ++iter;"],
            ["227", "                    stop = checker.converged(iter, previous, current);"]
        ],
        "insertions": [
            {"line_number": 191, "new_lines": ["        int iter = 1;"]},
            {"line_number": 193, "new_lines": ["            iter += 2;"]},
            {"line_number": 227, "new_lines": ["                    stop = iter > maxIterations;"]}
        ],
        "deletions": [],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java",
        "target_lines": [
            ["214", "        int iter = 0;"],
            ["217", "            ++iter;"],
            ["223", "                if (checker.converged(iter, previous, current)) {"],
            ["277", "            if (iter % n == 0 ||"]
        ],
        "insertions": [
            {"line_number": 214, "new_lines": ["        int iter = 1;"]},
            {"line_number": 217, "new_lines": ["            iter += 2;"]},
            {"line_number": 223, "new_lines": ["                if (iter >= maxIterations) {", "                    stop = true;", "                } else {", "                    stop = checker.converged(iter, previous, current);", "                "]},
            {"line_number": 277, "new_lines": ["            if (iter % n == 0 || iter > maxIterations"]}
        ],
        "deletions": [],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java",
        "target_lines": [
            ["158", "            if (iteration > 0) {"],
            ["175", "\t\t\t++iteration;"]
        ],
        "insertions": [
            {"line_number": 158, "new_lines": ["            if (iteration >= maxIterations) {", "                break;", "            "]},
            {"line_number": 175, "new_lines": ["\t\t\tif (iteration >= maxIterations) {", "\t\t\t    break;", "\t\t\t}"]}
        ],
        "deletions": [],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java",
        "target_lines": [
            ["106", "        int iter = 0;"],
            ["108", "            ++iter;"],
            ["160", "                converged = checker.converged(iter, previous, current);"]
        ],
        "insertions": [
            {"line_number": 106, "new_lines": ["        int iter = 1;"]},
            {"line_number": 108, "new_lines": ["            iter += 2;"]},
            {"line_number": 160, "new_lines": ["                if (iter >= maxIterations) {", "                    stop = true;", "                } else {", "                    stop = checker.converged(iter, previous, current);", "                "]}
        ],
        "deletions": [],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java",
        "target_lines": [
            ["322", "        int iter = 0;"],
            ["325", "            ++iter;"],
            ["489", "                        if (checker.converged(iter, previous, current)) {"]
        ],
        "insertions": [
            {"line_number": 322, "new_lines": ["        int iter = 1;"]},
            {"line_number": 325, "new_lines": ["            iter += 2;"]},
            {"line_number": 489, "new_lines": ["                        if (iter >= maxIterations) {", "                            stop = true;", "                        } else {", "                            stop = checker.converged(iter, previous, current);", "                        "]}
        ],
        "deletions": [],
        "modifications": []
    },
    {
        "file_name": "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "target_lines": [
            ["388", "//"]
        ],
        "insertions": [
            {"line_number": 388, "new_lines": ["        if (iter >= maxIterations) {", "            stop = true;", "        } else {", "            stop = checker.converged(iter, previous, current);", "        "]}
        ],
        "deletions": [],
        "modifications": []
    }
]