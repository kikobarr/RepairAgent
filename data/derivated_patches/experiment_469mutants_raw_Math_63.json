[
    {"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || Double.compare(x, y) == 0;"}]},
    {"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.compare(x, Double.NaN) == 0 && Double.compare(y, Double.NaN) == 0) || Double.compare(x, y) == 0;"}]},
    {"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || Double.compare(Double.valueOf(x), Double.valueOf(y)) == 0;"}]},
    {"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.compare(x, Double.NaN) == 0 && Double.compare(y, Double.NaN) == 0) || Double.compare(Double.valueOf(x), Double.valueOf(y)) == 0;"}]},
    {"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.compare(x, Double.NaN) == 0 && Double.compare(y, Double.NaN) == 0) || Double.doubleToLongBits(x) == Double.doubleToLongBits(y);"}]},
    {"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || Double.doubleToLongBits(x) == Double.doubleToLongBits(y);"}]},
    {"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || Double.compare(x, y) == 0;"}]},
    {"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || Double.compare(x, y) == 0;"}]},
    {"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.compare(x, Double.NaN) == 0 && Double.compare(y, Double.NaN) == 0) || x == y;"}]},
    {"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.compare(x, Double.NaN) == 0 && Double.compare(y, Double.NaN) == 0) || x == y;"}]}
][
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) && Double.isInfinite(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (x == y || Double.isInfinite(x) || Double.isInfinite(y));"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (x == y || (Double.isInfinite(x) && Double.isInfinite(y)));"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || (x == y || Double.isInfinite(x) || Double.isInfinite(y));"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || (x == y || (Double.isInfinite(x) && Double.isInfinite(y)));"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (x != y || Double.isInfinite(x) || Double.isInfinite(y));"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (x == y && !Double.isInfinite(x) && !Double.isInfinite(y));"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (x == y && (Double.isInfinite(x) || Double.isInfinite(y)));"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || (x != y && !Double.isInfinite(x) && !Double.isInfinite(y));"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (x != y && (Double.isInfinite(x) || Double.isInfinite(y)));"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || (x == y && !Double.isInfinite(x) && !Double.isInfinite(y));"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || (x == y && (Double.isInfinite(x) || Double.isInfinite(y)));"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y || (Double.isInfinite(x) && Double.isInfinite(y));"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y || Double.isInfinite(x) || Double.isInfinite(y);"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return !(Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return !(Double.isNaN(x) && Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return !(Double.isNaN(x) || Double.isNaN(y)) || (x == y && !Double.isInfinite(x) && !Double.isInfinite(y));"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return !(Double.isNaN(x) && Double.isNaN(y)) || (x == y && (Double.isInfinite(x) || Double.isInfinite(y)));"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return !(Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return !(Double.isNaN(x) || Double.isNaN(y)) || (x != y && !Double.isInfinite(x) && !Double.isInfinite(y));"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return !(Double.isNaN(x) && Double.isNaN(y)) || (x != y && (Double.isInfinite(x) || Double.isInfinite(y)));"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return !(Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return !(Double.isNaN(x) || Double.isNaN(y)) || (x == y && !Double.isInfinite(x) && !Double.isInfinite(y));"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return !(Double.isNaN(x) || Double.isNaN(y)) || (x == y && (Double.isInfinite(x) || Double.isInfinite(y)));"}]}
][
    {"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || x != y;"}]},
    {"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
    {"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isInfinite(x) && Double.isInfinite(y)) || x == y;"}]},
    {"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        // Adding a comment here for clarity"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 416, "new_lines": ["        if (Double.isInfinite(x) && Double.isInfinite(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) && Double.isInfinite(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) && Double.isInfinite(y)) || (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isInfinite(x) && Double.isInfinite(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) && Double.isInfinite(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isNaN(x) && Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) && Double.isInfinite(y)) || (Double.isNaN(x) && Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) && Double.isInfinite(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) && Double.isInfinite(y)) || (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isInfinite(x) && Double.isInfinite(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) && Double.isInfinite(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isNaN(x) && Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) && Double.isInfinite(y)) || (Double.isNaN(x) && Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) && Double.isInfinite(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) && Double.isInfinite(y)) || (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isInfinite(x) && Double.isInfinite(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) && Double.isInfinite(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isNaN(x) && Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) && Double.isInfinite(y)) || (Double.isNaN(x) && Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) && Double.isInfinite(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) && Double.isInfinite(y)) || (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || x != y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) && x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        if (Double.isNaN(x) || Double.isNaN(y)) {", "            return false;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        if (Double.isNaN(x) && Double.isNaN(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        if (Double.isNaN(x) && Double.isNaN(y)) {", "            return false;", "        }"]}], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 416, "new_lines": ["        if (Double.isNaN(x) || Double.isNaN(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        if (Double.isNaN(x) && Double.isNaN(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) && x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        if (Double.isNaN(x) || Double.isNaN(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) && x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 416, "new_lines": ["        if (Double.isNaN(x) && Double.isNaN(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 416, "new_lines": ["        if (Double.isNaN(x) || Double.isNaN(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) && x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 416, "new_lines": ["        if (Double.isNaN(x) && Double.isNaN(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        if (Double.isNaN(x) && Double.isNaN(y)) {", "            return false;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        if (Double.isNaN(x) && Double.isNaN(y)) {", "            return false;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) && x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        if (Double.isNaN(x) || Double.isNaN(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        if (Double.isNaN(x) && Double.isNaN(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 416, "new_lines": ["        if (Double.isNaN(x) || Double.isNaN(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 416, "new_lines": ["        if (Double.isNaN(x) && Double.isNaN(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) && x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 416, "new_lines": ["        if (Double.isNaN(x) && Double.isNaN(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 416, "new_lines": ["        if (Double.isNaN(x) || Double.isNaN(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) && x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 416, "new_lines": ["        if (Double.isNaN(x) && Double.isNaN(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return x == y;"}]}
][
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || x != y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || y == x;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x != y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || x >= y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || x <= y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || x > y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || x < y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || y >= x;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || y <= x;"}]}
][
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (x == y) || (Double.isNaN(x) && Double.isNaN(y));"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (x == y && x != 0 && y != 0);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && (x == y && x != 0 && y != 0);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (x == y) || (Double.isNaN(x) && Double.isNaN(y) && x != Double.POSITIVE_INFINITY && y != Double.POSITIVE_INFINITY);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && (x == y && x != Double.POSITIVE_INFINITY && y != Double.POSITIVE_INFINITY);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (x == y) || (Double.isNaN(x) && Double.isNaN(y) && x != Double.NEGATIVE_INFINITY && y != Double.NEGATIVE_INFINITY);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && (x == y && x != Double.NEGATIVE_INFINITY && y != Double.NEGATIVE_INFINITY);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (x == y) || (Double.isNaN(x) && Double.isNaN(y) && x != Double.NaN && y != Double.NaN);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && (x == y && x != Double.NaN && y != Double.NaN);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (x == y) || (Double.isNaN(x) && Double.isNaN(y) && x != Double.MIN_VALUE && y != Double.MIN_VALUE);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && (x == y && x != Double.MIN_VALUE && y != Double.MIN_VALUE);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (x == y) || (Double.isNaN(x) && Double.isNaN(y) && x != Double.MAX_VALUE && y != Double.MAX_VALUE);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && (x == y && x != Double.MAX_VALUE && y != Double.MAX_VALUE);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (x == y) || (Double.isNaN(x) && Double.isNaN(y) && x != Double.POSITIVE_INFINITY && y != Double.POSITIVE_INFINITY);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && (x == y && x != Double.POSITIVE_INFINITY && y != Double.POSITIVE_INFINITY);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (x == y) || (Double.isNaN(x) && Double.isNaN(y) && x != Double.NEGATIVE_INFINITY && y != Double.NEGATIVE_INFINITY);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && (x == y && x != Double.NEGATIVE_INFINITY && y != Double.NEGATIVE_INFINITY);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (x == y) || (Double.isNaN(x) && Double.isNaN(y) && x != Double.NaN && y != Double.NaN);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && (x == y && x != Double.NaN && y != Double.NaN);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (x == y) || (Double.isNaN(x) && Double.isNaN(y) && x != Double.MIN_VALUE && y != Double.MIN_VALUE);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && (x == y && x != Double.MIN_VALUE && y != Double.MIN_VALUE);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (x == y) || (Double.isNaN(x) && Double.isNaN(y) && x != Double.MAX_VALUE && y != Double.MAX_VALUE);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && (x == y && x != Double.MAX_VALUE && y != Double.MAX_VALUE);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (x == y) || (Double.isNaN(x) && Double.isNaN(y) && x != Double.POSITIVE_INFINITY && y != Double.POSITIVE_INFINITY);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && (x == y && x != Double.POSITIVE_INFINITY && y != Double.POSITIVE_INFINITY);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (x == y) || (Double.isNaN(x) && Double.isNaN(y) && x != Double.NEGATIVE_INFINITY && y != Double.NEGATIVE_INFINITY);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && (x == y && x != Double.NEGATIVE_INFINITY && y != Double.NEGATIVE_INFINITY);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (x == y) || (Double.isNaN(x) && Double.isNaN(y) && x != Double.NaN && y != Double.NaN);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && (x == y && x != Double.NaN && y != Double.NaN);"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && x == y && !Double.isInfinite(x) && !Double.isInfinite(y);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && x == y || (x == Double.POSITIVE_INFINITY && y == Double.POSITIVE_INFINITY) || (x == Double.NEGATIVE_INFINITY && y == Double.NEGATIVE_INFINITY);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && x == y || (x == Double.POSITIVE_INFINITY && y == Double.POSITIVE_INFINITY) || (x == Double.NEGATIVE_INFINITY && y == Double.NEGATIVE_INFINITY) || (x == Double.NaN && y == Double.NaN);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && x == y || (x == Double.POSITIVE_INFINITY && y == Double.POSITIVE_INFINITY) || (x == Double.NEGATIVE_INFINITY && y == Double.NEGATIVE_INFINITY) || (Double.isInfinite(x) && Double.isInfinite(y));"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && x == y || (x == Double.POSITIVE_INFINITY && y == Double.POSITIVE_INFINITY) || (x == Double.NEGATIVE_INFINITY && y == Double.NEGATIVE_INFINITY) || (Double.isInfinite(x) && Double.isInfinite(y)) || (x == Double.NaN && y == Double.NaN);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && x == y || (x == Double.POSITIVE_INFINITY && y == Double.POSITIVE_INFINITY) || (x == Double.NEGATIVE_INFINITY && y == Double.NEGATIVE_INFINITY) || (Double.isInfinite(x) && Double.isInfinite(y)) || (x == Double.NaN && y == Double.NaN);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && x == y || (x == Double.POSITIVE_INFINITY && y == Double.POSITIVE_INFINITY) || (x == Double.NEGATIVE_INFINITY && y == Double.NEGATIVE_INFINITY) || (Double.isInfinite(x) && Double.isInfinite(y)) || (x == Double.NaN && y == Double.NaN);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && x == y || (x == Double.POSITIVE_INFINITY && y == Double.POSITIVE_INFINITY) || (x == Double.NEGATIVE_INFINITY && y == Double.NEGATIVE_INFINITY) || (Double.isInfinite(x) && Double.isInfinite(y)) || (x == Double.NaN && y == Double.NaN);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) && x == y || (x == Double.POSITIVE_INFINITY && y == Double.POSITIVE_INFINITY) || (x == Double.NEGATIVE_INFINITY && y == Double.NEGATIVE_INFINITY) || (Double.isInfinite(x) && Double.isInfinite(y)) || (x == Double.NaN && y == Double.NaN);"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isInfinite(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isInfinite(y)) || (Double.isNaN(y) && Double.isInfinite(x));"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) && Double.isNaN(y));"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isInfinite(y)) || (Double.isNaN(y) && Double.isInfinite(x));"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) || (Double.isInfinite(x) && Double.isInfinite(y));"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isInfinite(y)) || (Double.isNaN(y) && Double.isInfinite(x));"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isInfinite(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isInfinite(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isNaN(y) && Double.isInfinite(x));"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isFinite(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isFinite(y)) || (Double.isNaN(y) && Double.isFinite(x));"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isFinite(y)) || (Double.isNaN(y) && Double.isFinite(x));"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isFinite(y)) || (Double.isInfinite(x) && Double.isNaN(y));"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isFinite(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isInfinite(x) && Double.isInfinite(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isInfinite(x) && Double.isFinite(y)) || (Double.isNaN(y) && Double.isInfinite(x));"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isInfinite(x) && Double.isFinite(y)) || (Double.isNaN(y) && Double.isInfinite(x));"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isInfinite(x) && Double.isFinite(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isInfinite(x) && Double.isFinite(y)) || (Double.isNaN(y) && Double.isNaN(x));"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isInfinite(x) && Double.isFinite(y)) || (Double.isInfinite(y) && Double.isFinite(x));"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isInfinite(x) && Double.isFinite(y)) || (Double.isInfinite(y) && Double.isFinite(x));"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isInfinite(x) && Double.isFinite(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isInfinite(x) && Double.isFinite(y)) || (Double.isInfinite(y) && Double.isNaN(x));"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isInfinite(x) && Double.isFinite(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isInfinite(x) && Double.isInfinite(y)) || (Double.isNaN(y) && Double.isNaN(x));"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isInfinite(x) && Double.isInfinite(y)) || (Double.isInfinite(y) && Double.isNaN(x));"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isInfinite(x) && Double.isInfinite(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isInfinite(x) && Double.isInfinite(y)) || (Double.isFinite(x) && Double.isFinite(y));"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isInfinite(x) && Double.isInfinite(y)) || (Double.isFinite(x) && Double.isFinite(y));"]}], "deletions": [], "modifications": []}
][{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        if (Double.isInfinite(x) && Double.isInfinite(y)) {", "            return true;"]}], "deletions": [], "modifications": []}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        if (Double.isNaN(x) && Double.isNaN(y)) {", "            return true;"]}], "deletions": [], "modifications": []}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        if (Double.isNaN(x) && Double.isNaN(y)) {", "            return true;"]}], "deletions": [], "modifications": []}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        if (Double.isNaN(x) && Double.isNaN(y)) {", "            return true;"]}], "deletions": [], "modifications": []}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        if (Double.isNaN(x) && Double.isNaN(y)) {", "            return true;"]}], "deletions": [], "modifications": []}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        if (Double.isNaN(x) && Double.isNaN(y)) {", "            return true;"]}], "deletions": [], "modifications": []}][
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || x != y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) && Double.isInfinite(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isNaN(x) && Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isInfinite(x) || Double.isInfinite(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y || (x < y && y > x);"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || x != y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || x != y;"}]}
][
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isInfinite(x)) && (Double.isNaN(y) || Double.isInfinite(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        if (Double.isNaN(x) || Double.isNaN(y)) {", "            return true;", "        }"]}, {"line_number": 418, "new_lines": ["        if (Double.isInfinite(x) || Double.isInfinite(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 416, "new_lines": ["        if (Double.isNaN(x) || Double.isNaN(y)) {", "            return true;", "        }"]}, {"line_number": 417, "new_lines": ["        if (Double.isInfinite(x) || Double.isInfinite(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 416, "new_lines": ["        if (Double.isNaN(x) || Double.isNaN(y)) {", "            return true;", "        }"]}, {"line_number": 417, "new_lines": ["        if (Double.isInfinite(x) || Double.isInfinite(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 416, "new_lines": ["        if (Double.isNaN(x) && Double.isNaN(y)) {", "            return true;", "        }"]}, {"line_number": 417, "new_lines": ["        if (Double.isInfinite(x) && Double.isInfinite(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 416, "new_lines": ["        if (Double.isNaN(x) && Double.isNaN(y)) {", "            return true;", "        }"]}, {"line_number": 417, "new_lines": ["        if (Double.isInfinite(x) && Double.isInfinite(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 416, "new_lines": ["        if (Double.isNaN(x) || Double.isNaN(y)) {", "            return true;", "        }"]}, {"line_number": 417, "new_lines": ["        if (Double.isInfinite(x) || Double.isInfinite(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 416, "new_lines": ["        if (Double.isNaN(x) || Double.isNaN(y)) {", "            return true;", "        }"]}, {"line_number": 417, "new_lines": ["        if (Double.isInfinite(x) || Double.isInfinite(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 416, "new_lines": ["        if (Double.isNaN(x) && Double.isNaN(y)) {", "            return true;", "        }"]}, {"line_number": 417, "new_lines": ["        if (Double.isInfinite(x) && Double.isInfinite(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) || Double.isInfinite(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        if (Double.isNaN(x) || Double.isNaN(y)) {", "            return true;", "        }"]}, {"line_number": 417, "new_lines": ["        if (Double.isInfinite(x) || Double.isInfinite(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 416, "new_lines": ["        if (Double.isNaN(x) || Double.isNaN(y)) {", "            return true;", "        }"]}, {"line_number": 417, "new_lines": ["        if (Double.isInfinite(x) || Double.isInfinite(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) || Double.isInfinite(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 416, "new_lines": ["        if (Double.isNaN(x) || Double.isNaN(y)) {", "            return true;", "        }"]}, {"line_number": 417, "new_lines": ["        if (Double.isInfinite(x) || Double.isInfinite(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 416, "new_lines": ["        if (Double.isNaN(x) && Double.isNaN(y)) {", "            return true;", "        }"]}, {"line_number": 417, "new_lines": ["        if (Double.isInfinite(x) && Double.isInfinite(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) || Double.isInfinite(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) || Double.isInfinite(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) || Double.isInfinite(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) || Double.isInfinite(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) || Double.isInfinite(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        if (Double.isNaN(x) || Double.isNaN(y)) {", "            return true;", "        }"]}, {"line_number": 417, "new_lines": ["        if (Double.isInfinite(x) || Double.isInfinite(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 416, "new_lines": ["        if (Double.isNaN(x) && Double.isNaN(y)) {", "            return true;", "        }"]}, {"line_number": 417, "new_lines": ["        if (Double.isInfinite(x) && Double.isInfinite(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) || Double.isInfinite(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) || Double.isInfinite(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) || Double.isInfinite(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) || Double.isInfinite(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) || Double.isInfinite(y)) || x == y;"}]}
][
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || x != y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || x != y || Double.isInfinite(x) || Double.isInfinite(y);"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        if(x == 0 && y == 0) {", "            return true;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 416, "new_lines": ["        if (Double.isNaN(x) && Double.isNaN(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        if(Double.isNaN(x) && Double.isNaN(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y || Double.isInfinite(x) || Double.isInfinite(y);"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 416, "new_lines": ["        if (Double.isNaN(x) && Double.isNaN(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        if(Double.isNaN(x) && Double.isNaN(y)) {", "            return true;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        if(x == 0 && y == 0) {", "            return true;", "        }"]}], "deletions": [], "modifications": []}
][{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) && Double.isInfinite(y)) || x == y;"}]}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) || Double.isInfinite(y)) || x == y;"}]}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || x > y;"}]}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || x != y;"}]}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || (x > y);"}]}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (x >= y);"}]}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) && Double.isNaN(y)) || (x <= y);"}]}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x != y;"}]}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || (x > y);"}]}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || (x >= y);"}]}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || (x <= y);"}]}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x != y;"}]}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || (x > y);"}]}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || (x >= y);"}]}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || (x <= y);"}]}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x != y;"}]}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || (x > y);"}]}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || (x >= y);"}]}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || (x <= y);"}]}]

[{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]}][
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) && Double.isInfinite(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) && Double.isInfinite(y)) || x == y;"]}], "deletions": [417], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"]}], "deletions": [417], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) || Double.isInfinite(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) || Double.isInfinite(y)) || x == y;"]}], "deletions": [417], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"]}], "deletions": [417], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"]}], "deletions": [417], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) || Double.isInfinite(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) && Double.isNaN(y)) || (Double.isInfinite(x) || Double.isInfinite(y)) || x == y;"]}], "deletions": [417], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [{"line_number": 417, "new_lines": ["        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"]}], "deletions": [417], "modifications": []},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]},
{"file_name": "org/apache/commons/math/util/MathUtils.java", "target_lines": [["417", "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;"]], "insertions": [], "deletions": [417], "modifications": [{"line_number": 417, "modified_line": "        return (Double.isNaN(x) || Double.isNaN(y)) || x == y;"}]}
]