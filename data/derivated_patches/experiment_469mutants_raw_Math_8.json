[
    {"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 181, "new_lines": ["        if (sampleSize <= 0) {"]}], "deletions": [187], "modifications": []},
    {"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 187, "new_lines": ["        return out;"]}], "deletions": [181], "modifications": []},
    {"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 186, "new_lines": ["        if (out.length != sampleSize) {"]}], "deletions": [181], "modifications": []},
    {"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 187, "new_lines": ["        out = Arrays.copyOf(out, sampleSize);"]}], "deletions": [181], "modifications": []},
    {"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 186, "new_lines": ["        if (out == null) {"]}], "deletions": [181], "modifications": []}
][
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 182, "new_lines": ["        if (sampleSize <= 0) {", "            throw new IllegalArgumentException(\"Sample size must be positive\");", "        }"]}], "deletions": [181, 187], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 186, "new_lines": ["        if (out.length != sampleSize) {", "            throw new IllegalArgumentException(\"Incorrect sample size\");", "        }"]}], "deletions": [181, 187], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 185, "new_lines": ["        if (singletons.isEmpty()) {", "            throw new IllegalStateException(\"Singletons list is empty\");", "        }"]}], "deletions": [181, 187], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 182, "new_lines": ["        if (singletons.size() < sampleSize) {", "            throw new IllegalArgumentException(\"Sample size exceeds singletons list size\");", "        }"]}], "deletions": [181, 187], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 186, "new_lines": ["        if (singletons.get(0) == null) {", "            throw new NullPointerException(\"First element in singletons list is null\");", "        }"]}], "deletions": [181, 187], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 186, "new_lines": ["        if (singletons.size() == 0) {", "            throw new IllegalArgumentException(\"Singletons list is empty\");", "        }"]}], "deletions": [181, 187], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 187, "new_lines": ["        if (sampleSize < 1) {", "            throw new IllegalArgumentException(\"Sample size must be at least 1\");", "        }"]}], "deletions": [181], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 181, "new_lines": ["    public T[] sample(int sampleSize) throws IllegalArgumentException {"]}], "deletions": [187], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 187, "new_lines": ["        if (singletons.isEmpty()) {", "            throw new IllegalStateException(\"Singletons list is empty\");", "        }"]}], "deletions": [181], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 185, "new_lines": ["        if (sampleSize > singletons.size()) {", "            throw new IllegalArgumentException(\"Sample size exceeds singletons list size\");", "        }"]}], "deletions": [181], "modifications": []}
][
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 186, "new_lines": ["        if (sampleSize == 0) {", "            throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,", "                    sampleSize);", "        }"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 186, "new_lines": ["        if (sampleSize < 0) {", "            throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,", "                    sampleSize);", "        }"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 186, "new_lines": ["        if (sampleSize <= 0) {", "            throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,", "                    sampleSize);", "        }"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 186, "new_lines": ["        if (sampleSize > 0) {", "            throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,", "                    sampleSize);", "        }"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 186, "new_lines": ["        if (sampleSize == -1) {", "            throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,", "                    sampleSize);", "        }"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 186, "new_lines":["        if (sampleSize == 0) {", "            throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES, sampleSize);", "        }"]}], "deletions": [181, 187], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 186, "new_lines":["        if (sampleSize < 0) {", "            throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES, sampleSize);", "        }"]}], "deletions": [181, 187], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 186, "new_lines":["        if (sampleSize <= 0) {", "            throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES, sampleSize);", "        }"]}], "deletions": [181, 187], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 186, "new_lines":["        if (sampleSize != 0) {", "            out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);", "        }"]}], "deletions": [181, 187], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 186, "new_lines":["        if (sampleSize > 0) {", "            out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);", "        }"]}], "deletions": [181, 187], "modifications": []}
][
    {"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [], "deletions": [181, 187], "modifications": [{"line_number": 181, "modified_line": "public void sample(String param1, int param2) {}"}, {"line_number": 187, "modified_line": "        final Object[] out = java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}]}
]

[
    {"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 181, "new_lines": ["        @SuppressWarnings(\"unchecked\")"]}, {"line_number": 181, "new_lines": ["        final T[] out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]}], "deletions": [181, 187], "modifications": [{"line_number": 187, "modified_line": "        final Object[] out = java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}]}
]

[
    {"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [], "deletions": [181, 187], "modifications": [{"line_number": 181, "modified_line": "public T sample(int sampleSize) throws NotStrictlyPositiveException {}"}, {"line_number": 187, "modified_line": "        final Object[] out = java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}]}
]

[
    {"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 181, "new_lines": ["        // Inserted comment for clarification"]}], "deletions": [181, 187], "modifications": [{"line_number": 187, "modified_line": "        final Object[] out = java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}]}
]

[
    {"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 181, "new_lines": ["        if (sampleSize <= 0) {"]}], "deletions": [187], "modifications": [{"line_number": 187, "modified_line": "        final Object[] out = java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}]}
][
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [], "deletions": [181, 187], "modifications": [{"line_number": 181, "modified_line": "public void sample(String param1, int param2) {"}, {"line_number": 182, "modified_line": "    // Implementation here"}, {"line_number": 183, "modified_line": "    System.out.println(\"Param1: \" + param1);"}, {"line_number": 184, "modified_line": "    System.out.println(\"Param2: \" + param2);"}, {"line_number": 185, "modified_line": "}"}]},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 187, "modified_line": "        final Object[] out = java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}]},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 187, "modified_line": "        final Object[] out = java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}]},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 181, "new_lines": ["        @SuppressWarnings(\"unchecked\")", "        final T[] out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}], "deletions": [], "modifications": [{"line_number": 187, "modified_line": "        final Object[] out = java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}]},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [], "deletions": [181, 187], "modifications": [{"line_number": 181, "modified_line": "public void sample(String input) {"}, {"line_number": 182, "modified_line": "    // Check if input is null"}, {"line_number": 183, "modified_line": "    if (input == null) {"}, {"line_number": 184, "modified_line": "        System.out.println(\"Input is null\");"}, {"line_number": 185, "modified_line": "        return;"}, {"line_number": 186, "modified_line": "}"}]}
][{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 182, "new_lines":["        // Inserted line for mutation 1"]}], "deletions": [181, 187], "modifications": []}]

[{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 181, "new_lines":["        // Inserted line for mutation 2"]}], "deletions": [187], "modifications": []}]

[{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [], "deletions": [181], "modifications": [{"line_number": 181, "modified_line": "public void sample(int sampleSize) throws NotStrictlyPositiveException {"}]}]

[{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [], "deletions": [187], "modifications": [{"line_number": 187, "modified_line": "        final Object[] out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}]}]

[{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 182, "new_lines":["        // Inserted line for mutation 5"]}], "deletions": [181], "modifications": [{"line_number": 187, "modified_line": "        final Object[] out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}]}][
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 182, "new_lines": ["        if (sampleSize == 0) {", "            return null;", "        }"]}], "deletions": [181, 187], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 187, "new_lines": ["        final Object[] out = new Object[sampleSize];"]}], "deletions": [181, 187], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 187, "new_lines": ["        final Object[] out = new Object[sampleSize];", "        for (int i = 0; i < sampleSize; i++) {", "            out[i] = singletons.get(0);", "        }"]}], "deletions": [181, 187], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 187, "new_lines": ["        final Object[] out = new Object[sampleSize];", "        for (int i = 0; i < sampleSize; i++) {", "            out[i] = singletons.get(i % singletons.size());", "        }"]}], "deletions": [181, 187], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 187, "new_lines": ["        final Object[] out = new Object[sampleSize];", "        for (int i = 0; i < sampleSize; i++) {", "            out[i] = singletons.get(i % singletons.size() + 1);", "        }"]}], "deletions": [181, 187], "modifications": []}
][
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 181, "new_lines": ["        // Inserted line for mutation"]} , {"line_number": 187, "new_lines": ["        // Inserted line for mutation"]}], "deletions": [181, 187], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 181, "new_lines": ["        int modifiedSampleSize = sampleSize * 2;"]} , {"line_number": 187, "new_lines": ["        // Inserted line for mutation"]}], "deletions": [181, 187], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 181, "new_lines": ["        // Inserted line for mutation"]} , {"line_number": 187, "new_lines": ["        Object[] newOut = new Object[sampleSize]; // Inserted line for mutation"]}], "deletions": [181, 187], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 181, "new_lines": ["        sampleSize = sampleSize + 1; // Inserted line for mutation"]} , {"line_number": 187, "new_lines": ["        // Inserted line for mutation"]}], "deletions": [181, 187], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 181, "new_lines": ["        if (sampleSize % 2 == 0) { return null; } // Inserted line for mutation"]} , {"line_number": 187, "new_lines": ["        // Inserted line for mutation"]}], "deletions": [181, 187], "modifications": []}
][
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [], "deletions": [181, 187], "modifications": [{"line_number": 181, "modified_line": "public void sample(String param1, int param2) {"}, {"line_number": 182, "modified_line": "    // Implementation here"}, {"line_number": 183, "modified_line": "    System.out.println("Param1: " + param1);"}, {"line_number": 184, "modified_line": "    System.out.println("Param2: " + param2);"}, {"line_number": 185, "modified_line": "}"}]},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 187, "modified_line": "        final Object[] out = java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}]},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 181, "new_lines": ["@SuppressWarnings("unchecked")", "        final T[] out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}], "deletions": [], "modifications": [{"line_number": 187, "modified_line": "        final Object[] out = java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}]},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [], "deletions": [181, 187], "modifications": [{"line_number": 181, "modified_line": "public void sample(String input) {"}, {"line_number": 182, "modified_line": "    // Check if input is null"}, {"line_number": 183, "modified_line": "    if (input == null) {"}, {"line_number": 184, "modified_line": "        System.out.println("Input is null");"}, {"line_number": 185, "modified_line": "        return;"}, {"line_number": 186, "modified_line": "    "}, {"line_number": 187, "modified_line": "}"}]},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 187, "new_lines": ["        @SuppressWarnings("unchecked")", "        final T[] out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "deletions": [], "modifications": [{"line_number": 187, "modified_line": "        final T[] out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}]},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 187, "modified_line": "final T[] out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}]},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [], "deletions": [181, 187], "modifications": [{"line_number": 181, "modified_line": "    public Object[] sample(int sampleSize) throws NotStrictlyPositiveException {"}, {"line_number": 187, "modified_line": "        final Object[] out = java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}]}
][
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 182, "new_lines": ["        if (sampleSize == 0) {"]}], "deletions": [181, 187], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 181, "new_lines": ["        if (sampleSize < 0) {"]}], "deletions": [181, 187], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 186, "new_lines": ["            if (sampleSize == 0) {"]}], "deletions": [181, 187], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 186, "new_lines": ["            if (sampleSize < 0) {"]}], "deletions": [181, 187], "modifications": []},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 187, "new_lines": ["        if (sampleSize < 1) {"]}], "deletions": [181, 187], "modifications": []}
][{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 181, "new_lines": ["// Inserted comment for mutation 1"]}, {"line_number": 187, "new_lines": ["// Inserted comment for mutation 1"]}], "deletions": [181, 187], "modifications": []}]

[{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 181, "new_lines": ["// Inserted code for mutation 2"]}, {"line_number": 187, "new_lines": ["// Inserted code for mutation 2"]}], "deletions": [181, 187], "modifications": []}]

[{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 181, "new_lines": ["// Inserted new variable declaration for mutation 3", "int i = 0;"]}, {"line_number": 187, "new_lines": ["// Inserted new variable declaration for mutation 3", "int j = 0;"]}], "deletions": [181, 187], "modifications": []}]

[{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [], "deletions": [181, 187], "modifications": [{"line_number": 181, "modified_line": "public T sample(int sampleSize) throws NotStrictlyPositiveException {"}, {"line_number": 187, "modified_line": "        final T out = (T) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}]}]

[{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [], "deletions": [181, 187], "modifications": [{"line_number": 181, "modified_line": "public void sample(int sampleSize) throws NotStrictlyPositiveException {"}, {"line_number": 187, "modified_line": "        final Object out = java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}]}][
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 181, "new_lines": ["// Inserted line for mutation"]} , {"line_number": 187, "new_lines": ["// Inserted line for mutation"]}], "deletions": [181, 187], "modifications": [{"line_number": 181, "modified_line": "public void sample(String param1, int param2) {"}, {"line_number": 187, "modified_line": "        final Object[] out = java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}]},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 181, "new_lines": ["// Inserted line for mutation"]} , {"line_number": 187, "new_lines": ["// Inserted line for mutation"]}], "deletions": [181, 187], "modifications": [{"line_number": 181, "modified_line": "public Object[] sample(int sampleSize) throws NotStrictlyPositiveException {"}, {"line_number": 187, "modified_line": "        final Object[] out = java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}]},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 181, "new_lines": ["// Inserted line for mutation"]} , {"line_number": 187, "new_lines": ["// Inserted line for mutation"]}], "deletions": [181, 187], "modifications": [{"line_number": 181, "modified_line": "public T sample(String param1, int param2) {"}, {"line_number": 187, "modified_line": "        final Object[] out = java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}]},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 181, "new_lines": ["// Inserted line for mutation"]} , {"line_number": 187, "new_lines": ["// Inserted line for mutation"]}], "deletions": [181, 187], "modifications": [{"line_number": 181, "modified_line": "public T sample(String param1, int param2) {"}, {"line_number": 187, "modified_line": "        final T[] out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}]},
{"file_name": "org/apache/commons/math3/distribution/DiscreteDistribution.java", "target_lines": [["181", "    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {"], ["187", "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"]], "insertions": [{"line_number": 181, "new_lines": ["// Inserted line for mutation"]} , {"line_number": 187, "new_lines": ["// Inserted line for mutation"]}], "deletions": [181, 187], "modifications": [{"line_number": 181, "modified_line": "public Object sample(String param1, int param2) {"}, {"line_number": 187, "modified_line": "        final T[] out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);"}]}
]