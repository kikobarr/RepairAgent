[
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number":70, "new_lines":["if (value1 == null || value2 == null) {","    return false;","}"]}, {"line_number":22, "new_lines":["public boolean isDoubleMetaphoneEqual(final String value1, final String value2, final boolean alternate) {","    if (value1 == null || value2 == null) {","        return false;","    }"]}]}
][
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["public boolean isDoubleMetaphoneEqual(final String value1, final String value2, final boolean alternate) {", "    if(value1 == null || value2 == null) {", "        return false;", "    }"]}]}
][
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 22, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["// Inserted line to fix the bug"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 22, "new_lines": ["if(value1 == null) {", "    return false;", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 22, "new_lines": ["if(value2 == null) {", "    return false;", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 22, "new_lines": ["// Inserted null check for value1 and value2"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null) {", "    return false;", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value2 == null) {", "    return false;", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["// Null check for value1 and value2"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/StringUtils.java", "target_lines": [["70", "//"]], "insertions": [{"line_number": 70, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/StringUtils.java", "target_lines": [["70", "//"]], "insertions": [{"line_number": 70, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if (value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/StringUtils.java", "target_lines": [["70", "//"]], "insertions": [{"line_number": 70, "new_lines": ["// Inserted line to fix the bug"]} ], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if (value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}],"deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/StringUtils.java", "target_lines": [["70", "//"]], "insertions": [{"line_number": 70, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if (value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if (value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if (value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/StringUtils.java", "target_lines": [["70", "//"]], "insertions": [{"line_number": 70, "new_lines": ["// Inserted line to fix the bug"]} ], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/StringUtils.java", "target_lines": [["70", "//"]], "insertions": [{"line_number": 70, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null && value2 == null) {", "    return true;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if (value1 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if (value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if (value1 == null || value2 == null) {", "    return false;", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if (value1 == null && value2 == null) {", "    return true;", "}"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(alternate == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(alternate == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if (value1 == null || value2 == null) {", "    return false;", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []}
][
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": []},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null && value2 == null) {", "    return true;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": []},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 != null && value2 != null) {", "    return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate);", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": []},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null) {", "    value1 = \"\";", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": []},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": []},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1.isEmpty() || value2.isEmpty()) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": []},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1.length() == 0 || value2.length() == 0) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": []},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1.equals(null) || value2.equals(null)) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": []},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 != null && value2 != null) {", "    return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": []},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null && value2 == null) {", "    return true;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": []}
][
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 22, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if (value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 22, "new_lines": ["if (value1 == null || value2 == null) {", "    return false;", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [], "deletions": [22], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 22, "new_lines": ["return false;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [], "deletions": [244], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["return false;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [], "deletions": [22], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 22, "new_lines": ["if (value1 == null || value2 == null) {", "    return false;", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [], "deletions": [244], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["return false;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [], "deletions": [22], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 22, "new_lines": ["return false;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [], "deletions": [244], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [], "deletions": [22], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 22, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [], "deletions": [22], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if (value1 == null || value2 == null) {", "    return false;", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [], "deletions": [244], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["return false;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [], "deletions": [244], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if (value1 == null || value2 == null) {", "    return false;", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [], "deletions": [22], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 22, "new_lines": ["return false;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [], "deletions": [244], "modifications": []}
][
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []}
][
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if (value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}]},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if (value1 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}]},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if (value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}]},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "deletions": [244]},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "modifications": [{"line_number": 244, "modified_line": "        return doubleMetaphone(value1, alternate) != null && doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"}]},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "insertions": [{"line_number": 244, "new_lines": ["if (value1 == null || value2 == null) {", "    return false;", "}"]}]},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "insertions": [{"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}]},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "deletions": [244]},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "modifications": [{"line_number": 244, "modified_line": "        return doubleMetaphone(value1, alternate) != null && doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"}]},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}]},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}]},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "deletions": [244]},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "modifications": [{"line_number": 244, "modified_line": "        return doubleMetaphone(value1, alternate) != null && doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"}]},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "insertions": [{"line_number": 244, "new_lines": ["if (value1 == null || value2 == null) {", "    return false;", "}"]}]},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "insertions": [{"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}]},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "deletions": [244]},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "modifications": [{"line_number": 244, "modified_line": "        return doubleMetaphone(value1, alternate) != null && doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"}]},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}]},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}]},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "deletions": [244]},
    {"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "modifications": [{"line_number": 244, "modified_line": "        return doubleMetaphone(value1, alternate) != null && doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"}]}
][
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if (value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/binary/StringUtils.java", "target_lines": [["70", "//"]], "insertions": [{"line_number": 70, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null || value2 == null) {", "    return false;", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 != null && value2 != null) {", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null) {", "    return false;", "} else if(value2 == null) {", "    return false;", "} else {", "    return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null) {", "    return false;", "} else if(value2 == null) {", "    return false;", "} else {", "    return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 == null) {", "    return false;", "} else if(value2 == null) {", "    return false;", "} else {", "    return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 != null && value2 != null) {", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 != null && value2 != null) {", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]} ], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/codec/language/DoubleMetaphone.java", "target_lines": [["244", "        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));"], ["22", "//"]], "insertions": [{"line_number": 244, "new_lines": ["if(value1 != null) {", "    return false;", "} else if(value2 != null) {", "    return false;", "} else {", "    return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));", "}"]}, {"line_number": 22, "new_lines": ["// Inserted line to fix the bug"]} ], "deletions": [], "modifications": []}
]