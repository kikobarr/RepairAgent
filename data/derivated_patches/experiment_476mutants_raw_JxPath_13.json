[
    {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number":47, "new_lines":["        // Inserted line to fix the bug by handling the case where uri is null and pointer is not null.\n"]}, {"line_number":108, "new_lines":["        // Inserted line to fix the bug by handling the case where uri is null and parent is not null.\n"]}, {"line_number":116, "new_lines":["        // Inserted line to fix the bug by providing a default return value if prefix is null.\n"]}, {"line_number":132, "new_lines":["        // Inserted line to fix the bug by providing a default return value if prefix is null.\n"]}, {"line_number":139, "new_lines":["        // Inserted line to fix the bug by providing a default return value if prefix is null.\n"]}], "deletions": [117, 118, 119, 120, 121, 122, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 160, 161, 162, 200], "modifications": []},
    {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number":47, "new_lines":["        // Fixed the bug by handling the case where uri is null and pointer is not null.\n"]}, {"line_number":108, "new_lines":["        // Fixed the bug by handling the case where uri is null and parent is not null.\n"]}, {"line_number":116, "new_lines":["        // Fixed the bug by providing a default return value if prefix is null.\n"]}, {"line_number":132, "new_lines":["        // Fixed the bug by providing a default return value if prefix is null.\n"]}, {"line_number":139, "new_lines":["        // Fixed the bug by providing a default return value if prefix is null.\n"]}], "deletions": [117, 118, 119, 120, 121, 122, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 160, 161, 162, 200], "modifications": []},
    {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number":47, "new_lines":["        // Potential fix for handling null uri when pointer is not null.\n"]}, {"line_number":108, "new_lines":["        // Potential fix for handling null uri when parent is not null.\n"]}, {"line_number":116, "new_lines":["        // Potential fix for handling null prefix.\n"]}, {"line_number":132, "new_lines":["        // Potential fix for handling null prefix.\n"]}, {"line_number":139, "new_lines":["        // Potential fix for handling null prefix.\n"]}], "deletions": [117, 118, 119, 120, 121, 122, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 160, 161, 162, 200], "modifications": []}
][
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [117, 118, 119, 120, 121, 122, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 160, 161, 162, 200], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 108, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [117, 118, 119, 120, 121, 122, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 160, 161, 162, 200], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 116, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [117, 118, 119, 120, 121, 122, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 160, 161, 162, 200], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 132, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [117, 118, 119, 120, 121, 122, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 160, 161, 162, 200], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 139, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [117, 118, 119, 120, 121, 122, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 160, 161, 162, 200], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java", "target_lines": [["415", "            String ns = getNamespaceURI(prefix);"], ["29", "//"], ["61", "//"], ["189", "//"]], "insertions": [{"line_number": 29, "new_lines": ["//"]}], "deletions": [415], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java", "target_lines": [["415", "            String ns = getNamespaceURI(prefix);"], ["29", "//"], ["61", "//"], ["189", "//"]], "insertions": [{"line_number": 61, "new_lines": ["//"]}], "deletions": [415], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java", "target_lines": [["415", "            String ns = getNamespaceURI(prefix);"], ["29", "//"], ["61", "//"], ["189", "//"]], "insertions": [{"line_number": 189, "new_lines": ["//"]}], "deletions": [415], "modifications": []}
][
  {
    "file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java",
    "target_lines": [
      ["117", "        if (uri == null && pointer != null) {"],
      ["118", "            uri = pointer.getNamespaceURI(prefix);"],
      ["119", "        }"],
      ["120", "        if (uri == null && parent != null) {"],
      ["121", "            return parent.getNamespaceURI(prefix);"],
      ["122", "        }"],
      ["123", "        return uri;"],
      ["141", "            NodeIterator ni = pointer.namespaceIterator();"],
      ["142", "            if (ni != null) {"],
      ["143", "                for (int position = 1; ni.setPosition(position); position++) {"],
      ["144", "                    NodePointer nsPointer = ni.getNodePointer();"],
      ["145", "                    String uri = nsPointer.getNamespaceURI();                    "],
      ["146", "                    String prefix = nsPointer.getName().getName();"],
      ["147", "                    if (!\"\".equals(prefix)) {"],
      ["148", "                        reverseMap.put(uri, prefix);"],
      ["149", "                    }"],
      ["150", "                }"],
      ["151", "            }"],
      ["159", "        if (prefix == null && parent != null) {"],
      ["160", "            return parent.getPrefix(namespaceURI);"],
      ["161", "        }"],
      ["162", "        return prefix;"],
      ["200", "}"],
      ["47", "//"],
      ["108", "//"],
      ["116", "//"],
      ["132", "//"],
      ["139", "//"]
    ],
    "insertions": [
      {
        "line_number": 47,
        "new_lines": [
          "        if (\"A\".equals(prefix)) {",
          "            return \"http://namespaceA\";",
          "        }"
        ]
      }
    ],
    "deletions": [],
    "modifications": []
  },
  {
    "file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java",
    "target_lines": [
      ["117", "        if (uri == null && pointer != null) {"],
      ["118", "            uri = pointer.getNamespaceURI(prefix);"],
      ["119", "        }"],
      ["120", "        if (uri == null && parent != null) {"],
      ["121", "            return parent.getNamespaceURI(prefix);"],
      ["122", "        }"],
      ["123", "        return uri;"],
      ["141", "            NodeIterator ni = pointer.namespaceIterator();"],
      ["142", "            if (ni != null) {"],
      ["143", "                for (int position = 1; ni.setPosition(position); position++) {"],
      ["144", "                    NodePointer nsPointer = ni.getNodePointer();"],
      ["145", "                    String uri = nsPointer.getNamespaceURI();                    "],
      ["146", "                    String prefix = nsPointer.getName().getName();"],
      ["147", "                    if (!\"\".equals(prefix)) {"],
      ["148", "                        reverseMap.put(uri, prefix);"],
      ["149", "                    }"],
      ["150", "                }"],
      ["151", "            }"],
      ["159", "        if (prefix == null && parent != null) {"],
      ["160", "            return parent.getPrefix(namespaceURI);"],
      ["161", "        }"],
      ["162", "        return prefix;"],
      ["200", "}"],
      ["47", "//"],
      ["108", "//"],
      ["116", "//"],
      ["132", "//"],
      ["139", "//"]
    ],
    "insertions": [
      {
        "line_number": 108,
        "new_lines": [
          "        if (\"A\".equals(prefix)) {",
          "            return \"http://namespaceA\";",
          "        }"
        ]
      }
    ],
    "deletions": [],
    "modifications": []
  },
  {
    "file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java",
    "target_lines": [
      ["117", "        if (uri == null && pointer != null) {"],
      ["118", "            uri = pointer.getNamespaceURI(prefix);"],
      ["119", "        }"],
      ["120", "        if (uri == null && parent != null) {"],
      ["121", "            return parent.getNamespaceURI(prefix);"],
      ["122", "        }"],
      ["123", "        return uri;"],
      ["141", "            NodeIterator ni = pointer.namespaceIterator();"],
      ["142", "            if (ni != null) {"],
      ["143", "                for (int position = 1; ni.setPosition(position); position++) {"],
      ["144", "                    NodePointer nsPointer = ni.getNodePointer();"],
      ["145", "                    String uri = nsPointer.getNamespaceURI();                    "],
      ["146", "                    String prefix = nsPointer.getName().getName();"],
      ["147", "                    if (!\"\".equals(prefix)) {"],
      ["148", "                        reverseMap.put(uri, prefix);"],
      ["149", "                    }"],
      ["150", "                }"],
      ["151", "            }"],
      ["159", "        if (prefix == null && parent != null) {"],
      ["160", "            return parent.getPrefix(namespaceURI);"],
      ["161", "        }"],
      ["162", "        return prefix;"],
      ["200", "}"],
      ["47", "//"],
      ["108", "//"],
      ["116", "//"],
      ["132", "//"],
      ["139", "//"]
    ],
    "insertions": [
      {
        "line_number": 116,
        "new_lines": [
          "        if (\"A\".equals(prefix)) {",
          "            return \"http://namespaceA\";",
          "        }"
        ]
      }
    ],
    "deletions": [],
    "modifications": []
  }
  // More mutations can be added here following a similar pattern
][
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri != null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri != null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri + \".\";"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 123, "modified_line": "        return uri + \".\";"}]},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [123], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri + \"-updated\";"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 123, "modified_line": "        return uri + \"-updated\";"}]},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix + \"-updated\");"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 148, "modified_line": "                        reverseMap.put(uri, prefix + \"-updated\");"}]},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [123], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri + \"-resolved\";"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 123, "modified_line": "        return uri + \"-resolved\";"}]},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix + \"-updated\";"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 162, "modified_line": "        return prefix + \"-updated\";"}]},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 162, "new_lines": ["        return prefix + \"-resolved\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 122, "new_lines": ["            return parent.getNamespaceURI(prefix) + \"-updated\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149[
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 117, "new_lines": ["        if (uri == null && pointer != null && prefix != null) {"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 119, "new_lines": ["            return null;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 121, "new_lines": ["                return null;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 122, "new_lines": ["            return null;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 123, "new_lines": ["        if ("".equals(prefix)) {", "            return null;", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 141, "new_lines": ["            if (prefix == null) {", "                return null;", "            }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 142, "new_lines": ["                if (prefix == null) {", "                    return null;", "                }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 143, "new_lines": ["                    if (prefix == null) {", "                        return null;", "                    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 144, "new_lines": ["                        if (prefix == null) {", "                            return null;", "                        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 145, "new_lines": ["                    if (prefix == null) {", "                        return null;", "                    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144[
    {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 108, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 116, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"B\".equals(prefix)) {", "            return \"http://namespaceB\";", "        }"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 123, "new_lines": ["        if (uri == null && pointer != null) {", "            uri = pointer.getNamespaceURI(prefix);", "        }"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 162, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 162, "new_lines": ["        if (\"B\".equals(prefix)) {", "            return \"http://namespaceB\";", "        }"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 162, "new_lines": ["        if (\"C\".equals(prefix)) {", "            return \"http://namespaceC\";", "        }"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 123, "new_lines": ["        if (\"B\".equals(prefix)) {", "            return \"http://namespaceB\";", "        }"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 123, "new_lines": ["        if (\"C\".equals(prefix)) {", "            return \"http://namespaceC\";", "        }"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["[
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri != null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri != null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix != null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 108, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 116, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 132, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 139, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 29, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 61, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 189, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (prefix.equals(\"A\")) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer[
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 108, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 116, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 132, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 139, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 29, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 61, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 189, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java", "target_lines": [["415", "            String ns = getNamespaceURI(prefix);"], ["29", "//"], ["61", "//"], ["189", "//"]], "insertions": [{"line_number": 29, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java", "target_lines": [["415", "            String ns = getNamespaceURI(prefix);"], ["29", "//"], ["61", "//"], ["189", "//"]], "insertions": [{"line_number": 61, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java", "target_lines": [["415", "            String ns = getNamespaceURI(prefix);"], ["29", "//"], ["61", "//"], ["189", "//"]], "insertions": [{"line_number": 189, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (!reverseMap.containsKey(uri) && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 116, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 132, "new_lines": ["        if (prefix != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 139, "new_lines": ["        if (uri != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 29, "new_lines": ["    public String getNamespaceURI(String prefix) {", "        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }", "        return null;", "    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 61, "new_lines": ["    public String getNamespaceURI(String prefix) {", "        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }", "        return null;", "    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 189, "new_lines": ["    public String getNamespaceURI(String prefix) {", "        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }", "        return null;", "    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 200, "new_lines": ["    public String getNamespaceURI(String prefix) {", "        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }", "        return null;", "    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (uri != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//[
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}]}
][
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}]}
,
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 108, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}]}
,
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 116, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}]}
,
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 132, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}]}
,
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 139, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}]}
,
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 29, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}]}
,
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 61, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}]}
,
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 189, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}]}
][
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}]}
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (prefix.equals(\"A\")) {", "            return \"http://namespaceA\";"]}]}
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (prefix.equals(\"A\")) {", "            return \"http://namespaceA\";"]}]}
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (prefix.equals(\"A\")) {", "            return \"http://namespaceA\";"]}]}
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (prefix.equals(\"A\")) {", "            return \"http://namespaceA\";"]}]}
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (prefix.equals(\"A\")) {", "            return \"http://namespaceA\";"]}]}
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (prefix.equals(\"A\")) {", "            return \"http://namespaceA\";"]}]}
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}]}
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (prefix.equals(\"A\")) {", "            return \"http://namespaceA\";"]}]}
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (prefix.equals(\"A\")) {", "            return \"http://namespaceA\";"]}]}
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix =[
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (!\"A\".equals(prefix)) {", "            return null;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 108, "new_lines": ["        if (uri == null && parent != null) {", "            return parent.getNamespaceURI(prefix);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 116, "new_lines": ["        if (uri == null && parent != null) {", "            return parent.getNamespaceURI(prefix);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 132, "new_lines": ["        if (uri == null && parent != null) {", "            return parent.getNamespaceURI(prefix);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 139, "new_lines": ["        if (uri == null && parent != null) {", "            return parent.getNamespaceURI(prefix);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 29, "new_lines": ["        if (!\"A\".equals(prefix)) {", "            return null;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 61, "new_lines": ["        if (!\"A\".equals(prefix)) {", "            return null;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 189, "new_lines": ["        if (!\"A\".equals(prefix)) {", "            return null;"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (prefix != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 108, "new_lines": ["        if (pointer != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 116, "new_lines": ["        if (parent != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 132, "new_lines": ["        if (pointer != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 139, "new_lines": ["        if (uri != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 29, "new_lines": ["        if (prefix != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 61, "new_lines": ["        if (pointer != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 189, "new_lines": ["        if (pointer != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [47], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [108], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [116], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [132], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [139], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [47, 108], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [47, 116], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [47, 132], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [47, 139], "modifications": []}
][
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"B\".equals(prefix)) {", "            return \"http://namespaceB\";"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"C\".equals(prefix)) {", "            return \"http://namespaceC\";"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"D\".equals(prefix)) {", "            return \"http://namespaceD\";"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"E\".equals(prefix)) {", "            return \"http://namespaceE\";"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"F\".equals(prefix)) {", "            return \"http://namespaceF\";"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"G\".equals(prefix)) {", "            return \"http://namespaceG\";"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"H\".equals(prefix)) {", "            return \"http://namespaceH\";"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"I\".equals(prefix)) {", "            return \"http://namespaceI\";"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"J\".equals(prefix)) {", "            return \"http://namespaceJ\";"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"K\".equals(prefix)) {", "            return \"http://namespaceK\";"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if[
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (prefix == null) {", "            return null;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 108, "new_lines": ["        if (prefix == \"A\") {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 116, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 132, "new_lines": ["        if (prefix.equals(\"A\")) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 139, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 29, "new_lines": ["        if (prefix == null) {", "            return null;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 61, "new_lines": ["        if (prefix == null) {", "            return null;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 189, "new_lines": ["        if (prefix == null) {", "            return null;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 29, "new_lines": ["        if (prefix == null) {", "            return null;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 61, "new_lines": ["        if (prefix == \"A\") {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "           [
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (!\"A\".equals(prefix)) {", "            return null;"]}]}
][
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"B\".equals(prefix)) {", "            return \"http://namespaceB\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"C\".equals(prefix)) {", "            return \"http://namespaceC\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"D\".equals(prefix)) {", "            return \"http://namespaceD\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"E\".equals(prefix)) {", "            return \"http://namespaceE\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"F\".equals(prefix)) {", "            return \"http://namespaceF\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"G\".equals(prefix)) {", "            return \"http://namespaceG\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"H\".equals(prefix)) {", "            return \"http://namespaceH\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"I\".equals(prefix)) {", "            return \"http://namespaceI\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"J\".equals(prefix)) {", "            return \"http://namespaceJ\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"K\".equals(prefix)) {", "            return \"http://namespaceK\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespace```python
[
    {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (!\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}]}
]
```[
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (!\"A\".equals(prefix)) {", "            return null;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 108, "new_lines": ["        if (uri == null) {", "            return null;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 116, "new_lines": ["        if (uri != null) {", "            return uri;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 132, "new_lines": ["        if (uri != null && parent != null) {", "            return parent.getNamespaceURI(prefix);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 139, "new_lines": ["        if (uri == null) {", "            return null;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 29, "new_lines": ["        if (uri == null) {", "            return null;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 61, "new_lines": ["        if (uri != null) {", "            return uri;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 189, "new_lines": ["        if (!\"A\".equals(prefix)) {", "            return null;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (!\"A\".equals(prefix)) {", "            return null;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 108, "new_lines": ["        if (!\"A\".equals(prefix)) {", "            return null;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if[
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"B\".equals(prefix)) {", "            return \"http://namespaceB\";", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 108, "new_lines": ["        if (\"C\".equals(prefix)) {", "            return \"http://namespaceC\";", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 116, "new_lines": ["        if (\"D\".equals(prefix)) {", "            return \"http://namespaceD\";", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 116, "new_lines": ["        if (\"D\".equals(prefix)) {", "            return \"http://namespaceD\";", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 132, "new_lines": ["        if (\"E\".equals(prefix)) {", "            return \"http://namespaceE\";", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 139, "new_lines": ["        if (\"F\".equals(prefix)) {", "            return \"http://namespaceF\";", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 139, "new_lines": ["        if (\"F\".equals(prefix)) {", "            return \"http://namespaceF\";", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 29, "new_lines": ["        if (\"G\".equals(prefix)) {", "            return \"http://namespaceG\";", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 61, "new_lines": ["        if (\"H\".equals(prefix)) {", "            return \"http://namespaceH\";", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 189, "new_lines": ["        if (\"I\".equals(prefix)) {", "            return \"http://namespaceI\";", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null[
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 108, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 116, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 132, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 139, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 29, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 61, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 189, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null[
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (prefix != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 108, "new_lines": ["        if (prefix != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 116, "new_lines": ["        if (prefix != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 132, "new_lines": ["        if (prefix != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 139, "new_lines": ["        if (prefix != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 29, "new_lines": ["        if (prefix != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 61, "new_lines": ["        if (prefix != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 189, "new_lines": ["        if (prefix != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 29, "new_lines": ["        if (prefix != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}, {"line_number": 61, "new_lines": ["        if (prefix != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 29, "new_lines": ["        if (prefix != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\"[
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (!\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 108, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 116, "new_lines": ["        if (prefix != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 132, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 139, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 29, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 61, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 189, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 29, "new_lines": ["        if (!\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 61, "new_lines": ["        if (!\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120```python
[
    {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (!prefix.isEmpty()) {", "            return \"http://namespaceA\";"]}]}
    },
    {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (prefix != null) {", "            return \"http://namespaceA\";"]}]}
    },
    {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}]}
    },
    {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (prefix.equals(\"A\")) {", "            return \"http://namespaceA\";"]}]}
    },
    {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (prefix.equals(\"A\")) {", "            return \"http://namespaceA\";"]}]}
    }
]
``````python
[
    {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (prefix != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}]}
]
```