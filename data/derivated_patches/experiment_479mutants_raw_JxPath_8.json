[
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines":["if (Double.isNaN(ld) || Double.isNaN(rd)) {", "    return false;"]}, {"line_number": 77, "new_lines":[""]}]}
]
[
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines":["if (Double.isNaN(ld) || Double.isNaN(rd)) {", "    return false;"]}, {"line_number": 77, "new_lines":[""]}]}
]
[
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines":["if (Double.isNaN(ld) || Double.isNaN(rd)) {", "    return false;"]}, {"line_number": 77, "new_lines":[""]}]}
]
[
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines":["if (Double.isNaN(ld) || Double.isNaN(rd)) {", "    return false;"]}, {"line_number": 77, "new_lines":[""]}]}
]
[
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines":["if (Double.isNaN(ld) || Double.isNaN(rd)) {", "    return false;"]}, {"line_number": 77, "new_lines":[""]}]}
][
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["if (Double.isNaN(ld) || Double.isNaN(rd)) return false;"]}, {"line_number": 77, "new_lines": []}], "deletions": [], "modifications": []}
],
[
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["if (ld == Double.NaN || rd == Double.NaN) return false;"]}, {"line_number": 77, "new_lines": []}], "deletions": [], "modifications": []}
],
[
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["if (Double.compare(ld, rd) == 0) return false;"]}, {"line_number": 77, "new_lines": []}], "deletions": [], "modifications": []}
],
[
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["if (Double.isInfinite(ld) || Double.isInfinite(rd)) return false;"]}, {"line_number": 77, "new_lines": []}], "deletions": [], "modifications": []}
],
[
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["if (Double.isFinite(ld) || Double.isFinite(rd)) return false;"]}, {"line_number": 77, "new_lines": []}], "deletions": [], "modifications": []}
],
[
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["if (Double.isNaN(ld) && Double.isNaN(rd)) return false;"]}, {"line_number": 77, "new_lines": []}], "deletions": [], "modifications": []}
],
[
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["if (Double.isNaN(ld) && Double.isNaN(rd)) return true;"]}, {"line_number": 77, "new_lines": []}], "deletions": [], "modifications": []}
],
[
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["if (Double.isNaN(ld) || Double.isNaN(rd)) return true;"]}, {"line_number": 77, "new_lines": []}], "deletions": [], "modifications": []}
],
[
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["if (Double.isNaN(ld) || Double.isNaN(rd)) return ld == rd;"]}, {"line_number": 77, "new_lines": []}], "deletions": [], "modifications": []}
],
[
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["if (Double.isNaN(ld) || Double.isNaN(rd)) return ld != rd;"]}, {"line_number": 77, "new_lines": []}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left);"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left);"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Adding comment here for clarity"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Convert left value to double"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Convert right value to double"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Calculate double value for left operand"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Calculate double value for right operand"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Parse left operand to double"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Parse right operand to double"]}], "deletions": [], "modifications": []}
][
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) ? -1 : Double.isNaN(rd) ? -1 : ld == rd ? 0 : ld < rd ? -1 : 1;"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) ? -1 : Double.isNaN(rd) ? -1 : ld == rd ? 0 : ld < rd ? -1 : 1;"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : Double.compare(ld, rd);"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : Double.compare(ld, rd);"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : Double.compare(ld, rd);"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : Double.compare(ld, rd);"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : Double.compare(ld, rd);"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : Double.compare(ld, rd);"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : Double.compare(ld, rd);"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : Double.compare(ld, rd);"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : Double.compare(ld, rd);"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : Double.compare(ld, rd);"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : Double.compare(ld, rd);"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : Double.compare(ld, rd);"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) ? -1 : Double.isNaN(rd) ? -1 : Double.compare(ld, rd);"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) ? -1 : Double.isNaN(rd) ? -1 : Double.compare(ld, rd);"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) ? -1 : Double.isNaN(rd) ? -1 : Double.compare(ld, rd);"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) ? -1 : Double.isNaN(rd) ? -1 : Double.compare(ld, rd);"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) ? -1 : Double.isNaN(rd) ? -1 : ld == rd ? 0 : ld < rd ? -1 : 1;"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) ? -1 : Double.isNaN(rd) ? -1 : ld == rd ? 0 : ld < rd ? -1 : 1;"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) ? -1 : Double.isNaN(rd) ? -1 : (ld == rd ? 0 : ld < rd ? -1 : 1);"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) ? -1 : Double.isNaN(rd) ? -1 : (ld == rd ? 0 : ld < rd ? -1 : 1);"]}], "deletions": [], "modifications": []}
]

[
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : ld == rd ? 0 : ld < rd ? -1 : 1;"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : ld == rd ? 0 : ld < rd ? -1 : 1;"]}], "deletions": [], "modifications": []}
]

[
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) ? -1 : ld == rd ? 0 : ld < rd ? -1 : 1;"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) ? -1 : ld == rd ? 0 : ld < rd ? -1 : 1;"]}], "deletions": [], "modifications": []}
]

[
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) ? -1 : ld == rd ? 0 : (ld < rd ? -1 : 1);"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) ? -1 : ld == rd ? 0 : (ld < rd ? -1 : 1);"]}], "deletions": [], "modifications": []}
]

[
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) ? -1 : ld == rd ? 0 : ld < rd ? -1 : 1;"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) ? -1 : ld == rd ? 0 : ld < rd ? -1 : 1;"]}], "deletions": [], "modifications": []}
]

[
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : (ld == rd ? 0 : ld < rd ? -1 : 1);"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : (ld == rd ? 0 : ld < rd ? -1 : 1);"]}], "deletions": [], "modifications": []}
]

[
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) ? -1 : (ld == rd ? 0 : ld < rd ? -1 : 1);"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) ? -1 : (ld == rd ? 0 : ld < rd ? -1 : 1);"]}], "deletions": [], "modifications": []}
]

[
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : ld == rd ? 0 : ld < rd ? -1 : 1;"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : ld == rd ? 0 : ld < rd ? -1 : 1;"]}], "deletions": [], "modifications": []}
]

[
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) ? -1 : ld == rd ? 0 : ld < rd ? -1 : 1;"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) ? -1 : ld == rd ? 0 : ld < rd ? -1 : 1;"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left);"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Compute left double value"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Compute right double value"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Extract double value from left object"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Extract double value from right object"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Convert left object to double"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Convert right object to double"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Parse left object as double"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Parse right object as double"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left);"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right);"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = 0.0;"]}, {"line_number": 77, "new_lines": ["double rd = 0.0;"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = Double.NaN;"]}, {"line_number": 77, "new_lines": ["double rd = Double.NaN;"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = left != null ? InfoSetUtil.doubleValue(left) : 0.0;"]}, {"line_number": 77, "new_lines": ["double rd = right != null ? InfoSetUtil.doubleValue(right) : 0.0;"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = left != null ? InfoSetUtil.doubleValue(left) : Double.NaN;"]}, {"line_number": 77, "new_lines": ["double rd = right != null ? InfoSetUtil.doubleValue(right) : Double.NaN;"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = left instanceof Number ? ((Number)left).doubleValue() : 0.0;"]}, {"line_number": 77, "new_lines": ["double rd = right instanceof Number ? ((Number)right).doubleValue() : 0.0;"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = left instanceof Number ? ((Number)left).doubleValue() : Double.NaN;"]}, {"line_number": 77, "new_lines": ["double rd = right instanceof Number ? ((Number)right).doubleValue() : Double.NaN;"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = left != null ? Double.parseDouble(left.toString()) : 0.0;"]}, {"line_number": 77, "new_lines": ["double rd = right != null ? Double.parseDouble(right.toString()) : 0.0;"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = left != null ? Double.parseDouble(left.toString()) : Double.NaN;"]}, {"line_number": 77, "new_lines": ["double rd = right != null ? Double.parseDouble(right.toString()) : Double.NaN;"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = left != null ? ((Number)left).doubleValue() : 0.0;"]}, {"line_number": 77, "new_lines": ["double rd = right != null ? ((Number)right).doubleValue() : 0.0;"]}], "deletions": [], "modifications": []}]}[
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left);"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right);"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Adding missing calculation for ld"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Adding missing calculation for rd"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Initialize ld with left value"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Initialize rd with right value"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Compute double value of left"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Compute double value of right"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Extract double value from left"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Extract double value from right"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Convert left to double"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Convert right to double"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Parse left to double"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Parse right to double"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Set ld as double value of left"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Set rd as double value of right"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Initialize ld"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Initialize rd"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Compute ld"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Compute rd"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Evaluate ld"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Evaluate rd"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Set ld"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Set rd"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // ld calculation"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // rd calculation"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // ld initialization"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // rd initialization"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // ld assignment"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // rd assignment"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // ld value"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // rd value"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // ld value calculation"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // rd value calculation"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Compute ld value"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Compute rd value"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Initialize ld with double value of left"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Initialize rd with double value of right"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Set ld to double value of left"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Set rd to double value of right"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Compute ld based on left"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Compute rd based on right"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Calculate ld from left"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Calculate rd from right"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Assign ld as double value of left"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Assign rd as double value of right"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Set ld to left value as double"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Set rd to right value as double"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Initialize ld with left as double"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Initialize rd with right as double"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Set ld as left's double value"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Set rd as right's double value"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Compute ld value from left"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Compute rd value from right"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Determine ld from left"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Determine rd from right"]}]},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Set ld based on left"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Set rd based on right"]}]},
][
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) ? -1 : Double.isNaN(rd) ? -1 : ld == rd ? 0 : ld < rd ? -1 : 1;"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) ? -1 : Double.isNaN(rd) ? -1 : ld == rd ? 0 : ld < rd ? -1 : 1;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) ? -1 : Double.isNaN(rd) ? -1 : ld == rd ? 0 : (ld < rd ? -1 : 1);"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) ? -1 : Double.isNaN(rd) ? -1 : ld == rd ? 0 : (ld < rd ? -1 : 1);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) ? -1 : Double.isNaN(rd) ? -1 : (ld == rd ? 0 : ld < rd ? -1 : 1);"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) ? -1 : Double.isNaN(rd) ? -1 : (ld == rd ? 0 : ld < rd ? -1 : 1);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : (ld == rd ? 0 : ld < rd ? -1 : 1);"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : (ld == rd ? 0 : ld < rd ? -1 : 1);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : ld == rd ? 0 : (ld < rd ? -1 : 1);"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : ld == rd ? 0 : (ld < rd ? -1 : 1);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : (ld == rd ? 0 : ld < rd ? -1 : 1);"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : (ld == rd ? 0 : ld < rd ? -1 : 1);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : ld == rd ? 0 : (ld < rd ? -1 : 1);"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : ld == rd ? 0 : (ld < rd ? -1 : 1);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : (ld == rd ? 0 : ld < rd ? -1 : 1);"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : (ld == rd ? 0 : ld < rd ? -1 : 1);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : ld == rd ? 0 : (ld < rd ? -1 : 1);"]}, {"line_number": 77, "new_lines": ["return Double.isNaN(ld) || Double.isNaN(rd) ? -1 : ld == rd ? 0 : (ld < rd ? -1 : 1);"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left);"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right);"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Mutation: Extracted ld value from left"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Mutation: Extracted rd value from right"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Mutation: Changed ld calculation"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Mutation: Changed rd calculation"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Mutation: Added debug log for ld value"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Mutation: Added debug log for rd value"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Mutation: Changed ld calculation logic"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Mutation: Changed rd calculation logic"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Mutation: Moved ld calculation logic to a separate method"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Mutation: Moved rd calculation logic to a separate method"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Mutation: Changed ld calculation to use Math.abs()"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Mutation: Changed rd calculation to use Math.abs()"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Mutation: Changed ld calculation to use Math.floor()"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Mutation: Changed rd calculation to use Math.floor()"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Mutation: Changed ld calculation to use Math.ceil()"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Mutation: Changed rd calculation to use Math.ceil()"]}], "deletions": [], "modifications": []},

{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left); // Mutation: Changed ld calculation to use casting to int"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right); // Mutation: Changed rd calculation to use casting to int"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = InfoSetUtil.doubleValue(left);"]}, {"line_number": 77, "new_lines": ["double rd = InfoSetUtil.doubleValue(right);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = Double.parseDouble(left.toString());"]}, {"line_number": 77, "new_lines": ["double rd = Double.parseDouble(right.toString());"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = (left instanceof Number) ? ((Number) left).doubleValue() : Double.NaN;"]}, {"line_number": 77, "new_lines": ["double rd = (right instanceof Number) ? ((Number) right).doubleValue() : Double.NaN;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = (left == null) ? 0.0 : InfoSetUtil.doubleValue(left);"]}, {"line_number": 77, "new_lines": ["double rd = (right == null) ? 0.0 : InfoSetUtil.doubleValue(right);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = Double.isNaN(left) ? 0.0 : InfoSetUtil.doubleValue(left);"]}, {"line_number": 77, "new_lines": ["double rd = Double.isNaN(right) ? 0.0 : InfoSetUtil.doubleValue(right);"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = (left == null) ? 0.0 : left.doubleValue();"]}, {"line_number": 77, "new_lines": ["double rd = (right == null) ? 0.0 : right.doubleValue();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = (left == null) ? 0.0 : Double.valueOf(left.toString());"]}, {"line_number": 77, "new_lines": ["double rd = (right == null) ? 0.0 : Double.valueOf(right.toString());"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = (left == null) ? 0.0 : Double.parseDouble(left.toString());"]}, {"line_number": 77, "new_lines": ["double rd = (right == null) ? 0.0 : Double.parseDouble(right.toString());"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = (left == null) ? 0.0 : ((Number) left).doubleValue();"]}, {"line_number": 77, "new_lines": ["double rd = (right == null) ? 0.0 : ((Number) right).doubleValue();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java", "target_lines": [["76", "//"], ["77", "//"]], "insertions": [{"line_number": 76, "new_lines": ["double ld = (left == null) ? 0.0 : Float.valueOf(left.toString()).doubleValue();"]}, {"line_number": 77, "new_lines": ["double rd = (right == null) ? 0.0 : Float.valueOf(right.toString()).doubleValue();"]}], "deletions": [], "modifications": []}
]