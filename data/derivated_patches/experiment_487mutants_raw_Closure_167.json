[
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted new line here to fix the bug"]}]}
][
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": [
{"line_number": 301, "modified_line": "          left, leftIsRefineable, merged.typeA;"},
{"line_number": 302, "modified_line": "          right, rightIsRefineable, merged.typeB);"},
{"line_number": 348, "modified_line": "          left, leftIsRefineable, restrictedLeftType;"},
{"line_number": 349, "modified_line": "          right, rightIsRefineable, restrictedRightType);"},
{"line_number": 394, "modified_line": "    if (restrictedType != null && !restrictedType.equals(originalType)) {"},
{"line_number": 407, "modified_line": "      Node left, boolean leftIsRefineable, JSType restrictedLeftType;"},
{"line_number": 408, "modified_line": "      Node right, boolean rightIsRefineable, JSType restrictedRightType);"},
{"line_number": 410, "modified_line": "        leftIsRefineable && restrictedLeftType != null;"},
{"line_number": 412, "modified_line": "        rightIsRefineable && restrictedRightType != null;"},
{"line_number": 430, "modified_line": "      JSType restrictedType =;"},
{"line_number": 431, "modified_line": "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"},
{"line_number": 432, "modified_line": "      FlowScope informed = blindScope.createChildFlowScope();"},
{"line_number": 433, "modified_line": "      declareNameInScope(informed, name, restrictedType);"},
{"line_number": 434, "modified_line": "      return informed;"}]},
{"file_name": "com/google/javascript/rhino/jstype/JSType.java", "target_lines": [["883", "//"]], "insertions": [], "deletions": [883], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted new line at 883"]} ], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Added a new line at 883 for fixing the bug"]} ], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// New line added at 883 as part of bug resolution"]} ], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted new line at 883 to correct the bug"]} ], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Added new line at 883 to fix the bug"]} ], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted new line at 883 to fix the bug"]} ], "deletions": [], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Mutant 1: Fault of omission fixed"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Mutant 2: Fault of omission fixed"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Mutant 3: Fault of omission fixed"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Mutant 4: Fault of omission fixed"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Mutant 5: Fault of omission fixed"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Mutant 6: Fault of omission fixed"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Mutant 7: Fault of omission fixed"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Mutant 8: Fault of omission fixed"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Mutant 9: Fault of omission fixed"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Mutant 10: Fault of omission fixed"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Mutant 11: Fault of omission fixed"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Mutant 12: Fault of omission fixed"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Mutant 13: Fault of omission fixed"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301",[
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 301, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 302, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 348, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 349, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 394, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 407, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 408, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 410, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 412, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 430, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 431, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 432, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 433, "new_lines": ["// Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefine[{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": []}][
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"], ["883", "//"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Added line for fixing the bug in JSType.java"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Fix added for JSType.java"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Bug fix in JSType.java"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Fix for JSType.java"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in SemanticReverseAbstractInterpreter.java"]} ], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Additional line added for bug fixing"]} ], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Fix added by the assistant"]} ], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Mutation suggested by the assistant"]} ], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Potential fix suggested"]} ], "deletions": [], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType == null || !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable || restrictedLeftType != null;"], ["412", "        rightIsRefineable || restrictedRightType != null;"], ["430", "      JSType restrictedType = null;"], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType == null;"], ["412", "        rightIsRefineable && restrictedRightType == null;"], ["430", "      JSType restrictedType = type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["431", "          null;"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType == null;"], ["412", "        rightIsRefineable && restrictedRightType == null;"], ["430", "      JSType restrictedType = null;"], ["431", "          null;"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable || restrictedLeftType != null;"], ["412", "        rightIsRefineable || restrictedRightType != null;"], ["430", "      JSType restrictedType = type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["431", "          null;"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType == null || !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable || restrictedLeftType != null;"], ["412", "        rightIsRefineable || restrictedRightType != null;"], ["430", "      JSType restrictedType = null;"], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType == null || restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable || restrictedLeftType == null;"], ["412", "        rightIsRefineable || restrictedRightType == null;"], ["430", "      JSType restrictedType = type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["431", "          null;"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType == null || restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable || restrictedLeftType == null;"], ["412", "        rightIsRefineable || restrictedRightType == null;"], ["430", "      JSType restrictedType = null;"], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType == null;"], ["412", "        rightIsRefineable && restrictedRightType == null;"], ["430", "      JSType restrictedType = type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["431", "          null;"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType == null || restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable || restrictedLeftType == null;"], ["412", "        rightIsRefineable || restrictedRightType == null;"], ["430", "      JSType restrictedType = null;"], ["431", "          null;"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType == null || !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable || restrictedLeftType != null;"], ["412", "        rightIsRefineable || restrictedRightType != null;"], ["430", "      JSType restrictedType = null;"], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType == null || !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable || restrictedLeftType != null;"], ["412", "        rightIsRefineable || restrictedRightType != null;"], ["430", "      JSType restrictedType = null;"], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType = null;"], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType == null || restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable || restrictedLeftType == null;"], ["412", "        rightIsRefineable || restrictedRightType == null;"], ["430", "      JSType restrictedType = type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["431", "          null;"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType == null || restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable || restrictedLeftType == null;"], ["412", "        rightIsRefineable || restrictedRightType == null;"], ["430", "      JSType restrictedType = null;"], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRef[
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"]], "insertions": [{"line_number": 301, "new_lines": ["// Mutation 1: Changing 'left' to 'right'"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["302", "          right, rightIsRefineable, merged.typeB);"]], "insertions": [{"line_number": 302, "new_lines": ["// Mutation 2: Changing 'right' to 'left'"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["348", "          left, leftIsRefineable, restrictedLeftType,"]], "insertions": [{"line_number": 348, "new_lines": ["// Mutation 3: Changing 'left' to 'right'"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["349", "          right, rightIsRefineable, restrictedRightType);"]], "insertions": [{"line_number": 349, "new_lines": ["// Mutation 4: Changing 'right' to 'left'"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"]], "insertions": [{"line_number": 394, "new_lines": ["// Mutation 5: Changing the condition to 'restrictedType == null || restrictedType.equals(originalType)'"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"]], "insertions": [{"line_number": 407, "new_lines": ["// Mutation 6: Adding a new argument 'int count' after 'JSType restrictedLeftType'"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"]], "insertions": [{"line_number": 408, "new_lines": ["// Mutation 7: Adding a new argument 'boolean isFinal' after 'JSType restrictedRightType'"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["410", "        leftIsRefineable && restrictedLeftType != null;"]], "insertions": [{"line_number": 410, "new_lines": ["// Mutation 8: Changing '&&' to '||'"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["412", "        rightIsRefineable && restrictedRightType != null;"]], "insertions": [{"line_number": 412, "new_lines": ["// Mutation 9: Changing '&&' to '||'"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["430", "      JSType restrictedType ="]], "insertions": [{"line_number": 430, "new_lines": ["// Mutation 10: Initializing 'restrictedType' with a different method call or value"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"]], "insertions": [{"line_number": 431, "new_lines": ["// Mutation 11: Changing 'getRestrictedTypeGivenToBooleanOutcome' method call to a different method call"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["432", "      FlowScope informed = blindScope.createChildFlowScope();"]], "insertions": [{"line_number": 432, "new_lines": ["// Mutation 12: Adding a log message after creating 'informed' FlowScope"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["433", "      declareNameInScope(informed, name, restrictedType);"]], "insertions": [{"line_number": 433, "new_lines": ["// Mutation 13: Changing 'declareNameInScope' to a different method call or adding additional arguments"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["434", "      return informed;"]], "insertions": [{"line_number": 434, "new_lines": ["// Mutation 14: Adding a null check before returning 'informed' FlowScope"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/rhino/jstype/JSType.java", "target_lines": [["883", "//"]], "insertions": [{"line_number": 883, "new_lines": ["// Mutation 15: Adding a new method 'calculateNewType' to JSType class"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [301, 302, 348, 349, 394, 407, 408, 410, 412, 430, 431, 432, 433, 434], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 322, "modified_line": "JSType restrictedLeftType = (leftType == null) ? null : leftType.getRestrictedTypeGivenToBooleanOutcome(!condition);"}, {"line_number": 342, "modified_line": "JSType restrictedRightType = (rightType == null) ? null : rightType.getRestrictedTypeGivenToBooleanOutcome(!condition);"}]},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 322, "modified_line": "JSType restrictedLeftType = (leftType == null) ? null : leftType.getRestrictedTypeGivenToBooleanOutcome(!condition);"}, {"line_number": 342, "modified_line": "JSType restrictedRightType = (rightType == null) ? null : rightType.getRestrictedTypeGivenToBooleanOutcome(!condition);"}]},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 342, "modified_line": "JSType restrictedRightType = (rightType == null) ? null : rightType.getRestrictedTypeGivenToBooleanOutcome(!condition);"}]},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": [{"line_number": 322, "modified_line": "JSType restrictedLeftType = (leftType == null) ? null : leftType.getRestrictedTypeGivenToBooleanOutcome(!condition);"}]},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 342, "modified_line": "JSType restrictedRightType = (rightType == null) ? null : rightType.getRestrictedTypeGivenToBooleanOutcome(!condition);"}]},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": [{"line_number": 322, "modified_line": "JSType restrictedLeftType = (leftType == null) ? null : leftType.getRestrictedTypeGivenToBooleanOutcome(!condition);"}, {"line_number": 342, "modified_line": "JSType restrictedRightType = (rightType == null) ? null : rightType.getRestrictedTypeGivenToBooleanOutcome(!condition);"}]},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 342, "modified_line": "JSType restrictedRightType = (rightType == null) ? null : rightType.getRestrictedTypeGivenToBooleanOutcome(!condition);"}]},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": [{"line_number": 322, "modified_line": "JSType restrictedLeftType = (leftType == null) ? null : leftType.getRestrictedTypeGivenToBooleanOutcome(!condition);"}]},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 342, "modified_line": "JSType restrictedRightType = (rightType == null) ? null : rightType.getRestrictedTypeGivenToBooleanOutcome(!condition);"}]},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": [{"line_number": 322, "modified_line": "JSType restrictedLeftType = (leftType == null) ? null : leftType.getRestrictedTypeGivenToBooleanOutcome(!condition);"}]},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 342, "modified_line": "JSType restrictedRightType = (rightType == null) ? null : rightType.getRestrictedTypeGivenToBooleanOutcome(!condition);"}]},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line[{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": []}][
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": []},
{"file_name": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", "target_lines": [["301", "          left, leftIsRefineable, merged.typeA,"], ["302", "          right, rightIsRefineable, merged.typeB);"], ["348", "          left, leftIsRefineable, restrictedLeftType,"], ["349", "          right, rightIsRefineable, restrictedRightType);"], ["394", "    if (restrictedType != null && !restrictedType.equals(originalType)) {"], ["407", "      Node left, boolean leftIsRefineable, JSType restrictedLeftType,"], ["408", "      Node right, boolean rightIsRefineable, JSType restrictedRightType) {"], ["410", "        leftIsRefineable && restrictedLeftType != null;"], ["412", "        rightIsRefineable && restrictedRightType != null;"], ["430", "      JSType restrictedType ="], ["431", "          type.getRestrictedTypeGivenToBooleanOutcome(outcome);"], ["432", "      FlowScope informed = blindScope.createChildFlowScope();"], ["433", "      declareNameInScope(informed, name, restrictedType);"], ["434", "      return informed;"]], "insertions": [{"line_number": 883, "new_lines": ["// Inserted line to fix the bug in JSType.java"]}], "deletions": [], "modifications": []}
]