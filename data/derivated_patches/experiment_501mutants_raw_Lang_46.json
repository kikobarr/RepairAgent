[
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    public static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str.contains(\"\\\"\")){", "            str = str.replace(\"\\\"\", \"\\\\\\\"\");", "        }"]}, {"line_number": 245, "new_lines": ["        return str;"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str.contains(\"\\\\\"\")){", "            str = str.replace(\"\\\\\"\", \"\\\\\\\\\\\"\");", "        }"]}, {"line_number": 245, "new_lines": ["        return str;"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str.contains(\"'\")){", "            str = str.replace(\"'\", \"\\\\'\");", "        }"]}, {"line_number": 245, "new_lines": ["        return str;"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str.contains(\"\\\\'\")){", "            str = str.replace(\"\\\\'\", \"\\\\\\\\'\");", "        }"]}, {"line_number": 245, "new_lines": ["        return str;"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str.contains(\"\\\\\"\")){", "            str = str.replace(\"\\\\\"\", \"\\\\\\\\\\\"\");", "        }"]}, {"line_number": 245, "new_lines": ["        return str;"]}], "deletions": [], "modifications": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str.contains(\"'\")){", "            str = str.replace(\"'\", \"\\\\'\");", "        }"]}, {"line_number": 245, "new_lines": ["        return str;"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}, {"line_number": 245, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}, {"line_number": 245, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}, {"line_number": 245, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}, {"line_number": 245, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}, {"line_number": 245, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}, {"line_number": 245, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}, {"line_number": 245, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}, {"line_number": 245, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}, {"line_number": 245, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}, {"line_number": 245, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}, {"line_number": 245, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}, {"line_number": 245, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}, {"line_number": 245, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}, {"line_number": 245, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}, {"line_number": 245, "new_lines": ["        // Fixing the bug by changing the boolean parameter value in the method calls"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"],[
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, !escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, !escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, !escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}
][
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}
][
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuffer result = new StringBuffer();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        String result = \"\";", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result += '\\\\\\\\'; // escape backslash", "            } else {", "                result += c;", "            }", "        }", "        return result;"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuffer result = new StringBuffer();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append(\"\\\\\\\\\"); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append(\"\\\\\\\\\"); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuffer result = new StringBuffer();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append(\"\\\\\\\\\"); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuffer result = new StringBuffer();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append(\"\\\\\\\\\"); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append(\"\\\\\\\\\"); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}
][
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\');[
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}
][
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\');[
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\'') {", "                result.append('\\\\'); // escape single quote", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["// New line of code to fix the bug"]}]}
][
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}
][
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]
},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = str.length() - 1; i >= 0; i--) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.reverse().toString();"]}]
},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i += 2) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]
},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else if (Character.isLetter(c)) {", "                result.append(Character.toUpperCase(c));", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]
},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else if (Character.isDigit(c)) {", "                result.append(c);", "            } else {", "                result.append('X');", "            }", "        }", "        return result.toString();"]}]
},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else if (Character.isUpperCase(c)) {", "                result.append(Character.toLowerCase(c));", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]
},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else if (Character.isLowerCase(c)) {", "                result.append(Character.toUpperCase(c));", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]
},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else if (Character.isWhitespace(c)) {", "                result.append('_');", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]
},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        int count = 0;", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                count++;", "                if (count % 2 == 0) {", "                    result.append('\\\\\\\\'); // escape backslash", "                }", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]
},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = str.length() - 1; i >= 0; i--) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]
},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.insert(0, c);", "            }", "        }", "        return result.toString();"]}]
},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.insert(0, Character.toUpperCase(c));", "            }", "        }", "        return result.toString();"]}]
},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.insert(0, Character.toLowerCase(c));", "            }", "        }", "        return result.toString();"]}]
},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean[
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": [
"        if (str == null) {",
"            return null;",
"        }",
"        StringBuilder result = new StringBuilder();",
"        for (int i = 0; i < str.length(); i++) {",
"            char c = str.charAt(i);",
"            if (c == '\\\\') {",
"                result.append('\\\\\\\\'); // escape backslash",
"            } else {",
"                result.append(c);",
"            }",
"        }",
"        return result.toString();"
]}], "deletions": [86, 102, 127, 143, 154, 160, 178]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": [
"        if (str == null) {",
"            return null;",
"        }",
"        StringBuilder result = new StringBuilder();",
"        for (int i = 0; i < str.length(); i++) {",
"            char c = str.charAt(i);",
"            if (c == '\\\\') {",
"                result.append('\\\\\\\\'); // escape backslash",
"            } else {",
"                result.append(c);",
"            }",
"        }",
"        return result.toString();"
]}], "deletions": [86, 102, 127, 143, 154, 160, 178]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": [
"        if (str == null) {",
"            return null;",
"        }",
"        StringBuilder result = new StringBuilder();",
"        for (int i = 0; i < str.length(); i++) {",
"            char c = str.charAt(i);",
"            if (c == '\\\\') {",
"                result.append('\\\\\\\\'); // escape backslash",
"            } else {",
"                result.append(c);",
"            }",
"        }",
"        return result.toString();"
]}], "deletions": [86, 102, 127, 143, 154, 160, 178]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": [
"        if (str == null) {",
"            return null;",
"        }",
"        StringBuilder result = new StringBuilder();",
"        for (int i = 0; i < str.length(); i++) {",
"            char c = str.charAt(i);",
"            if (c == '\\\\') {",
"                result.append('\\\\\\\\'); // escape backslash",
"            } else {",
"                result.append(c);",
"            }",
"        }",
"        return result.toString();"
]}], "deletions": [86, 102, 127, 143, 154, 160, 178]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": [
"        if (str == null) {",
"            return null;",
"        }",
"        StringBuilder result = new StringBuilder();",
"        for (int i = 0; i < str.length(); i++) {",
"            char c = str.charAt(i);",
"            if (c == '\\\\') {",
"                result.append('\\\\\\\\'); // escape backslash",
"            } else {",
"                result.append(c);",
"            }",
"        }",
"        return result.toString();"
]}], "deletions": [86, 102, 127, 143, 154, 160, 178]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": [
"        if (str == null) {",
"            return null;",
"        }",
"        StringBuilder result = new StringBuilder();",
"        for (int i = 0; i < str.length(); i++) {",
"            char c = str.charAt(i);",
"            if (c == '\\\\') {",
"                result.append('\\\\\\\\'); // escape backslash",
"            } else {",
"                result.append(c);",
"            }",
"        }",
"        return result.toString();"
]}], "deletions": [86, 102, 127, 143, 154, 160, 178]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": [
"        if (str == null) {",
"            return null;",
"        }",
"        StringBuilder result = new StringBuilder();",
"        for (int i = 0; i < str.length(); i++) {",
"            char c = str.charAt(i);",
"            if (c == '\\\\') {",
"                result.append('\\\\\\\\'); // escape backslash",
"            } else {",
"                result.append(c);",
"            }",
"        }",
"        return result.toString();"
]}], "deletions": [86, 102, 127, 143, 154, 160, 178]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": [
"        if (str == null) {",
"            return null;",
"        }",
"        StringBuilder result = new StringBuilder();",
"        for (int i = 0; i < str.length(); i++) {",
"            char c = str.charAt(i);",
"            if (c == '\\\\') {",
"                result.append('\\\\\\\\'); // escape backslash",
"            } else {",
"                result.append(c);",
"            }",
"        }",
"        return result.toString();"
]}], "deletions": [86, 102, 127, 143, 154, 160, 178]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": [
"        if (str == null) {",
"            return null;",
"        }",
"        StringBuilder result = new StringBuilder();",
"        for (int i = 0; i < str.length(); i++) {",
"            char c = str.charAt(i);",
"            if (c == '\\\\') {",
"                result.append('\\\\\\\\'); // escape backslash",
"            } else {",
"                result.append(c);",
"            }",
"        }",
"        return result.toString();"
]}], "deletions": [86, 102, 127, 143, 154, 160, 178]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": [
"        if (str == null) {",
"            return null;",
"        }",
"        StringBuilder result = new StringBuilder();",
"        for (int i = 0; i < str.length(); i++) {",
"            char c = str.charAt(i);",
"            if (c == '\\\\') {",
"                result.append('\\\\\\\\'); // escape backslash",
"            } else {",
"                result.append(c);",
"            }",
"        }",
"        return result.toString();"
]}], "deletions": [86, 102, 127, 143, 154, 160, 178]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": [
"        if (str == null) {",
"            return null;",
"        }",
"        StringBuilder result = new StringBuilder();",
"        for (int i = 0; i < str.length(); i++) {",
"            char c = str.charAt(i);",
"            if (c == '\\\\') {",
"                result.append('\\\\\\\\'); // escape backslash",
"            } else {",
"                result.append(c);",
"            }",
"        }",
"        return result.toString();"
]}], "deletions": [86, 102, 127, 143, 154, 160, 178]}
][
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\');[
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\');[
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\');[
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\');[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}][
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]
[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        return escapeJavaStyleString(str, false);"]}]}]
[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        return escapeJavaStyleString(str, false);"]}]}]
[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        return escapeJavaStyleString(str, true);"]}]}]
[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        escapeJavaStyleString(out, str, false);"]}]}]
[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        escapeJavaStyleString(out, str, true);"]}]}]
[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        escapeJavaStyleString(writer, str, escapeSingleQuotes);"]}]}]
[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        escapeJavaStyleString(writer, str, escapeSingleQuote);"]}]}]
[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        return escapeJavaStyleString(str, false);", "        return escapeJavaStyleString(out, str, false);", "        return escapeJavaStyleString(str, true);", "        return escapeJavaStyleString(out, str, true);", "        return escapeJavaStyleString(writer, str, escapeSingleQuotes);", "        escapeJavaStyleString(out, str, false);", "        escapeJavaStyleString(out, str, true);", "        escapeJavaStyleString(writer, str, escapeSingleQuotes);"]}]}]
[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        escapeJavaStyleString(writer, str, escapeSingleQuotes);", "        return escapeJavaStyleString(str, true);"]}]}]
[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        escapeJavaStyleString(writer, str, escapeSingleQuotes);", "        return escapeJavaStyleString(str, false);"]}]}]
[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        escapeJavaStyleString(writer, str, escapeSingleQuotes);", "        escapeJavaStyleString(out, str, false);"]}]}]
[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\[
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Perform additional operations here to fix the bug", "        ", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Fix the bug by adding necessary checks and modifications", "        ", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Add the necessary logic to handle the escape characters correctly", "        ", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Implement the fix by properly escaping characters in the string", "        ", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Make necessary changes to properly handle escape characters in the string", "        ", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Fix the issue by properly formatting the string with escaped characters", "        ", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Ensure the correct escape of characters in the string to fix the bug", "        ", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Correctly handle the escaping of characters in the string to resolve the bug", "        ", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Add the necessary logic to properly escape characters in the string", "        ", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Adjust the escaping of characters in the string to fix the bug", "        ", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Make the necessary adjustments to escape characters in the string correctly", "        ", "        "]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Fix the escaping of characters in the string as needed to correct the bug", "        ", "        "]}], "deletions": [], "modifications": []}
][
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, !escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, !escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, !escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, !escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, !escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, !escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, !escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, !escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, !escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, !escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, !escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, !escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, !escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, !escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, !escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, !escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, !escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, !escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, !escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, !escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, !escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, !escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, !escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, !escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, !escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, !escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": []},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"],[
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutated code: Return the input string if it already contains double backslashes", "        if (str.contains(\"\\\\\\\")) {", "            return str;", "        }", "        ", "        // Original code: Escape backslashes in the input string", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]}],

{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutated code: Reverse the input string if it is not null", "        if (str != null) {", "            return new StringBuilder(str).reverse().toString();", "        }", "        ", "        // Original code: Escape backslashes in the input string", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]},

{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutated code: Convert the input string to uppercase", "        return str.toUpperCase();", "        ", "        // Original code: Escape backslashes in the input string", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]},

{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutated code: Return the length of the input string", "        return String.valueOf(str.length());", "        ", "        // Original code: Escape backslashes in the input string", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]},

{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutated code: Check if the input string is empty", "        if (str.isEmpty()) {", "            return \"Empty String\";", "        }", "        ", "        // Original code: Escape backslashes in the input string", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]},

{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutated code: Convert the input string to lowercase", "        return str.toLowerCase();", "        ", "        // Original code: Escape backslashes in the input string", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]},

{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutated code: Return the input string without spaces", "        return str.replaceAll(\"\\\\s\", \"\");", "        ", "        // Original code: Escape backslashes in the input string", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]},

{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutated code: Return the first character of the input string", "        return String.valueOf(str.charAt(0));", "        ", "        // Original code: Escape backslashes in the input string", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]},

{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutated code: Return the input string reversed", "        return new StringBuilder(str).reverse().toString();", "        ", "        // Original code: Escape backslashes in the input string", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]},

{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutated code: Return the input string with all characters in uppercase", "        return str.toUpperCase();", "        ", "        // Original code: Escape backslashes in the input string", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]},

{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutated code: Return the input string with all characters in lowercase", "        return str.toLowerCase();", "        ", "        // Original code: Escape backslashes in the input string", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]},

{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutated code: Return the input string with the first character in uppercase", "        return Character.toUpperCase(str.charAt(0)) + str.substring(1);", "        ", "        // Original code: Escape backslashes in the input string", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]},

{"file_name[
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\');[
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}
][
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Perform additional logic here", "        ", "        return result.toString();"]}]}]
][
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\');[
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder(str);", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            result.append(c);", "        }", "        return result.toString();"]}]}
,{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder(str);", "        for (int i = str.length() - 1; i >= 0; i--) {", "            char c = str.charAt(i);", "            result.append(c);", "        }", "        return result.toString();"]}]}
,{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = str.length() - 1; i >= 0; i--) {", "            char c = str.charAt(i);", "            result.append(c);", "        }", "        return result.toString();"]}]}
,{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i+=2) {", "            char c = str.charAt(i);", "            result.append(c);", "        }", "        return result.toString();"]}]}
,{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (Character.isDigit(c)) {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}
,{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (Character.isLetter(c)) {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}
,{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (Character.isUpperCase(c)) {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}
,{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (Character.isLowerCase(c)) {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}
,{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (Character.isWhitespace(c)) {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}
,{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (Character.isLetterOrDigit(c)) {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}
,{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (Character.isISOControl(c)) {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}
,{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (Character.isLowerCase(c) || Character.isUpperCase(c)) {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}
,{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (Character.isDigit(c) || Character.isLetter(c)) {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}
,{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (Character.isWhitespace(c) || Character.isLetterOrDigit(c)) {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}
,{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (Character.isWhitespace(c) && Character.isLetterOrDigit(c)) {", "                result.append(c);", "            }[
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]},
    {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c[
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}
][{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 1: Changing the escape character from '\\' to '/'", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '/') {", "                result.append('//'); // new escape character", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]

[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 2: Removing the escape condition", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            result.append(c);", "        }", "        return result.toString();"]}]}]

[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 3: Reversing the escape condition", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c != '\\\\') {", "                result.append(c);", "            } else {", "                result.append('\\\\\\\\'); // escape backslash", "            }", "        }", "        return result.toString();"]}]}]

[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 4: Changing the escape character to a different character", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '@') {", "                result.append('@'); // new escape character", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]

[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 5: Adding an additional condition for escaping forward slashes", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else if (c == '/') {", "                result.append('/'); // escape forward slash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]

[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 6: Changing the escape character to a different special character", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '!') {", "                result.append('!!'); // escape special character", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]

[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 7: Replacing escape character with an empty string, effectively removing the escape mechanism", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            result.append(c);", "        }", "        return result.toString();"]}]}]

[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 8: Applying a different escape mechanism for special characters", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '!') {", "                result.append('\\n'); // escape special character differently", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]

[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 9: Adding a condition to escape digits in the string", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (Character.isDigit(c)) {", "                result.append('0'); // escape digits", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]

[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 10: Escaping alphabetic characters differently by converting them to uppercase", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (Character.isLetter(c)) {", "                result.append(Character.toUpperCase(c)); // escape alphabetic characters differently", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]

[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 11: Escaping alphabetic characters differently by converting them to lowercase", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (Character.isLetter(c)) {", "                result.append(Character.toLowerCase(c)); // escape alphabetic characters differently", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]

[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 12: Escaping special characters by converting them to ASCII values", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c < 32 || c > 126) {", "                result.append((int)c); // escape special characters with ASCII values", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]

[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 13: Escaping digits by converting them to asterisks (*)", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (Character.isDigit(c)) {", "                result.append('*'); // escape digits with asterisks", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]

[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString[
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Inserted line for mutation 1", "        int index = str.indexOf('\\');", "        if (index >= 0) {", "            return str.substring(0, index) + str.substring(index + 1);", "        }", "        ", "        return str;"]}]}},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Inserted line for mutation 2", "        return str.replaceAll('\\\\', '/');"]}]}},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Inserted line for mutation 3", "return str.replace('\\\\', '/');"]}]}},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Inserted line for mutation 4", "return str.replaceFirst('\\\\', '/');"]}]}},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Inserted line for mutation 5", "return str.replace("\\\\", "/");"]}]}},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Inserted line for mutation 6", "return str.replace('\\', '/');"]}]}},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Inserted line for mutation 7", "return str.replaceFirst('\\\\', '/');"]}]}},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Inserted line for mutation 8", "return str.replaceFirst("\\\\", "/");"]}]}},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Inserted line for mutation 9", "return str.replace("\\\\", '/');"]}]}},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Inserted line for mutation 10", "return str.replaceFirst('\\\\', '/');"]}]}},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Inserted line for mutation 11", "return str.replaceFirst('\\\\', '/');"]}]}},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Inserted line for mutation 12", "return str.replaceAll('\\', '/');"]}]}},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Inserted line for mutation 13", "return str.replaceAll('\\\\', '/');"]}]}},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Inserted line for mutation 14", "return str.replace('\\\\', '/');"]}]}},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Inserted line for mutation 15", "return str.replaceFirst('\\\\', '/');"]}]}},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Inserted line for mutation 16", "return str.replaceFirst("\\\\", '/');"]}]}},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Inserted line for mutation 17", "return str.replaceFirst('\\\\', \"/\");"]}]}},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Inserted line for mutation 18", "return str.replaceFirst[
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 1: Replacing single quotes with double quotes", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\"') {", "                result.append('\\\\\\\\'); // escape double quote", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 2: Reversing the order of characters in the string", "        StringBuilder result = new StringBuilder();", "        for (int i = str.length() - 1; i >= 0; i--) {", "            char c = str.charAt(i);", "            result.append(c);", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 3: Converting all characters to uppercase", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            result.append(Character.toUpperCase(c));", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 4: Encoding characters using ASCII values", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            result.append((int) c);", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 5: Replacing characters with their respective ASCII escape sequences", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\n') {", "                result.append(\"\\\\n\"); // newline", "            } else if (c == '\\t') {", "                result.append(\"\\\\t\"); // tab", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 6: Replacing characters with their hexadecimal representation", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            result.append(\"\\\\u\" + Integer.toHexString(c | 0x10000).substring(1));", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 7: Reversing the order of characters in the string and converting to uppercase", "        StringBuilder result = new StringBuilder();", "        for (int i = str.length() - 1; i >= 0; i--) {", "            char c = str.charAt(i);", "            result.append(Character.toUpperCase(c));", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 8: Converting characters to their ASCII values and then back to characters", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            int asciiValue = (int) c;", "            result.append((char) asciiValue);", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 9: Replacing characters with their binary representations", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            result.append(Integer.toBinaryString(c));", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 10: Replacing characters with their Unicode escape sequences", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            result.append(\"\\\\u\" + String.format(\"%04x\", (int) c));", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 11: Replacing characters with their octal escape sequences", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            result.append(\"\\\\\" + Integer.toOctalString(c));", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 12: Replacing characters with their HTML entity codes", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            result.append(\"&\" + (int) c + \";\");", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Mutant 13: Replacing characters with their corresponding Morse code", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            switch (c) {", "                case 'A':", "                    result.append(\".-\");", "                    break;", "                case 'B':", "                    result.append(\"-...\");", "                    break;", "                // Add more cases for other characters", "                default:", "                    result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []},
{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"],