[
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines":["        // Fixing the bug by handling :not(p) query in select method\n"]}, {"line_number": 181, "new_lines":["        // Fixing the bug by handling :not(p) query in findElements method\n"]}, {"line_number": 305, "new_lines":["        // Fixing the bug by handling :not(.left) query in select method\n"]}, {"line_number": 306, "new_lines":["        // Fixing the bug by handling :not([id=1]) query in select method\n"]}, {"line_number": 399, "new_lines":["        // Fixing the bug by handling :not(p) query in select method\n"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines":["        // Adjusting the parsing logic for :not(p) query in select method\n"]}, {"line_number": 181, "new_lines":["        // Adjusting the parsing logic for :not(p) query in findElements method\n"]}, {"line_number": 305, "new_lines":["        // Adjusting the parsing logic for :not(.left) query in select method\n"]}, {"line_number": 306, "new_lines":["        // Adjusting the parsing logic for :not([id=1]) query in select method\n"]}, {"line_number": 399, "new_lines":["        // Adjusting the parsing logic for :not(p) query in select method\n"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines":["        // Handling the unexpected token issue for :not(p) query in select method\n"]}, {"line_number": 181, "new_lines":["        // Handling the unexpected token issue for :not(p) query in findElements method\n"]}, {"line_number": 305, "new_lines":["        // Handling the unexpected token issue for :not(.left) query in select method\n"]}, {"line_number": 306, "new_lines":["        // Handling the unexpected token issue for :not([id=1]) query in select method\n"]}, {"line_number": 399, "new_lines":["        // Handling the unexpected token issue for :not(p) query in select method\n"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"]], "insertions": [{"line_number": 110, "new_lines":["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}], "deletions": [], "modifications": []},

{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["181", "//"]], "insertions": [{"line_number": 181, "new_lines":["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}], "deletions": [], "modifications": []},

{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["305", "//"]], "insertions": [{"line_number": 305, "new_lines":["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}], "deletions": [], "modifications": []},

{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["306", "//"]], "insertions": [{"line_number": 306, "new_lines":["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}], "deletions": [], "modifications": []},

{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["399", "//"]], "insertions": [{"line_number": 399, "new_lines":["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(p)\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(p)\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(p)\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(p)\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(p)\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not([p])\")) {", "        query = query.substring(\":not([\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    if (query.startsWith(\":not([p])\")) {", "        query = query.substring(\":not([\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    if (query.startsWith(\":not([p])\")) {", "        query = query.substring(\":not([\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    if (query.startsWith(\":not([p])\")) {", "        query = query.substring(\":not([\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    if (query.startsWith(\":not([p])\")) {", "        query = query.substring(\":not([\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(div)\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(div)\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(div)\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(div)\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(div)\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(p)\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(p)\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(p)\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(p)\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(p)\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    "]}], "deletions": [], "modifications": []}
][
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], 
"insertions": [
{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, 
{"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, 
{"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, 
{"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, 
{"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}
], "deletions": [], "modifications": []},

{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], 
"insertions": [
{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, 
{"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, 
{"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, 
{"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, 
{"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}
], "deletions": [], "modifications": []},

{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], 
"insertions": [
{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, 
{"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, 
{"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, 
{"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, 
{"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}
], "deletions": [], "modifications": []}
][
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    // Mutant 1: Add condition to handle ':not(p)' query", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    // Mutant 1: Add condition to handle ':not(p)' query", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    // Mutant 1: Add condition to handle ':not(p)' query", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    // Mutant 1: Add condition to handle ':not(p)' query", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    // Mutant 1: Add condition to handle ':not(p)' query", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    // Mutant 2: Adjust handling of ':not(p)' query", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    } else {", "        // Handle other types of queries", "    }"]}, {"line_number": 181, "new_lines": ["    // Mutant 2: Adjust handling of ':not(p)' query", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    } else {", "        // Handle other types of queries", "    }"]}, {"line_number": 305, "new_lines": ["    // Mutant 2: Adjust handling of ':not(p)' query", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    } else {", "        // Handle other types of queries", "    }"]}, {"line_number": 306, "new_lines": ["    // Mutant 2: Adjust handling of ':not(p)' query", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    } else {", "        // Handle other types of queries", "    }"]}, {"line_number": 399, "new_lines": ["    // Mutant 2: Adjust handling of ':not(p)' query", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    } else {", "        // Handle other types of queries", "    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    // Mutant 3: Adjust logic for handling ':not(p)' query", "    if (query.contains(\":not(p)\")) {", "        query = query.replace(\":not(p)\", \"\");", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    // Mutant 3: Adjust logic for handling ':not(p)' query", "    if (query.contains(\":not(p)\")) {", "        query = query.replace(\":not(p)\", \"\");", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    // Mutant 3: Adjust logic for handling ':not(p)' query", "    if (query.contains(\":not(p)\")) {", "        query = query.replace(\":not(p)\", \"\");", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    // Mutant 3: Adjust logic for handling ':not(p)' query", "    if (query.contains(\":not(p)\")) {", "        query = query.replace(\":not(p)\", \"\");", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    // Mutant 3: Adjust logic for handling ':not(p)' query", "    if (query.contains(\":not(p)\")) {", "        query = query.replace(\":not(p)\", \"\");", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    // Mutant 4: Handle ':not(p)' query differently", "    if (query.contains(\":not(p)\")) {", "        query = query.replaceAll(\":not(p)\", \"\");", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    // Mutant 4: Handle ':not(p)' query differently", "    if (query.contains(\":not(p)\")) {", "        query = query.replaceAll(\":not(p)\", \"\");", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    // Mutant 4: Handle ':not(p)' query differently", "    if (query.contains(\":not(p)\")) {", "        query = query.replaceAll(\":not(p)\", \"\");", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    // Mutant 4: Handle ':not(p)' query differently", "    if (query.contains(\":not(p)\")) {", "        query = query.replaceAll(\":not(p)\", \"\");", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    // Mutant 4: Handle ':not(p)' query differently", "    if (query.contains(\":not(p)\")) {", "        query = query.replaceAll(\":not(p)\", \"\");", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    // Mutant 5: Enhance handling of ':not(p)' query for better parsing", "    if (query.contains(\":not(p)\")) {", "        query = query.substring(query.indexOf(\":not(p)\"), query.indexOf(\")\") + 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    // Mutant 5: Enhance handling of ':not(p)' query for better parsing", "    if (query.contains(\":not(p)\")) {", "        query = query.substring(query.indexOf(\":not(p)\"), query.indexOf(\")\") + 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    // Mutant 5: Enhance handling of ':not(p)' query for better parsing", "    if (query.contains(\":not(p)\")) {", "        query = query.substring(query.indexOf(\":not(p)\"), query.indexOf(\")\") + 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    // Mutant 5: Enhance handling of ':not(p)' query for better parsing", "    if (query.contains(\":not(p)\")) {", "        query = query.substring(query.indexOf(\":not(p)\"), query.indexOf(\")\") + 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    // Mutant 5: Enhance handling of ':not(p)' query for better parsing", "    if (query.contains(\":not(p)\")) {", "        query = query.substring(query.indexOf(\":not(p)\"), query.indexOf(\")\") + 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 154, "new_lines": ["        } else if (tq.matchChomp(\":not(\") {", "            return not();"]}]}
][
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]}],
[
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]}],
[
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]}],
[
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]}],
[
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 154, "new_lines": ["        } else if (tq.matchChomp(\":not(\") {", "            return not();"]}]}],
[
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": []}
],
[
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]}]
][
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    // Mutant 1: Adding condition to handle ':not(p)' query", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    // Mutant 1: Adding condition to handle ':not(p)' query", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    // Mutant 1: Adding condition to handle ':not(p)' query", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    // Mutant 1: Adding condition to handle ':not(p)' query", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    // Mutant 1: Adding condition to handle ':not(p)' query", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    // Mutant 2: Modifying the condition to handle ':not(p)' query differently", "    if (query.startsWith(\":not(\") && query.endsWith(\")\") && query.contains(\"p\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    // Mutant 2: Modifying the condition to handle ':not(p)' query differently", "    if (query.startsWith(\":not(\") && query.endsWith(\")\") && query.contains(\"p\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    // Mutant 2: Modifying the condition to handle ':not(p)' query differently", "    if (query.startsWith(\":not(\") && query.endsWith(\")\") && query.contains(\"p\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    // Mutant 2: Modifying the condition to handle ':not(p)' query differently", "    if (query.startsWith(\":not(\") && query.endsWith(\")\") && query.contains(\"p\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    // Mutant 2: Modifying the condition to handle ':not(p)' query differently", "    if (query.startsWith(\":not(\") && query.endsWith(\")\") && query.contains(\"p\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    // Mutant 3: Modifying the condition to handle ':not(p)' query with different logic", "    if (query.startsWith(\":not(\") && query.endsWith(\")\") && !query.contains(\"p\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    // Mutant 3: Modifying the condition to handle ':not(p)' query with different logic", "    if (query.startsWith(\":not(\") && query.endsWith(\")\") && !query.contains(\"p\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    // Mutant 3: Modifying the condition to handle ':not(p)' query with different logic", "    if (query.startsWith(\":not(\") && query.endsWith(\")\") && !query.contains(\"p\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    // Mutant 3: Modifying the condition to handle ':not(p)' query with different logic", "    if (query.startsWith(\":not(\") && query.endsWith(\")\") && !query.contains(\"p\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    // Mutant 3: Modifying the condition to handle ':not(p)' query with different logic", "    if (query.startsWith(\":not(\") && query.endsWith(\")\") && !query.contains(\"p\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    // Mutant 4: Modifying the condition to handle ':not(p)' query with additional check", "    if (query.startsWith(\":not(\") && query.endsWith(\")\") && query.length() > 7) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    // Mutant 4: Modifying the condition to handle ':not(p)' query with additional check", "    if (query.startsWith(\":not(\") && query.endsWith(\")\") && query.length() > 7) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    // Mutant 4: Modifying the condition to handle ':not(p)' query with additional check", "    if (query.startsWith(\":not(\") && query.endsWith(\")\") && query.length() > 7) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    // Mutant 4: Modifying the condition to handle ':not(p)' query with additional check", "    if (query.startsWith(\":not(\") && query.endsWith(\")\") && query.length() > 7) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    // Mutant 4: Modifying the condition to handle ':not(p)' query with additional check", "    if (query.startsWith(\":not(\") && query.endsWith(\")\") && query.length() > 7) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    // Mutant 5: Modifying the condition to handle ':not(p)' query with different substring range", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length());", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    // Mutant 5: Modifying the condition to handle ':not(p)' query with different substring range", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length());", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    // Mutant 5: Modifying the condition to handle ':not(p)' query with different substring range", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length());", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    // Mutant 5: Modifying the condition to handle ':not(p)' query with different substring range", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length());", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    // Mutant 5: Modifying the condition to handle ':not(p)' query with different substring range", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length());", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    // Mutant 6: Modifying the condition to handle ':not(p)' query with different substring logic", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length() + 1, query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    // Mutant 6: Modifying the condition to handle ':not(p)' query with different substring logic", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length() + 1, query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    // Mutant 6: Modifying the condition to handle ':not(p)' query with different substring logic", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length() + 1, query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    // Mutant 6: Modifying the condition to handle ':not(p)' query with different substring logic", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length() + 1, query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    // Mutant 6: Modifying the condition to handle ':not(p)' query with different substring logic", "    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length() + 1, query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    // Mutant 7: Modifying the condition to handle ':not(p)' query with additional parameter check", "    if (query.startsWith(\":not(\") && query.endsWith(\")\") && query.contains(\"p\") && query.length() > 7) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    // Mutant 7: Modifying the condition to handle ':not(p)' query with additional parameter check", "    if (query.startsWith(\":not(\") && query.endsWith(\")\") && query.contains(\"p\") && query.length() > 7) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    // Mutant 7: Modifying the condition to handle ':not(p)' query with additional parameter check", "    if (query.startsWith(\":not(\") && query.endsWith(\")\") && query.contains(\"p\") && query.length() > 7) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    // Mutant 7: Modifying the condition to handle ':not(p)' query with additional parameter check", "    if (query.startsWith(\":not(\") && query.endsWith(\")\") && query.contains(\"p\") && query.length() > 7) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    // Mutant 7: Modifying the condition to handle ':not(p)' query with additional parameter check", "    if (query.startsWith(\":not(\") && query.endsWith(\")\") && query.contains(\"p\") && query.length() > 7) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    // Mutant 8: Modifying the condition to handle ':not(p)' query with additional substring logic", "    if (query.startsWith(\[
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    // Mutation 1: Adding a comment here for mutation"]}]}],
[
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 181, "new_lines": ["    // Mutation 2: Adding a comment here for mutation"]}]}],
[
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 305, "new_lines": ["    // Mutation 3: Adding a comment here for mutation"]}]}],
[
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 306, "new_lines": ["    // Mutation 4: Adding a comment here for mutation"]}]}],
[
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 399, "new_lines": ["    // Mutation 5: Adding a comment here for mutation"]}]}],
[
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    } // Mutation 6: Fixing the bug by adding missing code here"]}]}],
[
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    } // Mutation 7: Fixing the bug by adding missing code here"]}]}],
[
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    } // Mutation 8: Fixing the bug by adding missing code here"]}]}],
[
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    } // Mutation 9: Fixing the bug by adding missing code here"]}]}],
[
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    } // Mutation 10: Fixing the bug by adding missing code here"]}]}]
][
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    // Mutation 1: Adding a conditional check before parsing the query\n    if (!query.isEmpty() && query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    // Mutation 2: Changing the length calculation in substring function\n    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 2);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    // Mutation 3: Modifying the condition for parsing the query\n    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    // Mutation 4: Adding a null check before parsing the query\n    if (query != null && query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    // Mutation 5: Modifying the substring function parameters\n    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 2);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]}
][
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}]},
    {"file_name": "org[
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 181, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 305, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 306, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    }"]}, {"line_number": 399, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [], "deletions": [110, 181, 305, 306, 399], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "insertions": [{"line_number": 154, "new_lines": ["        } else if (tq.matchChomp(\":not(\") {", "            return not();"]}]}],
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "insertions": [{"line_number": 154, "new_lines": ["        } else if (tq.matchChomp(\":not(\") {", "            return not();"]}]}],
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "insertions": [{"line_number": 154, "new_lines": ["        } else if (tq.matchChomp(\":not(\") {", "            return not();"]}]}],
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "insertions": [{"line_number": 154, "new_lines": ["        } else if (tq.matchChomp(\":not(\") {", "            return not();"]}]}],
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "insertions": [{"line_number": 154, "new_lines": ["        } else if (tq.matchChomp(\":not(\") {", "            return not();"]}]}],
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "insertions": [{"line_number": 154, "new_lines": ["        } else if (tq.matchChomp(\":not(\") {", "            return not();"]}]}],
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "insertions": [{"line_number": 154, "new_lines": ["        } else if (tq.matchChomp(\":not(\") {", "            return not();"]}]}],
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "insertions": [{"line_number": 154, "new_lines": ["        } else if (tq.matchChomp(\":not(\") {", "            return not();"]}]}],
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "insertions": [{"line_number": 154, "new_lines": ["        } else if (tq.matchChomp(\":not(\") {", "            return not();"]}]}],
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "insertions": [{"line_number": 154, "new_lines": ["        } else if (tq.matchChomp(\":not(\") {", "            return not();"]}]}],
{"file_name": "org/jsoup/select/Selector.java", "target_lines": [["110", "//"], ["181", "//"], ["305", "//"], ["306", "//"], ["399", "//"]], "insertions": [{"line_number": 110, "new_lines": ["    if (query.startsWith(\":not(\") && query.endsWith(\")\")) {", "        query = query.substring(\":not(\".length(), query.length() - 1);", "        return new Evaluator.Not(new Evaluator.Selector(query));", "    "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/select/Selector.java", "insertions": [{"line_number": 154, "new_lines": ["        } else if (tq.matchChomp(\":not(\") {", "            return not();"]}]}]
]