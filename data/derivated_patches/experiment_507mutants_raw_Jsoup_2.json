[
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": [
"if (tag.isData()) {",
"    String data = tq.chompTo(\"</\" + tagName);",
"    tq.chompTo(\">\");",
"    Node dataNode;",
"    if (tag.equals(titleTag) || tag.equals(textareaTag))",
"        dataNode = TextNode.createFromEncoded(data, baseUri);",
"    else",
"        dataNode = new DataNode(data, baseUri);",
"    child.appendChild(dataNode);",
"}"
]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": [
"if (tag.isEmpty()) {",
"    String data = tq.chompTo(\"</\" + tagName);",
"    tq.chompTo(\">\");",
"    Node dataNode;",
"    if (tag.equals(titleTag) || tag.equals(textareaTag))",
"        dataNode = TextNode.createFromEncoded(data, baseUri);",
"    else",
"        dataNode = new DataNode(data, baseUri);",
"    child.appendChild(dataNode);",
"}"
]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": [
"if (tag.isSelfClosing()) {",
"    String data = tq.chompTo(\"</\" + tagName);",
"    tq.chompTo(\">\");",
"    Node dataNode;",
"    if (tag.equals(titleTag) || tag.equals(textareaTag))",
"        dataNode = TextNode.createFromEncoded(data, baseUri);",
"    else",
"        dataNode = new DataNode(data, baseUri);",
"    child.appendChild(dataNode);",
"}"
]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": [
"if (tq.matchChomp(\"/>\")) {",
"    String data = tq.chompTo(\"</\" + tagName);",
"    tq.chompTo(\">\");",
"    Node dataNode;",
"    if (tag.equals(titleTag) || tag.equals(textareaTag))",
"        dataNode = TextNode.createFromEncoded(data, baseUri);",
"    else",
"        dataNode = new DataNode(data, baseUri);",
"    child.appendChild(dataNode);",
"}"
]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": [
"if (tag.isBlock()) {",
"    String data = tq.chompTo(\"</\" + tagName);",
"    tq.chompTo(\">\");",
"    Node dataNode;",
"    if (tag.equals(titleTag) || tag.equals(textareaTag))",
"        dataNode = TextNode.createFromEncoded(data, baseUri);",
"    else",
"        dataNode = new DataNode(data, baseUri);",
"    child.appendChild(dataNode);",
"}"
]}],
"deletions": [],
"modifications": []
}
][
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": [
"// Handle text within script tags properly",
"if (tag.isData() && tag.equals(scriptTag)) {",
"String scriptData = tq.chompTo(\"</\" + tagName);",
"Node scriptDataNode = new DataNode(scriptData, baseUri);",
"child.appendChild(scriptDataNode);",
"}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": [
"// Handle text within script tags properly",
"if (tag.isData() && tag.equals(scriptTag)) {",
"String scriptData = tq.chompTo(\"</\" + tagName);",
"Node scriptDataNode = new DataNode(scriptData, baseUri);",
"child.appendChild(scriptDataNode);",
"}",
"// Additional mutation to fix the bug",
"if (tag.isData() && tag.equals(scriptTag)) {",
"String scriptData = tq.chompTo(\"</\" + tagName);",
"Node scriptDataNode = new DataNode(scriptData, baseUri);",
"child.appendChild(scriptDataNode);",
"}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": [
"// Handle text within script tags properly",
"if (tag.isData() && tag.equals(scriptTag)) {",
"String scriptData = tq.chompTo(\"</\" + tagName);",
"Node scriptDataNode = new DataNode(scriptData, baseUri);",
"child.appendChild(scriptDataNode);",
"}",
"// Potential mutation to address the issue",
"if (tag.isData() && tag.equals(scriptTag)) {",
"String scriptData = tq.chompTo(\"</\" + tagName);",
"Node scriptDataNode = new DataNode(scriptData, baseUri);",
"child.appendChild(scriptDataNode);",
"}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": [
"// Handle text within script tags properly",
"if (tag.isData() && tag.equals(scriptTag)) {",
"String scriptData = tq.chompTo(\"</\" + tagName);",
"Node scriptDataNode = new DataNode(scriptData, baseUri);",
"child.appendChild(scriptDataNode);",
"}",
"// Mutation to fix text handling inside script tags",
"if (tag.isData() && tag.equals(scriptTag)) {",
"String scriptData = tq.chompTo(\"</\" + tagName);",
"Node scriptDataNode = new DataNode(scriptData, baseUri);",
"child.appendChild(scriptDataNode);",
"}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": [
"// Handle text within script tags properly",
"if (tag.isData() && tag.equals(scriptTag)) {",
"String scriptData = tq.chompTo(\"</\" + tagName);",
"Node scriptDataNode = new DataNode(scriptData, baseUri);",
"child.appendChild(scriptDataNode);",
"}",
"// Fix for handling text inside script tags",
"if (tag.isData() && tag.equals(scriptTag)) {",
"String scriptData = tq.chompTo(\"</\" + tagName);",
"Node scriptDataNode = new DataNode(scriptData, baseUri);",
"child.appendChild(scriptDataNode);",
"}"]}],
"deletions": [],
"modifications": []
}
][
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);"]}]}
][
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Fix handling of script tag data", "if (tag.isData() && tagName.equals(\"script\")) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Ensure correct handling of script tag data", "if (tag.isData() && tagName.equals(\"script\")) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Adjust script tag data processing", "if (tag.isData() && tagName.equals(\"script\")) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Correct handling of script tag content", "if (tag.isData() && tagName.equals(\"script\")) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Fix bug related to script tag data", "if (tag.isData() && tagName.equals(\"script\")) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle script tag data correctly", "if (tag.isData() && tagName.equals(\"script\")) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Fix script tag data processing", "if (tag.isData() && tagName.equals(\"script\")) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Properly handle script tag data", "if (tag.isData() && tagName.equals(\"script\")) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Fix script tag content processing", "if (tag.isData() && tagName.equals(\"script\")) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
},
{"file_name": "org/jsoup/parser/Parser.java", "target_lines": [["148", "//"]], "insertions": [{"line_number": 148, "new_lines": ["// Handle text within script tags properly", "if (tag.isData() && tag.equals(scriptTag)) {", "String scriptData = tq.chompTo(\"</\" + tagName);", "Node scriptDataNode = new DataNode(scriptData, baseUri);", "child.appendChild(scriptDataNode);", "}"]}],
"deletions": [],
"modifications": []
}
]