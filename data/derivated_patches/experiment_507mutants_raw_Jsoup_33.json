[
    {"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["stack.add(el);", "tokeniser.emit(new Token.EndTag(el.tagName())); // ensure we get out of whatever state we are in. emitted for yielded processing", "return el;"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["stack.add(el);", "return el;"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["stack.add(el);", "return el; // fix the bug by returning the element directly without emitting EndTag"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["stack.add(el);"]}], "deletions": [], "modifications": []},
    {"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["stack.add(el);", "tokeniser.emit(new Token.EndTag(el.tagName()));", "return el;"]}], "deletions": [], "modifications": []}
][
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "modifications": [{"line_number": 162, "modified_line": "            if (startTag.isSelfClosing()) {"}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "modifications": [{"line_number": 162, "modified_line": "            if (!startTag.isSelfClosing()) {"}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "modifications": [{"line_number": 162, "modified_line": "            if (startTag.isSelfClosing()) { // Modified for fixing bug"}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "modifications": [{"line_number": 162, "modified_line": "            if (!startTag.isSelfClosing()) { // Modified for fixing bug"}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "modifications": [{"line_number": 162, "modified_line": "            if (startTag.isSelfClosing()) { // Bug fix applied here"}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "modifications": [{"line_number": 162, "modified_line": "            if (!startTag.isSelfClosing()) { // Bug fix applied here"}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "modifications": [{"line_number": 162, "modified_line": "            if (startTag.isSelfClosing()) {", "tokeniser.emit(new Token.EndTag(el.tagName()));"}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "modifications": [{"line_number": 162, "modified_line": "            if (!startTag.isSelfClosing()) {", "tokeniser.emit(new Token.EndTag(el.tagName()));"}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "modifications": [{"line_number": 162, "modified_line": "            if (startTag.isSelfClosing()) {", "stack.add(el);", "tokeniser.emit(new Token.EndTag(el.tagName()));"}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "modifications": [{"line_number": 162, "modified_line": "            if (!startTag.isSelfClosing()) {", "stack.add(el);", "tokeniser.emit(new Token.EndTag(el.tagName()));"}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "modifications": [{"line_number": 162, "modified_line": "            if (startTag.isSelfClosing()) {", "stack.add(el);", "tokeniser.emit(new Token.EndTag(el.tagName()));", "return el;"}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "modifications": [{"line_number": 162, "modified_line": "            if (!startTag.isSelfClosing()) {", "stack.add(el);", "tokeniser.emit(new Token.EndTag(el.tagName()));", "return el;"}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "modifications": [{"line_number": 162, "modified_line": "            if (startTag.isSelfClosing()) {", "stack.add(el);", "tokeniser.emit(new Token.EndTag(el.tagName()));"}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "modifications": [{"line_number": 162, "modified_line": "            if (!startTag.isSelfClosing()) {", "stack.add(el);", "tokeniser.emit(new Token.EndTag(el.tagName()));"}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "deletions": [162]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "deletions": [161, 162, 163]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "deletions": [161, 162, 163, 164]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "deletions": [161, 162, 163, 164, 165]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "deletions": [161, 162, 163, 164, 165, 166]}
][
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                stack.add(el);", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                stack.add(el);", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                return el;", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                return el;", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                insertNode(el);", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                insertNode(el);", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                insertForm(startTag, true);", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                insertForm(startTag, true);", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                insertMarkerToFormattingElements();", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                insertMarkerToFormattingElements();", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                insertInFosterParent(el);", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                insertInFosterParent(el);", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                insertOnStackAfter(el, el);", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                insertOnStackAfter(el, el);", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                insertNode(entry.nodeName());", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                insertNode(entry.nodeName());", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                insertNode(comment);", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                insertNode(comment);", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                insertNode(character);", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                insertNode(character);", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                insertInFosterParent(in);", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                insertInFosterParent(in);", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                entry.nodeName();", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                entry.nodeName();", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                insertInFosterParent(node);", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                insertInFosterParent(node);", "            }"]}]}
][
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "            "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            } else {", "                // Handle non-self closing tags", "            "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            } else {", "                // Handle non-self closing tags", "                Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);", "                insert(el);", "                return el;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            } else {", "                // Handle non-self closing tags", "                Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName());", "                return el;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            } else {", "                // Handle non-self closing tags", "                Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);", "                insert(el);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName());", "                return el;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            } else {", "                // Handle non-self closing tags", "                Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);", "                insert(el);", "tokeniser.emit(new Token.EndTag(el.tagName());", "                return el;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName());", "                return el;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName());", "                return el;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName());", "                return el;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName());", "                return el;", "            } else {", "                // Handle non-self closing tags", "            "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName());", "                return el;", "            } else {", "                // Handle non-self closing tags", "                Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);", "                insert(el);", "                return el;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName());", "                return el;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName());", "                return el;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName());", "                return el;", "            } else {", "                // Handle non-self closing tags", "            "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName());", "                return el;", "            } else {", "                // Handle non-self closing tags", "                Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);", "                insert(el);", "                return el;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName());", "                return el;", "            "]}], "deletions": [], "modifications": []},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            "]}], "deletions": [], "modifications": []}
][
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            }"]}]}
][
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                return el;", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                return el;", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                return el;", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "deletions": [162]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                return el;", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "modifications": [{"line_number": 162, "modified_line": "            if (!startTag.isSelfClosing()) {"}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "modifications": [{"line_number": 162, "modified_line": "            if (startTag.isSelfClosing()) {"}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "modifications": [{"line_number": 162, "modified_line": "            if (!startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            }"}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "modifications": [{"line_number": 162, "modified_line": "            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            "}]}],
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "modifications": [{"line_number": 162, "modified_line": "            if (!startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            "}]}],
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "modifications": [{"line_number": 162, "modified_line": "            if (startTag.isSelfClosing()) {", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            "}]}],
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "deletions": [162]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "deletions": [162, 163]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "deletions": [162, 163, 164]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "deletions": [162, 163, 164, 165]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "deletions": [162, 163, 164, 165, 166]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "deletions": [162, 163, 164, 165, 166, 167]}
][{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "            }"]}]}, {"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            "]}]}, {"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "            "]}]}, {"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            "]}]}, {"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "            }"]}]}, {"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "            } else {", "                // Handle the case when the tag is not self-closing", "            "]}]}][
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            }"]}]}
][
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            }"]}]}
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                Element el = insert(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            }"]}]}
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            } else {", "                // Handle the case when the tag is not self-closing", "            }"]}]}
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            // Additional handling for self-closing tags", "            }"]}]}
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            // Check for self-closing tags", "            }"]}]}
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            // Handling self-closing tags", "            }"]}]}
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            // Additional logic for self-closing tags", "            "]}]}
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            // Check and handle self-closing tags", "            "]}]}
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            // Handle self-closing tags with care", "            "]}]}
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                Element el = insertEmpty(startTag);", "                stack.add(el);", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "                return el;", "            // Mindful handling of self-closing tags", "            "]}]}
][
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (!startTag.isSelfClosing()) {", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "            }"]}]},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], "insertions": [{"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", "                tokeniser.emit(new Token.EndTag(el.tagName()));", "            }"]}]}
][
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], 
"insertions": [
    {"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", 
                                       "                tokeniser.emit(new Token.EndTag(el.tagName()));", 
                                       "            }"]}
], 
"deletions": [], 
"modifications": []
},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], 
"insertions": [
    {"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", 
                                       "                tokeniser.emit(new Token.EndTag(el.tagName()));", 
                                       "            } // Fix the issue by handling self-closing tags properly"]
}], 
"deletions": [], 
"modifications": []
},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], 
"insertions": [
    {"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", 
                                       "                tokeniser.emit(new Token.EndTag(el.tagName()));", 
                                       "            } // Properly emit end tag for self-closing tags"]
}], 
"deletions": [], 
"modifications": []
},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], 
"insertions": [
    {"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", 
                                       "                tokeniser.emit(new Token.EndTag(el.tagName()));", 
                                       "            } // Ensure emitting end tag for self-closing tags"]
}], 
"deletions": [], 
"modifications": []
},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], 
"insertions": [
    {"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", 
                                       "                tokeniser.emit(new Token.EndTag(el.tagName()));", 
                                       "            } // Fix: Emit end tag for self-closing tags"]
}], 
"deletions": [], 
"modifications": []
},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], 
"insertions": [
    {"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", 
                                       "                tokeniser.emit(new Token.EndTag(el.tagName()));", 
                                       "            } // Handle self-closing tags properly"]
}], 
"deletions": [], 
"modifications": []
},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], 
"insertions": [
    {"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", 
                                       "                tokeniser.emit(new Token.EndTag(el.tagName()));", 
                                       "            } // Ensure correct handling of self-closing tags"]
}], 
"deletions": [], 
"modifications": []
},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], 
"insertions": [
    {"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", 
                                       "                tokeniser.emit(new Token.EndTag(el.tagName()));", 
                                       "            } // Fix: Handle self-closing tags appropriately"]
}], 
"deletions": [], 
"modifications": []
},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], 
"insertions": [
    {"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", 
                                       "                tokeniser.emit(new Token.EndTag(el.tagName()));", 
                                       "            } // Update for proper self-closing tag handling"]
}], 
"deletions": [], 
"modifications": []
},
{"file_name": "org/jsoup/parser/HtmlTreeBuilder.java", "target_lines": [["162", "//"]], 
"insertions": [
    {"line_number": 162, "new_lines": ["            if (startTag.isSelfClosing()) {", 
                                       "                tokeniser.emit(new Token.EndTag(el.tagName()));", 
                                       "            } // Bug fix: Emit end tag for self-closing elements"]
}], 
"deletions": [], 
"modifications": []
}   
]