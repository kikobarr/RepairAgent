[
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 99, "new_lines": ["\t\tJsonDeserializer<Object> deserializer = ctxt.findContextualValueDeserializer(p.getCurrentValue(), null, null);\n"]}], "deletions": [89, 90, 91, 92], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["\t\t\tif (p.getCurrentToken() != JsonToken.START_OBJECT) {\n", "\t\t\t\tthrow ctxt.wrongTokenException(p, JsonToken.START_OBJECT, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n", "\t\t\t}"]}], "deletions": [89, 90, 91, 92], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["\t\t\tif (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.END_OBJECT) {\n", "\t\t\t\tthrow ctxt.wrongTokenException(p, JsonToken.START_OBJECT, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n", "\t\t\t}"]}], "deletions": [89, 90, 91, 92], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["\t\t\tif (p.getCurrentToken() == JsonToken.FIELD_NAME) {\n", "\t\t\t\tthrow ctxt.wrongTokenException(p, JsonToken.FIELD_NAME, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n", "\t\t\t}"]}], "deletions": [89, 90, 91, 92], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["\tif (p.getCurrentToken() != JsonToken.FIELD_NAME) {\n", "\t\t\tthrow ctxt.wrongTokenException(p, JsonToken.FIELD_NAME, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n", "\t\t}"]}], "deletions": [89, 90, 91, 92], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["\t\t\tif (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.END_OBJECT) {\n", "\t\t\t\tthrow ctxt.wrongTokenException(p, JsonToken.START_OBJECT, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n", "\t\t\t}"]}], "deletions": [89, 90, 91, 92], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["\t\t\tif (p.getCurrentToken() == JsonToken.FIELD_NAME) {\n", "\t\t\t\tthrow ctxt.wrongTokenException(p, JsonToken.FIELD_NAME, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n", "\t\t\t}"]}], "deletions": [89, 90, 91, 92], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["\tif (p.getCurrentToken() != JsonToken.FIELD_NAME) {\n", "\t\t\tthrow ctxt.wrongTokenException(p, JsonToken.FIELD_NAME, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n", "\t\t}"]}], "deletions": [89, 90, 91, 92], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["\t\t\tif (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.END_OBJECT) {\n", "\t\t\t\tthrow ctxt.wrongTokenException(p, JsonToken.START_OBJECT, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n", "\t\t\t}"]}], "deletions": [89, 90, 91, 92], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["\tif (p.getCurrentToken() == JsonToken.FIELD_NAME) {\n", "\t\t\tthrow ctxt.wrongTokenException(p, JsonToken.FIELD_NAME, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n", "\t\t}"]}], "deletions": [89, 90, 91, 92], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 99, "new_lines": ["\t\tJsonDeserializer<Object> deserializer = ctxt.findRootValueDeserializer(ctxt.constructType(Object.class));\n"]}], "deletions": [89, 90, 91, 92], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            if (p.nextToken() != JsonToken.FIELD_NAME) {"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");", "            }"]}], "deletions": [89, 90, 91], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");", "            }"]}], "deletions": [89, 90, 91], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");", "            }"]}], "deletions": [89, 90, 91], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");", "            }"]}], "deletions": [89, 90, 91], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");", "            }"]}], "deletions": [89, 90, 91], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT && p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object and String that contains type id (for subtype of \" + baseTypeName() + \")\");"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT && p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object and String that contains type id (for subtype of \" + baseTypeName() + \")\");", "            }"]}], "deletions": [89, 90, 91], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 1", "            // Inserted line 2 for mutation 1"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 2", "            // Inserted line 2 for mutation 2"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 3", "            // Inserted line 2 for mutation 3"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 4", "            // Inserted line 2 for mutation 4"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 5", "            // Inserted line 2 for mutation 5"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 6", "            // Inserted line 2 for mutation 6"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 7", "            // Inserted line 2 for mutation 7"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 8", "            // Inserted line 2 for mutation 8"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 9", "            // Inserted line 2 for mutation 9"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 10", "            // Inserted line 2 for mutation 10"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 11", "            // Inserted line 2 for mutation 11"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 12", "            // Inserted line 2 for mutation 12"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 13", "            // Inserted line 2 for mutation 13"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 14", "            // Inserted line 2 for mutation 14"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 15", "            // Inserted line 2 for mutation 15"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 16", "            // Inserted line 2 for mutation 16"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 17", "            // Inserted line 2 for mutation 17"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 18", "            // Inserted line 2 for mutation 18"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 19", "            // Inserted line 2 for mutation 19"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 20", "            // Inserted line 2 for mutation 20"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 21", "            // Inserted line 2 for mutation 21"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 22", "            // Inserted line 2 for mutation 22"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 23", "            // Inserted line 2 for mutation 23"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 24", "            // Inserted line 2 for mutation 24"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            // Inserted line 1 for mutation 25", "            // Inserted line 2 for mutation 25"]}], "deletions": [], "[
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}][
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 91, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.END_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, or End Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}],

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.END_OBJECT && p.getCurrentToken() != JsonToken.VALUE_STRING) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, or End Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}],

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.END_OBJECT && p.getCurrentToken() != JsonToken.VALUE_STRING && p.getCurrentToken() != JsonToken.VALUE_NULL) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, End Object, or Null that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}],

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.END_OBJECT && p.getCurrentToken() != JsonToken.VALUE_STRING && p.getCurrentToken() != JsonToken.VALUE_NULL && p.getCurrentToken() != JsonToken.VALUE_TRUE) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, End Object, Null, or True that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}],

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.END_OBJECT && p.getCurrentToken() != JsonToken.VALUE_STRING && p.getCurrentToken() != JsonToken.VALUE_NULL && p.getCurrentToken() != JsonToken.VALUE_TRUE && p.getCurrentToken() != JsonToken.VALUE_FALSE) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, End Object, Null, True, or False that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}],

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.END_OBJECT && p.getCurrentToken() != JsonToken.VALUE_STRING && p.getCurrentToken() != JsonToken.VALUE_NULL && p.getCurrentToken() != JsonToken.VALUE_TRUE && p.getCurrentToken() != JsonToken.VALUE_FALSE && p.getCurrentToken() != JsonToken.VALUE_EMBEDDED_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, End Object, Null, True, False, or Embedded Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}],

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.END_OBJECT && p.getCurrentToken() != JsonToken.VALUE_STRING && p.getCurrentToken() != JsonToken.VALUE_NULL && p.getCurrentToken() != JsonToken.VALUE_TRUE && p.getCurrentToken() != JsonToken.VALUE_FALSE && p.getCurrentToken() != JsonToken.VALUE_EMBEDDED_OBJECT && p.getCurrentToken() != JsonToken.VALUE_NUMBER_INT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, End Object, Null, True, False, Embedded Object, or Integer that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}],

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.END_OBJECT && p.getCurrentToken() != JsonToken.VALUE_STRING && p.getCurrentToken() != JsonToken.VALUE_NULL && p.getCurrentToken() != JsonToken.VALUE_TRUE && p.getCurrentToken() != JsonToken.VALUE_FALSE && p.getCurrentToken() != JsonToken.VALUE_EMBEDDED_OBJECT && p.getCurrentToken() != JsonToken.VALUE_NUMBER_INT && p.getCurrentToken() != JsonToken.VALUE_NUMBER_FLOAT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, End Object, Null, True, False, Embedded Object, Integer, or Float that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}],

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.END_OBJECT && p.getCurrentToken() != JsonToken.VALUE_STRING && p.getCurrentToken() != JsonToken.VALUE_NULL && p.getCurrentToken() != JsonToken.VALUE_TRUE && p.getCurrentToken() != JsonToken.VALUE_FALSE && p.getCurrentToken() != JsonToken.VALUE_EMBEDDED_OBJECT && p.getCurrentToken() != JsonToken.VALUE_NUMBER_INT && p.getCurrentToken() != JsonToken.VALUE_NUMBER_FLOAT && p.getCurrentToken() != JsonToken.VALUE_TRUE) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, End Object, Null, True, False, Embedded Object, Integer, Float, or Boolean that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}],

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.END_OBJECT && p.getCurrentToken() != JsonToken.VALUE_STRING && p.getCurrentToken() != JsonToken.VALUE_NULL && p.getCurrentToken() != JsonToken.VALUE_TRUE && p.getCurrentToken() != JsonToken.VALUE_FALSE && p.getCurrentToken() != JsonToken.VALUE_EMBEDDED_OBJECT && p.getCurrentToken() != JsonToken.VALUE_NUMBER_INT && p.getCurrentToken() != JsonToken.VALUE_NUMBER_FLOAT && p.getCurrentToken() != JsonToken.VALUE_TRUE && p.getCurrentToken() != JsonToken.VALUE_FALSE) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, End Object, Null, True, False, Embedded Object, Integer, Float, Boolean that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}],

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.END_OBJECT && p.getCurrentToken() != JsonToken.VALUE_STRING && p.getCurrentToken() != JsonToken.VALUE_NULL && p.getCurrentToken() != JsonToken.VALUE_TRUE && p.getCurrentToken() != JsonToken.VALUE_FALSE && p.getCurrentToken() != JsonToken.VALUE_EMBEDDED_OBJECT && p.getCurrentToken() != JsonToken.VALUE_NUMBER_INT && p.getCurrentToken() != JsonToken.VALUE_NUMBER_FLOAT && p.getCurrentToken() != JsonToken.VALUE_TRUE && p.getCurrentToken() != JsonToken.VALUE_FALSE && p.getCurrentToken() != JsonToken.VALUE_TRUE) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, End Object, Null, True, False, Embedded Object, Integer, Float, Boolean that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}]
][
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != null) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}
,
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}
,
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}
,
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}
,
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName() + \");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}
]Here are 30 mutants of the target buggy lines:

1.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}]

2.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT && p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}]

3.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 91, "new_lines": ["            // Additional handling for expected token FIELD_NAME", "            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}]

4.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "deletions": [98], "insertions": []}]

5.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "modifications": [{"line_number": 92, "modified_line": "        if (p.getCurrentToken() == JsonToken.START_OBJECT && p.getCurrentToken() == JsonToken.FIELD_NAME) {"}]}]

6.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "modifications": [{"line_number": 92, "modified_line": "        if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {"}]}]

7.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "modifications": [{"line_number": 98, "modified_line": "        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {"}]}]

8.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "modifications": [{"line_number": 91, "modified_line": "            // Additional handling for expected token FIELD_NAME"}]}]

9.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "deletions": [89, 90, 91, 92, 98], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT && p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}]

10.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "deletions": [92], "insertions": []}]

11.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "deletions": [91], "insertions": []}]

12.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "deletions": [91, 92], "insertions": []}]

13.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "deletions": [89, 90, 91, 92, 98], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT && p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}]

14.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "deletions": [92, 98], "insertions": []}]

15.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "deletions": [91, 92, 98], "insertions": []}]

16.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "deletions": [91, 92], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}]

17.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "deletions": [91], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT && p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}]

18.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "deletions": [91, 92], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}]

19.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "deletions": [92, 98], "insertions": [{"line_number": 91, "new_lines": ["            // Additional handling for expected token FIELD_NAME", "            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}]

20.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "deletions": [91, 92], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}]

21.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "deletions": [91], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT && p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}]

22.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "deletions": [91, 92], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}]

23.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "deletions": [92, 98], "insertions": []}]

24.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "deletions": [91, 92, 98], "insertions": []}]

25.
[{"file_name": "com/fasterxml/jackson/databind[
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName() + \");"]}], "deletions": [89, 90, 91, 92], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());"]}], "deletions": [89, 90, 91, 92], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,"], ["91", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT) {"]}], "deletions": [89, 90, 91], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,"], ["91", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.FIELD_NAME) {"]}], "deletions": [89, 90, 91], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {"]}], "deletions": [89, 90, 91], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [], "deletions": [89, 90, 91], "modifications": [{"line_number": 92, "modified_line": "        if (p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.START_OBJECT) {"}]},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [], "deletions": [89, 90, 91], "modifications": [{"line_number": 92, "modified_line": "        if (p.getCurrentToken() == JsonToken.FIELD_NAME && p.getCurrentToken() == JsonToken.START_OBJECT) {"}]},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [], "deletions": [89, 90, 91], "modifications": [{"line_number": 92, "modified_line": "        if (p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.START_OBJECT) {"}]},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [], "deletions": [89, 90, 91], "modifications": [{"line_number": 92, "modified_line": "        if (p.getCurrentToken() == JsonToken.FIELD_NAME && p.getCurrentToken() == JsonToken.START_OBJECT) {"}]},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,"], ["91", "                    \"need JSON String that contains type id (for subtype of \"+baseTypeName()+\")\");"], ["92", "        }"], ["98", "//"]], "insertions": [], "deletions": [89, 90, 91], "modifications": [{"line_number": 92, "modified_line": "        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {"}]}

][
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}
,
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.END_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, or End Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}
,
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME || p.getCurrentToken() != JsonToken.END_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, or End Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}
,
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.END_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, or End Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}
,
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME || p.getCurrentToken() != JsonToken.END_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, or End Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}
,
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME || p.getCurrentToken() != JsonToken.END_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, or End Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}
,
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.END_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, or End Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}
,
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME || p.getCurrentToken() != JsonToken.END_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, or End Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}
,
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.END_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, or End Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}
,
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME || p.getCurrentToken() != JsonToken.END_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, or End Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}
,
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.END_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, or End Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}
,
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME || p.getCurrentToken() != JsonToken.END_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, or End Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}
,
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.END_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, or End Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}
,
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME || p.getCurrentToken() != JsonToken.END_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, or End Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}
,
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.END_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, or End Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}
,
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME || p.getCurrentToken() != JsonToken.END_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, or End Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}
,
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.END_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, or End Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}
,
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME || p.getCurrentToken() != JsonToken.END_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, or End Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}
,
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.END_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object, String, or End Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}]}
,
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT[
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_ARRAY) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_ARRAY) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_ARRAY) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", 
 "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], 
 "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], 
 "deletions": [89, 90, 91], 
 "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", 
 "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], 
 "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], 
 "deletions": [89, 90, 91], 
 "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", 
 "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], 
 "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], 
 "deletions": [89, 90, 91], 
 "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", 
 "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], 
 "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], 
 "deletions": [89, 90, 91], 
 "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", 
 "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], 
 "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], 
 "deletions": [89, 90, 91], 
 "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", 
 "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], 
 "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], 
 "deletions": [], 
 "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", 
 "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], 
 "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());"]}], 
 "deletions": [], 
 "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", 
 "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], 
 "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], 
 "deletions": [], 
 "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", 
 "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], 
 "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], 
 "deletions": [], 
 "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", 
 "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], 
 "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], 
 "deletions": [89, 90, 91], 
 "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", 
 "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], 
 "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());"]}], 
 "deletions": [89, 90, 91], 
 "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", 
 "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], 
 "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], 
 "deletions": [89, 90, 91], 
 "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}
]Here are 30 mutants of the target buggy lines:

1.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []}]

2.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []}]

3.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []}]

4.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []}]

5.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT && p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 92], "modifications": []}]

6.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 92], "modifications": []}]

7.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT && p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 92], "modifications": []}]

8.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 92], "modifications": []}]

9.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT && p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 92], "modifications": []}]

10.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 92], "modifications": []}]

11.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 92], "modifications": []}]

12.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 92], "modifications": []}]

13.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 92], "modifications": []}]

14.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 92], "modifications": []}]

15.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 92], "modifications": []}]

16.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 92], "modifications": []}]

17.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 92], "modifications": []}]

18.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 92], "modifications": []}]

19.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 92], "modifications": []}]

20.
[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "FAULT_OF[
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}
]```
[
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.FIELD_NAME || p.getCurrentToken() != JsonToken.START_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object and String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.FIELD_NAME) && p.getCurrentToken() != JsonToken.START_OBJECT {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object and String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []}
]
```[
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME || p.getCurrentToken() == JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME || p.getCurrentToken() == JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME || p.getCurrentToken() == JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}
][
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}
][
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p```python
[
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());"]}], "deletions": [89, 90, 91, 98], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());"]}], "deletions": [89, 90, 91, 92], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());"]}], "deletions": [89, 90, 91, 98], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());"]}], "deletions": [89, 90, 91, 92], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 98], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []}
]
```[
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}
]