[
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603], "modifications": [{"line_number": 583, "modified_line": "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt)) && bean.getClass() == _beanType.getRawClass()) {"}, {"line_number": 601, "modified_line": "                        return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603], "modifications": [{"line_number": 583, "modified_line": "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt)) && bean.getClass() == _beanType.getRawClass()) {"}, {"line_number": 601, "modified_line": "                        return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603], "modifications": [{"line_number": 583, "modified_line": "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt)) && bean.getClass() == _beanType.getRawClass()) {"}, {"line_number": 601, "modified_line": "                        return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603], "modifications": [{"line_number": 583, "modified_line": "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt)) && bean.getClass() == _beanType.getRawClass()) {"}, {"line_number": 601, "modified_line": "                        return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603], "modifications": [{"line_number": 583, "modified_line": "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt)) && bean.getClass() == _beanType.getRawClass()) {"}, {"line_number": 601, "modified_line": "                        return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603], "modifications": [{"line_number": 583, "modified_line": "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt)) && bean.getClass() == _beanType.getRawClass()) {"}, {"line_number": 601, "modified_line": "                        return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603], "modifications": [{"line_number": 583, "modified_line": "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt)) && bean.getClass() == _beanType.getRawClass()) {"}, {"line_number": 601, "modified_line": "                        return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603], "modifications": [{"line_number": 583, "modified_line": "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt)) && bean.getClass() == _beanType.getRawClass()) {"}, {"line_number": 601, "modified_line": "                        return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603], "modifications": [{"line_number": 583, "modified_line": "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt)) && bean.getClass() == _beanType.getRawClass()) {"}, {"line_number": 601, "modified_line": "                        return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586",[
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (!buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object newBean;"], ["586", "                    try {"], ["587", "                        newBean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (newBean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, newBean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (IOException e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (IOException e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        return;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (IOException e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        return null;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        return null;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        return;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (IOException e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (IOException e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        return;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (IOException e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (IOException e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        return;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (!buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt)) && t != null) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "if (bean.getClass() != _beanType.getRawClass() && t != null) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt)) && t != null) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean != null && bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with wrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Unable to create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Error: Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Error: Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Unable to create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Issue: Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Warning: Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Error: Can not create polymorphic instances with wrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with wrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Issue: Can not create polymorphic instances with wrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599],[
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (!buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [583], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().isInstance(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean instanceof _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["599", "                        ctxt.reportMappingException(\"Error: Can not create polymorphic instances with unwrapped values\");"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 599, "modified_line": "                        ctxt.reportMappingException(\"Error: Can not create polymorphic instances with unwrapped values\");"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 599, "modified_line": "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["599", "                        ctxt.reportMappingException(\"Unable to create polymorphic instances with unwrapped values\");"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 599, "modified_line": "                        ctxt.reportMappingException(\"Unable to create polymorphic instances with unwrapped values\");"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Error: Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Invalid bean class for polymorphic instances with unwrapped values\");"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "                    if (bean.getClass().equals(_beanType.getRawClass())) {"}, {"line_number": 599, "modified_line": "                        ctxt.reportMappingException(\"Invalid bean class for polymorphic instances with unwrapped values\");"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Incompatible bean class with unwrapped values\");"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "                    if (bean.getClass() == _beanType.getRawClass()) {"}, {"line_number": 599, "modified_line": "                        ctxt.reportMappingException(\"Incompatible bean class with unwrapped values\");"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Mismatched bean type for unwrapped values\");"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"}, {"line_number": 599, "modified_line": "                        ctxt.reportMappingException(\"Mismatched bean type for unwrapped values\");"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Bean class does not match expected type for unwrapped values\");"]], "insertions": [], "deletions": [599], "modifications": [{"line_number": 598, "modified_line": "                    if (bean.getClass() != _beanType.getRawClass()) {"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Inconsistent bean class for unwrapped values\");"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"}, {"line_number": 599, "modified_line": "                        ctxt.reportMappingException(\"Inconsistent bean class for unwrapped values\");"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Unexpected bean class for unwrapped values\");"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "                    if (bean.getClass() == _beanType.getRawClass()) {"}, {"line_number": 599, "modified_line": "                        ctxt.reportMappingException(\"Unexpected bean class for unwrapped values\");"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Inappropriate bean class for unwrapped values\");"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "                    if (bean.getClass() != _beanType.getRawClass()) {"}, {"line_number": 599, "modified_line": "                        ctxt.reportMappingException(\"Inappropriate bean class for unwrapped values\");"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) {"]], "insertions": [{"line_number": 599, "new_lines": ["                        return null;"]}], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "                    if (bean.getClass().equals(_beanType.getRawClass()) {"}]}
][
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().getName().equals(_beanType.getRawClass().getName())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().getSimpleName().equals(_beanType.getRawClass().getSimpleName())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().getCanonicalName().equals(_beanType.getRawClass().getCanonicalName())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().getSimpleName().equals(_beanType.getRawClass().getSimpleName())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().getTypeName().equals(_beanType.getRawClass().getTypeName())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().getTypeParameters().equals(_beanType.getRawClass().getTypeParameters())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().getTypeParameters()[0].equals(_beanType.getRawClass().getTypeParameters()[0])) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().getDeclaredFields().length == _beanType.getRawClass().getDeclaredFields().length) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (Objects.equals(bean.getClass(), _beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().getSuperclass().equals(_beanType.getRawClass().getSuperclass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [598], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                    }"], ["601", "                    return null;"]], "insertions": [], "deletions": [601], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                    }"], ["601", "                    return null;"]], "insertions": [], "deletions": [600], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                    }"], ["601", "                    return null;"]], "insertions": [], "deletions": [600], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                    }"], ["601", "                    return null;"]], "insertions": [{"line_number": 598, "new_lines": ["                        // Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                    }"], ["601", "                    return null;"]], "insertions": [{"line_number": 601, "new_lines": ["                        // Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                    }"], ["601", "                    return null;"]], "insertions": [{"line_number": 600, "new_lines": ["                        // Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                    }"], ["601", "                    return null;"]], "insertions": [{"line_number": 599, "new_lines": ["                        // Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                    }"], ["601", "                    return null;"]], "insertions": [{"line_number": 599, "new_lines": ["                        // Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                    }"], ["601", "                    return null;"]], "insertions": [{"line_number": 598, "new_lines": ["                        // Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                    }"], ["601", "                    return null;"]], "insertions": [{"line_number": 598, "new_lines": ["                        // Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                    }"], ["601", "                    return null;"]], "insertions": [{"line_number": 601, "new_lines": ["                        // Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                    }"], ["601", "                    return null;"]], "insertions": [{"line_number": 600, "new_lines": ["                        // Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                    }"], ["601", "                    return null;"]], "insertions": [{"line_number": 599, "new_lines": ["                        // Inserted line to fix the bug"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [{"line_number": 601, "new_lines": ["                        // Inserted line to fix the bug"]}], "deletions": [600], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [{"line_number": 600, "new_lines": ["                        // Inserted line to fix the bug"]}], "deletions": [601], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [{"line_number": 599, "new_lines": ["                        // Inserted line to fix the bug"]}], "deletions": [600], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [{"line_number": 600, "new_lines": ["                        // Inserted line to fix the bug"]}], "deletions": [601], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"],[
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [597], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [597], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [597], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) {"]], "insertions": [{"line_number": 599, "new_lines": ["                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");", "                        return null;"]}], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!(bean.getClass() == _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["599", "                        ctxt.reportMappingException(\"Can create polymorphic instances with unwrapped values\");"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"]], "insertions": [{"line_number": 598, "new_lines": ["                        // Adding a comment for clarity\n"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"]], "insertions": [{"line_number": 599, "new_lines": ["                        // Inserting a comment to explain the exception\n"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"]], "insertions": [{"line_number": 598, "new_lines": ["                        // Adding a comment for clarification\n"]}], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"]], "insertions": [], "deletions": [598], "modifications": []}
][
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [599], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []}
]```python
[
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/j[
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!(bean.getClass() != _beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [["598"]], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!(bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!(bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!(bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!(bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!(bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!(bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!(bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!(bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!(bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"]], "insertions": [], "deletions": [], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["587", "                        bean = creator.build(ctxt, buffer);"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 587, "modified_line": "                        bean = creator.build(ctxt, buffer, _beanType.getRawClass());"}]},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["587", "                        bean = creator.build(ctxt, buffer);"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "                    if (bean.getClass() != _beanType.getRawClass()) {"}]},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "                    if (bean.getClass() != _beanType.getRawClass()) {"}]},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "                    if (bean.getClass() != _beanType.getRawClass()) {"}]},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "                    if (bean.getClass() != _beanType.getRawClass()) {"}]},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "                    if (bean.getClass() != _beanType.getRawClass()) {"}]},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "                    if (bean.getClass() != _beanType.getRawClass()) {"}]},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "                    if (bean.getClass() != _beanType.getRawClass()) {"}]},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "                    if (bean.getClass() != _beanType.getRawClass()) {"}]},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "                    if (bean.getClass() != _beanType.getRawClass()) {"}]}
][
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!(bean.getClass().equals(_beanType.getRawClass()))) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!(bean.getClass() != _beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!(bean.getClass().equals(_beanType.getRawClass()))) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!(bean.getClass() != _beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())")], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass())"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!(bean.getClass().equals(_beanType.getRawClass()))")], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass())"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())")], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass())"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!(bean.getClass().equals(_beanType.getRawClass()))")], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass())"]], "insertions": [], "deletions": [598], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (!buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) {"]], "insertions": [], "deletions": [584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"]], "insertions": [], "deletions": [584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["598", "                    if (!bean.getClass().equals(_beanType.getRawClass()) {"]], "insertions": [], "deletions": [584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) {"]], "insertions": [], "deletions": [584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (!buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"]], "insertions": [], "deletions": [584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (!buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["598", "                    if (!bean.getClass().equals(_beanType.getRawClass()) {"]], "insertions": [], "deletions": [584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) {"]], "insertions": [], "deletions": [584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (!buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) {"]], "insertions": [], "deletions": [584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["598", "                    if (!bean.getClass().equals(_beanType.getRawClass()) {"]], "insertions": [], "deletions": [584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["598", "                    if (!bean.getClass().equals(_beanType.getRawClass()) {"]], "insertions": [], "deletions": [584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (!buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        break;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (null != buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, !creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt)) == null) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt)) != null) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt)) == true) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt)) != true) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt)) == false) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt)) == false) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt)) != false) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},

{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt)) == 0) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []}
][
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (!buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (!buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (!buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (!buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (!buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer[
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) && true) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) || false) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) && bean != null) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) || bean == null) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) && bean != 0) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) || bean != null) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) || bean == 0) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) && bean == null) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) && true == true) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []}
][
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": [{"line_number": 599, "modified_line": "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\"); // Mutation 1"}]},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": [{"line_number": 599, "modified_line": "                        ctxt.reportMappingException(\"Failed to create polymorphic instances with unwrapped values\"); // Mutation 2"}]},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": [{"line_number": 599, "modified_line": "                        ctxt.reportMappingException(\"Failed to create instances with unwrapped values\"); // Mutation 3"}]},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": [{"line_number": 599, "modified_line": "                        ctxt.reportMappingException(\"Failed to create instances with unwrapped properties\"); // Mutation 4"}]},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": [{"line_number": 599, "modified_line": "                        ctxt.reportMappingException(\"Error creating polymorphic instances with unwrapped values\"); // Mutation 5"}]},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": [{"line_number": 599, "modified_line": "                        ctxt.reportMappingException(\"Failed to create polymorphic instances with unwrapped properties\"); // Mutation 6"}]},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": [{"line_number": 599, "modified_line": "                        ctxt.reportMappingException(\"Failed to create instances with unwrapped values\"); // Mutation 7"}]},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": [{"line_number": 599, "modified_line": "                        ctxt.reportMappingException(\"Failed to create polymorphic instances with unwrapped values\"); // Mutation 8"}]},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": [{"line_number": 599, "modified_line": "                        ctxt.reportMappingException(\"Error creating polymorphic instances with unwrapped values\"); // Mutation 9"}]},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": [{"line_number": 599, "modified_line": "                        ctxt.reportMappingException(\"Failed to create polymorphic instances with unwrapped properties\"); // Mutation 10"}]},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": [{"line_number": 599, "modified_line": "                        ctxt.reportMappingException(\"Failed to create instances with unwrapped values\"); // Mutation 11"}]},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                       [
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "[
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "if (!(bean.getClass() != _beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "if (!(bean.getClass() != _beanType.getRawClass())) {"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "if (bean.getClass() == _beanType.getRawClass()) {"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != null) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "if (bean.getClass() != null) {"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() == null) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "if (bean.getClass() == null) {"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean != null) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "if (bean != null) {"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean == null) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "if (bean == null) {"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "if (bean == _beanType.getRawClass()) {"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "if (bean != _beanType.getRawClass()) {"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "if (bean.getClass() != null) {"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "if (!bean.getClass().equals(_beanType.getRawClass())) {"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 598, "modified_line": "if (bean.getClass().equals(_beanType.getRawClass())) {"}]},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e,[
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass()) && bean != null) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass() || bean == null) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "}"]], "insertions": [], "deletions": [597], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "t = p.nextToken();"], ["585", "Object bean;"], ["586", "try {"], ["587", "bean = creator.build(ctxt, buffer);"], ["588", "} catch (Exception e) {"], ["589", "wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "continue;"], ["591", "}"], ["592", "while (t == JsonToken.FIELD_NAME) {"], ["593", "p.nextToken();"], ["594", "tokens.copyCurrentStructure(p);"], ["595", "t = p.nextToken();"], ["596", "}"], ["597", "tokens.writeEndObject();"], ["598", "if (bean.getClass().equals(_beanType.getRawClass()) && bean != null) {"], ["599", "ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "return null;"], ["601", "}"], ["602", "return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "}"]], "insertions": [], "deletions": [584], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "t = p.nextToken();"], ["585", "Object bean;"], ["586", "try {"], ["587", "bean = creator.build(ctxt, buffer);"], ["588", "} catch (Exception e) {"], ["589", "wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "continue;"], ["591", "}"], ["592", "while (t == JsonToken.FIELD_NAME) {"], ["593", "p.nextToken();"], ["594", "tokens.copyCurrentStructure(p);"], ["595", "t = p.nextToken();"], ["596", "}"], ["597", "tokens.writeEndObject();"], ["598", "if (bean.getClass().equals(_beanType.getRawClass()) || bean == null) {"], ["599", "ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "return null;"], ["601", "}"], ["602", "return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "}"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "t = p.nextToken();"], ["585", "Object bean;"], ["586", "try {"], ["587", "bean = creator.build(ctxt, buffer);"], ["588", "} catch (Exception e) {"], ["589", "wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "continue;"], ["591", "}"], ["592", "while (t == JsonToken.FIELD_NAME) {"], ["593", "p.nextToken();"], ["594", "tokens.copyCurrentStructure(p);"], ["595", "t = p.nextToken();"], ["596", "}"], ["597", "tokens.writeEndObject();"], ["598", "if (bean.getClass().equals(_beanType.getRawClass()) || bean != null) {"], ["599", "ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "return null;"], ["601", "}"], ["602", "return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "}"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "t = p.nextToken();"], ["585", "Object bean;"], ["586", "try {"], ["587", "bean = creator.build(ctxt, buffer);"], ["588", "} catch (Exception e) {"], ["589", "wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "continue;"], ["591", "}"], ["592", "while (t == JsonToken.FIELD_NAME) {"], ["593", "p.nextToken();"], ["594", "tokens.copyCurrentStructure(p);"], ["595", "t = p.nextToken();"], ["596", "}"], ["597", "tokens.writeEndObject();"], ["598", "if (!bean.getClass().equals(_beanType.getRawClass()) && bean != null) {"], ["599", "ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "return null;"], ["601", "}"], ["602", "return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "}"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "t = p.nextToken();"], ["585", "Object bean;"], ["586", "try {"], ["587", "bean = creator.build(ctxt, buffer);"], ["588", "} catch (Exception e) {"], ["589", "wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "continue;"], ["591", "}"], ["592", "while (t == JsonToken.FIELD_NAME) {"], ["593", "p.nextToken();"], ["594", "tokens.copyCurrentStructure(p);"], ["595", "t = p.nextToken();"], ["596", "}"], ["597", "tokens.writeEndObject();"], ["598", "if (!bean.getClass().equals(_beanType.getRawClass()) || bean == null) {"], ["599", "ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "return null;"], ["601", "}"], ["602", "return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "}"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "t = p.nextToken();"], ["585", "Object bean;"], ["586", "try {"], ["587", "bean = creator.build(ctxt, buffer);"], ["588", "} catch (Exception e) {"], ["589", "wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "continue;"], ["591", "}"], ["592", "while (t == JsonToken.FIELD_NAME) {"], ["593", "p.nextToken();"], ["594", "tokens.copyCurrentStructure(p);"], ["595", "t = p.nextToken();"], ["596", "}"], ["597", "tokens.writeEndObject();"], ["598", "if (!bean.getClass().equals(_beanType.getRawClass()) && bean == null) {"], ["599", "ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "return null;"], ["601", "}"], ["602", "return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "}"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "t = p.nextToken();"], ["585", "Object bean;"], ["586", "try {"], ["587", "bean = creator.build(ctxt, buffer);"], ["588", "} catch (Exception e) {"], ["589", "wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "continue;"], ["591", "}"], ["592", "while (t == JsonToken.FIELD_NAME) {"], ["593", "p.nextToken();"], ["594", "tokens.copyCurrentStructure(p);"], ["595", "t = p.nextToken();"], ["596", "}"], ["597", "tokens.writeEndObject();"], ["598", "if (!bean.getClass().equals(_beanType.getRawClass()) || bean != null) {"], ["599", "ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "return null;"], ["601", "}"], ["602", "return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "}"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "t = p.nextToken();"], ["585", "Object bean;"], ["586", "try {"], ["587", "bean = creator.build(ctxt, buffer);"], ["588", "} catch (Exception e) {"], ["589", "wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "continue;"], ["591", "}"], ["592", "while (t == JsonToken.FIELD_NAME) {"], ["593", "p.nextToken();"], ["594", "tokens.copyCurrentStructure(p);"], ["595", "t = p.nextToken();"], ["596", "}"], ["597", "tokens.writeEndObject();"], ["598", "if (bean.getClass().equals(_beanType.getRawClass()) && bean == null) {"], ["599", "ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "return null;"], ["601", "}"], ["602", "return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "}"]], "insertions": [], "deletions": [598], "modifications": []}
][
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Error: Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Error: Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Warning: Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Please note: Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Warning: Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Note: Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Ensure: Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Important: Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"CAUTION: Cannot create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": []}
]```python
[
    # Mutant 1: Change the comparison operator from != to ==
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},
    
    # Mutant 2: Change the comparison operator from != to <
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() < _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 3: Change the comparison operator from != to !=
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 4: Change the comparison operator from != to <=
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() <= _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 5: Change the comparison operator from != to >
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() > _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 6: Change the comparison operator from != to >=
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() >= _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 7: Negate the condition by adding a '!'
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!(bean.getClass() != _beanType.getRawClass())) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 8: Change the comparison operator from != to !=
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 9: Change the comparison operator from != to <
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() < _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 10: Change the comparison operator from != to <=
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() <= _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},
    
    # Mutant 11: Change the comparison operator from != to >
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() > _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 12: Change the comparison operator from != to >=
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() >= _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 13: Negate the condition by adding a '!'
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!(bean.getClass() != _beanType.getRawClass())) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 14: Change the comparison operator from != to ==
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 15: Change the comparison operator from != to <
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() < _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 16: Change the comparison operator from != to <=
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() <= _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 17: Change the comparison operator from != to >
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() > _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 18: Change the comparison operator from != to >=
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() >= _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 19: Negate the condition by adding a '!'
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!(bean.getClass() != _beanType.getRawClass())) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 20: Change the comparison operator from != to ==
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 21: Change the comparison operator from != to <
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() < _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 22: Change the comparison operator from != to <=
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() <= _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 23: Change the comparison operator from != to >
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() > _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 24: Change the comparison operator from != to >=
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() >= _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 25: Negate the condition by adding a '!'
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (!(bean.getClass() != _beanType.getRawClass())) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 26: Change the comparison operator from != to ==
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 27: Change the comparison operator from != to <
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() < _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 28: Change the comparison operator from != to <=
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() <= _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 29: Change the comparison operator from != to >
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() > _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []},

    # Mutant 30: Change the comparison operator from != to >=
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["598", "                    if (bean.getClass() >= _beanType.getRawClass()) {"]], "insertions": [], "deletions": [], "modifications": []}
]
```[
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [599], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [597], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [602], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [603], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [604], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [585], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [586], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [588], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [589], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [[
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (!buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() != _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [], "modifications": [][
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (Objects.equals(bean.getClass(), _beanType.getRawClass())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().getCanonicalName().equals(_beanType.getRawClass().getCanonicalName())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []},
{"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", "target_lines": [["583", "                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {"], ["584", "                    t = p.nextToken();"], ["585", "                    Object bean;"], ["586", "                    try {"], ["587", "                        bean = creator.build(ctxt, buffer);"], ["588", "                    } catch (Exception e) {"], ["589", "                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);"], ["590", "                        continue;"], ["591", "                    }"], ["592", "                    while (t == JsonToken.FIELD_NAME) {"], ["593", "                        p.nextToken();"], ["594", "                        tokens.copyCurrentStructure(p);"], ["595", "                        t = p.nextToken();"], ["596", "                    }"], ["597", "                    tokens.writeEndObject();"], ["598", "                    if (bean.getClass().getSimpleName().equals(_beanType.getRawClass().getSimpleName())) {"], ["599", "                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");"], ["600", "                        return null;"], ["601", "                    }"], ["602", "                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);"], ["603", "                }"]], "insertions": [], "deletions": [598], "modifications": []}
]```python
[
    # Mutant 1: Changing the comparison operator from != to ==
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    if (bean.getClass() == _beanType.getRawClass()) {"]], 
    "insertions": [], 
    "deletions": [], 
    "modifications": []},
    
    # Mutant 2: Changing the comparison operator from != to ===
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    if (bean.getClass() === _beanType.getRawClass()) {"]], 
    "insertions": [], 
    "deletions": [], 
    "modifications": []},
    
    # Mutant 3: Changing the comparison operator from != to <
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    if (bean.getClass() < _beanType.getRawClass()) {"]], 
    "insertions": [], 
    "deletions": [], 
    "modifications": []},
    
    # Mutant 4: Changing the comparison operator from != to <=
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    if (bean.getClass() <= _beanType.getRawClass()) {"]], 
    "insertions": [], 
    "deletions": [], 
    "modifications": []},
    
    # Mutant 5: Changing the comparison operator from != to >
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    if (bean.getClass() > _beanType.getRawClass()) {"]], 
    "insertions": [], 
    "deletions": [], 
    "modifications": []},
    
    # Mutant 6: Changing the comparison operator from != to >=
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    if (bean.getClass() >= _beanType.getRawClass()) {"]], 
    "insertions": [], 
    "deletions": [], 
    "modifications": []},
    
    # Mutant 7: Adding a null check before comparing bean's class with _beanType.getRawClass()
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    if (bean != null && bean.getClass() != _beanType.getRawClass()) {"]], 
    "insertions": [], 
    "deletions": [], 
    "modifications": []},
    
    # Mutant 8: Removing the comparison with _beanType.getRawClass() and returning bean directly
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    return bean;"]], 
    "insertions": [], 
    "deletions": [[599, 600]], 
    "modifications": []},
    
    # Mutant 9: Changing the comparison operator from != to equals() method
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    if (!bean.getClass().equals(_beanType.getRawClass())) {"]], 
    "insertions": [], 
    "deletions": [], 
    "modifications": []},
    
    # Mutant 10: Replacing the getClass() method call with instanceof operator 
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    if (!(bean instanceof _beanType.getRawClass())) {"]], 
    "insertions": [], 
    "deletions": [], 
    "modifications": []},
    
    # Mutant 11: Using a ternary operator to check the class equality
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    return (bean.getClass().equals(_beanType.getRawClass()) ? bean : null);"]], 
    "insertions": [], 
    "deletions": [], 
    "modifications": []},
    
    # Mutant 12: Adding a log statement before the comparison
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    System.out.println(\"Checking bean's class equality...\");"]], 
    "insertions": [], 
    "deletions": [], 
    "modifications": []},
    
    # Mutant 13: Changing the comparison operator from != to !=
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass() != null) {"]], 
    "insertions": [], 
    "deletions": [], 
    "modifications": []},
    
    # Mutant 14: Adding a new condition to check for a different class type
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass() && bean instanceof AnotherClass) {"]], 
    "insertions": [], 
    "deletions": [], 
    "modifications": []},
    
    # Mutant 15: Changing the comparison operator from != to !=
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass() != false) {"]], 
    "insertions": [], 
    "deletions": [], 
    "modifications": []},
    
    # Mutant 16: Adding a condition to handle null _beanType.getRawClass() check
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass() || _beanType.getRawClass() == null) {"]], 
    "insertions": [], 
    "deletions": [], 
    "modifications": []},
    
    # Mutant 17: Changing the comparison operator from != to !=
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass() != true) {"]], 
    "insertions": [], 
    "deletions": [], 
    "modifications": []},
    
    # Mutant 18: Adding a new condition to handle a different class type check
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass() || bean instanceof AnotherClass) {"]], 
    "insertions": [], 
    "deletions": [], 
    "modifications": []},
    
    # Mutant 19: Changing the comparison operator from != to !=
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass() != null) {"]], 
    "insertions": [], 
    "deletions": [], 
    "modifications": []},
    
    # Mutant 20: Adding a log statement after the comparison
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass()) {", "                        System.out.println(\"Different classes detected!\");"]], 
    "insertions": [], 
    "deletions": [], 
    "modifications": []},
    
    # Mutant 21: Changing the comparison operator from != to !=
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass() != false) {"]], 
    "insertions": [], 
    "deletions": [], 
    "modifications": []},
    
    # Mutant 22: Adding a condition to handle null bean.getClass() check
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    if ((bean.getClass() != _beanType.getRawClass()) && (bean.getClass() != null)) {"]], 
    "insertions": [], 
    "deletions": [], 
    "modifications": []},
    
    # Mutant 23: Changing the comparison operator from != to !=
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    if (bean.getClass() != _beanType.getRawClass() != true) {"]], 
    "insertions": [], 
    "deletions": [], 
    "modifications": []},
    
    # Mutant 24: Adding a new condition to handle a different class type check
    {"file_name": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java", 
    "target_lines": [["598", "                    if