###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['            if (startTag.isSelfClosing()) {', '                tokeniser.emit(new Token.StartTag(startTag.tagName()));', '                tokeniser.emit(new Token.EndTag(startTag.tagName()));', '            } else {', '                tokeniser.emit(new Token.EndTag(el.tagName()));', '            }']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['            if (startTag != null && startTag.isSelfClosing()) {', '                tokeniser.emit(new Token.StartTag(startTag.tagName()));', '                tokeniser.emit(new Token.EndTag(startTag.tagName()));', '            } else {', '                tokeniser.emit(new Token.EndTag(el.tagName()));', '            }']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['            if (startTag != null && startTag.isSelfClosing()) {', '                tokeniser.emit(new Token.StartTag(startTag.tagName()));', '                tokeniser.emit(new Token.EndTag(startTag.tagName()));', '            } else {', '                tokeniser.emit(new Token.EndTag(el.tagName()));', '            }']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['if (startTag != null && startTag.isSelfClosing()) {', 'tokeniser.emit(new Token.StartTag(startTag.tagName()));', 'tokeniser.emit(new Token.EndTag(startTag.tagName()));', '} else {', 'tokeniser.emit(new Token.EndTag(el.tagName()));']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['if (startTag != null && startTag.isSelfClosing()) {', 'tokeniser.emit(new Token.StartTag(startTag.tagName()));', 'tokeniser.emit(new Token.EndTag(startTag.tagName()));', '} else if (el != null) {', 'tokeniser.emit(new Token.EndTag(el.tagName()));']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['if (startTag != null && startTag.isSelfClosing()) {', 'tokeniser.emit(new Token.StartTag(startTag.tagName()));', 'tokeniser.emit(new Token.EndTag(startTag.tagName()));', '} else {', 'tokeniser.emit(new Token.EndTag(el.tagName()));']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['if (startTag != null && startTag.isSelfClosing()) {', 'tokeniser.emit(new Token.StartTag(startTag.tagName()));', 'tokeniser.emit(new Token.EndTag(startTag.tagName()));', '} else if (el != null) {', 'tokeniser.emit(new Token.EndTag(el.tagName()));']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['if (startTag != null && startTag.isSelfClosing()) {', 'tokeniser.emit(new Token.StartTag(startTag.tagName()));', 'tokeniser.emit(new Token.EndTag(startTag.tagName()));', '} else if (el != null) {', 'tokeniser.emit(new Token.EndTag(el.tagName()));']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['if (startTag != null && startTag.isSelfClosing()) {', 'tokeniser.emit(new Token.StartTag(startTag.tagName()));', 'tokeniser.emit(new Token.EndTag(startTag.tagName()));', '} else if (el != null) {', 'tokeniser.emit(new Token.EndTag(el.tagName()));']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['if (startTag != null && startTag.isSelfClosing()) {', 'tokeniser.emit(new Token.StartTag(startTag.tagName()));', 'tokeniser.emit(new Token.EndTag(startTag.tagName()));', '} else if (el != null) {', 'tokeniser.emit(new Token.EndTag(el.tagName()));']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['if (startTag != null && startTag.isSelfClosing()) {', 'tokeniser.emit(new Token.StartTag(startTag.tagName()));', 'tokeniser.emit(new Token.EndTag(startTag.tagName()));', '} else if (el != null) {', 'tokeniser.emit(new Token.EndTag(el.tagName()));']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['if (startTag != null && startTag.isSelfClosing()) {', 'tokeniser.emit(new Token.StartTag(startTag.tagName()));', 'tokeniser.emit(new Token.EndTag(startTag.tagName()));', '} else if (el != null) {', 'tokeniser.emit(new Token.EndTag(el.tagName()));']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['if (startTag != null && startTag.isSelfClosing()) {', 'tokeniser.emit(new Token.StartTag(startTag.tagName()));', 'tokeniser.emit(new Token.EndTag(startTag.tagName()));', '} else if (el != null) {', 'tokeniser.emit(new Token.EndTag(el.tagName()));']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['if (startTag != null && startTag.isSelfClosing()) {', 'tokeniser.emit(new Token.StartTag(startTag.tagName()));', 'tokeniser.emit(new Token.EndTag(startTag.tagName()));']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['if (startTag != null && startTag.isSelfClosing()) {', 'tokeniser.emit(new Token.StartTag(startTag.tagName()));', 'tokeniser.emit(new Token.EndTag(startTag.tagName()));']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['if (startTag != null && startTag.isSelfClosing()) {', 'tokeniser.emit(new Token.StartTag(startTag.tagName()));', 'tokeniser.emit(new Token.EndTag(startTag.tagName()));']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['if (startTag != null && startTag.isSelfClosing()) {', 'tokeniser.emit(new Token.StartTag(startTag.tagName()));', 'tokeniser.emit(new Token.EndTag(startTag.tagName()));']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['if (startTag != null && startTag.isSelfClosing()) {', 'tokeniser.emit(new Token.StartTag(startTag.tagName()));', 'tokeniser.emit(new Token.EndTag(startTag.tagName()));']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['if (startTag != null && startTag.isSelfClosing()) {', 'tokeniser.emit(new Token.StartTag(startTag.tagName()));', 'tokeniser.emit(new Token.EndTag(startTag.tagName()));']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['if (startTag != null && startTag.isSelfClosing()) {', 'tokeniser.emit(new Token.StartTag(startTag.tagName()));', 'tokeniser.emit(new Token.EndTag(startTag.tagName()));']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['if (startTag != null && startTag.isSelfClosing()) {', 'tokeniser.emit(new Token.StartTag(startTag.tagName()));', 'tokeniser.emit(new Token.EndTag(startTag.tagName()));']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['if (startTag != null && startTag.isSelfClosing()) {', 'tokeniser.emit(new Token.StartTag(startTag.tagName()));', 'tokeniser.emit(new Token.EndTag(startTag.tagName()));']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['if (startTag != null && startTag.isSelfClosing()) {', 'tokeniser.emit(new Token.StartTag(startTag.tagName()));', 'tokeniser.emit(new Token.EndTag(startTag.tagName()));']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['if (startTag != null && startTag.isSelfClosing()) {', 'tokeniser.emit(new Token.StartTag(startTag.tagName()));', 'tokeniser.emit(new Token.EndTag(startTag.tagName()));']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['if (startTag != null && startTag.isSelfClosing()) {', 'tokeniser.emit(new Token.StartTag(startTag.tagName()));', 'tokeniser.emit(new Token.EndTag(startTag.tagName()));']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 162, 'new_lines': ['if (startTag != null && startTag.isSelfClosing()) {', 'tokeniser.emit(new Token.StartTag(startTag.tagName()));', 'tokeniser.emit(new Token.EndTag(startTag.tagName()));']}]}]


