###Fix:
[{'file_name': 'com/google/javascript/jscomp/FunctionTypeBuilder.java', 'modifications': [{'line_number': 184, 'modified_line': 'if (!type.isSubtype(typeRegistry.getNativeType(OBJECT_TYPE))) {'}]}]

###Fix:
[]

###Fix:
[]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/FunctionTypeBuilder.java', 'modifications': [{'line_number': 184, 'modified_line': 'if (!type.isSubtype(typeRegistry.getNativeType(OBJECT_TYPE))) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/FunctionTypeBuilder.java', 'modifications': [{'line_number': 184, 'modified_line': 'public boolean apply(String input) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/FunctionTypeBuilder.java', 'modifications': [{'line_number': 184, 'modified_line': 'public boolean apply(JSType type) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/FunctionTypeBuilder.java', 'modifications': [{'line_number': 184, 'modified_line': '    if (!type.isSubtype(typeRegistry.getNativeType(OBJECT_TYPE))) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/FunctionTypeBuilder.java', 'modifications': [{'line_number': 184, 'modified_line': 'if (!type.isSubtype(typeRegistry.getNativeType(OBJECT_TYPE)) && !type.isSubtype(typeRegistry.getNativeType(FUNCTION_TYPE))) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/FunctionTypeBuilder.java', 'modifications': [{'line_number': 184, 'modified_line': 'if (!type.isSubtype(typeRegistry.getNativeType(OBJECT_TYPE))) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/FunctionTypeBuilder.java', 'modifications': [{'line_number': 184, 'modified_line': 'if (!type.isSubtype(typeRegistry.getNativeType(OBJECT_TYPE)) && !type.isSubtype(typeRegistry.getNativeType(FUNCTION_TYPE))) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/FunctionTypeBuilder.java', 'modifications': [{'line_number': 184, 'modified_line': 'if (!type.isSubtype(typeRegistry.getNativeType(OBJECT_TYPE) && type.isSubtype(typeRegistry.getNativeType(FUNCTION_TYPE))) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/FunctionTypeBuilder.java', 'modifications': [{'line_number': 184, 'modified_line': 'if (!type.isSubtype(typeRegistry.getNativeType(OBJECT_TYPE)) && !type.isSubtype(typeRegistry.getNativeType(FUNCTION_TYPE))) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/FunctionTypeBuilder.java', 'modifications': [{'line_number': 184, 'modified_line': 'if (!type.isSubtype(typeRegistry.getNativeType(OBJECT_TYPE)) && !type.isSubtype(typeRegistry.getNativeType(FUNCTION_TYPE))) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/FunctionTypeBuilder.java', 'modifications': [{'line_number': 184, 'modified_line': 'public boolean apply(JSType type) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/FunctionTypeBuilder.java', 'modifications': [{'line_number': 184, 'modified_line': 'public boolean apply(JSType type) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/FunctionTypeBuilder.java', 'modifications': [{'line_number': 184, 'modified_line': 'public boolean apply(Object type) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/FunctionTypeBuilder.java', 'modifications': [{'line_number': 184, 'modified_line': 'public boolean apply(Object type) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/FunctionTypeBuilder.java', 'modifications': [{'line_number': 184, 'modified_line': 'public boolean apply(JSType type) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/FunctionTypeBuilder.java', 'modifications': [{'line_number': 184, 'modified_line': 'if (!type.isSubtype(typeRegistry.getNativeType(OBJECT_TYPE)) && !type.isSubtype(typeRegistry.getNativeType(FUNCTION_TYPE))) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/FunctionTypeBuilder.java', 'modifications': [{'line_number': 184, 'modified_line': 'if (!type.isSubtype(typeRegistry.getNativeType(OBJECT_TYPE)) && !type.isSubtype(typeRegistry.getNativeType(FUNCTION_TYPE))) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/FunctionTypeBuilder.java', 'modifications': [{'line_number': 184, 'modified_line': 'if (!type.isSubtype(typeRegistry.getNativeType(OBJECT_TYPE)) && !type.isSubtype(typeRegistry.getNativeType(FUNCTION_TYPE))) {'}]}]


