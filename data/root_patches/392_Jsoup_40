###Fix:
[{'file_name': 'org/jsoup/nodes/DocumentType.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 22, 'modified_line': 'if (name.isEmpty()) {\n    throw new IllegalArgumentException("Name must not be empty");\n}\nValidate.notEmpty(name);'}]}]

###Fix:
[{'file_name': 'org/jsoup/nodes/DocumentType.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 22, 'modified_line': 'if (name == null || name.isEmpty()) {\n    throw new IllegalArgumentException("Name must not be empty");\n}\nValidate.notEmpty(name);'}]}]

###Fix:
[{'file_name': 'org/jsoup/nodes/DocumentType.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 22, 'modified_line': 'if (name == null || name.isEmpty() || name.trim().isEmpty()) {\n    throw new IllegalArgumentException("Name must not be empty");\n}\nValidate.notEmpty(name);'}]}]

###Fix:
[{'file_name': 'org/jsoup/nodes/DocumentType.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 22, 'modified_line': 'if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank()) {\n    throw new IllegalArgumentException("Name must not be empty");\n}\nValidate.notEmpty(name);'}]}]

###Fix:
[{'file_name': 'org/jsoup/nodes/DocumentType.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 22, 'modified_line': 'if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank() || name.equals("")) {\n    throw new IllegalArgumentException("Name must not be empty");\n}\nValidate.notEmpty(name);'}]}]

###Fix:
[{'file_name': 'org/jsoup/nodes/DocumentType.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 22, 'modified_line': 'if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank() || name.equals("") || name.equals(" ")) {\n    throw new IllegalArgumentException("Name must not be empty");\n}\nValidate.notEmpty(name);'}]}]

###Fix:
[{'file_name': 'org/jsoup/nodes/DocumentType.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 22, 'modified_line': 'if (name == null || name.isEmpty()) {\n throw new IllegalArgumentException("Name must not be empty");\n}\nValidate.notEmpty(name);'}]}]

###Fix:
[]

###Fix:
[{'file_name': 'org/jsoup/nodes/DocumentType.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 22, 'modified_line': 'if (name == null || name.isEmpty()) {\n throw new IllegalArgumentException("Name must not be empty");\n}\nValidate.notEmpty(name);'}]}]

###Fix:
[{'file_name': 'org/jsoup/nodes/DocumentType.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 22, 'modified_line': 'if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank() || name.equals("") || name.equals(" ")) {\n throw new IllegalArgumentException("Name must not be empty");\n}\nValidate.notEmpty(name);'}]}]

###Fix:
[{'file_name': 'org/jsoup/nodes/DocumentType.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 22, 'modified_line': 'if (name == null || name.isEmpty() || name.trim().isEmpty() || name.isBlank() || name.equals("")) {\n throw new IllegalArgumentException("Name must not be empty");\n}\nValidate.notEmpty(name);'}]}]


