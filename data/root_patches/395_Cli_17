###Fix:
[{'file_name': 'org/apache/commons/cli/PosixParser.java', 'insertions': [{'line_number': 303, 'new_lines': ['tokens.add(token); // Add token to the tokens list']}]}]

###Fix:
[{'file_name': 'org/apache/commons/cli/PosixParser.java', 'insertions': [{'line_number': 303, 'new_lines': ['tokens.add(token); // Add token to the tokens list']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/cli/PosixParser.java', 'insertions': [{'line_number': 303, 'new_lines': ['tokens.add(token); // Add token to the tokens list', 'if (currentOption.hasArg() && (token.length() != (i + 1))) {', 'tokens.add(token.substring(i + 1));', '}']}]}]

###Fix:
[{'file_name': 'org/apache/commons/cli/PosixParser.java', 'insertions': [{'line_number': 303, 'new_lines': ['tokens.add(token); // Add token to the tokens list', 'if (currentOption.hasArg() && (token.length() != (i + 1))) {', 'tokens.add(token.substring(i + 1));', '}']}]}]

###Fix:
[{'file_name': 'org/apache/commons/cli/PosixParser.java', 'insertions': [{'line_number': 306, 'new_lines': ['tokens.add(token); // Add token to the tokens list', 'if (currentOption.hasArg() && (token.length() != (i + 1))) {', 'tokens.add(token.substring(i + 1));', '}']}]}]

###Fix:
[{'file_name': 'org/apache/commons/cli/PosixParser.java', 'insertions': [{'line_number': 303, 'new_lines': ['tokens.add(token); // Add token to the tokens list', 'tokens.addAll(Arrays.asList(burstToken(token, " "))); // Split token based on space delimiter']}]}]

###Fix:
[{'file_name': 'org/apache/commons/cli/PosixParser.java', 'insertions': [{'line_number': 303, 'new_lines': ['tokens.add(token); // Add token to the tokens list', 'tokens.addAll(Arrays.asList(burstToken(token, " "))); // Split token based on space delimiter']}]}]

###Fix:
[{'file_name': 'org/apache/commons/cli/PosixParser.java', 'insertions': [{'line_number': 303, 'new_lines': ['tokens.add(token); // Add token to the tokens list', 'if (currentOption.hasArg() && (token.length() != (i + 1))) {', 'tokens.add(token.substring(i + 1));', '}']}]}]

###Fix:
[{'file_name': 'org/apache/commons/cli/PosixParser.java', 'insertions': [{'line_number': 303, 'new_lines': ['tokens.add(token); // Add token to the tokens list', 'if (currentOption != null && currentOption.hasArg() && (token.length() != (i + 1))) {', 'tokens.add(token.substring(i + 1));', '}']}]}]

###Fix:
[{'file_name': 'org/apache/commons/cli/PosixParser.java', 'insertions': [{'line_number': 303, 'new_lines': ['tokens.add(token); // Add token to the tokens list', 'if (currentOption.hasArg() && (token.length() != (i + 1))) {', 'tokens.add(token.substring(i + 1));', '}']}]}]

###Fix:
[{'file_name': 'org/apache/commons/cli/PosixParser.java', 'insertions': [{'line_number': 303, 'new_lines': ['tokens.add(token); // Add token to the tokens list', 'if (currentOption.hasArg() && (token.length() != (i + 1))) {', 'tokens.add(token.substring(i + 1));', '}']}]}]

###Fix:
[{'file_name': 'org/apache/commons/cli/PosixParser.java', 'insertions': [{'line_number': 303, 'new_lines': ['tokens.add(token); // Add token to the tokens list', 'if (currentOption != null && currentOption.hasArg() && (token.length() != (i + 1))) {', 'tokens.add(token.substring(i + 1));', '}']}]}]

###Fix:
[{'file_name': 'org/apache/commons/cli/PosixParser.java', 'insertions': [{'line_number': 303, 'new_lines': ['tokens.add(token); // Add token to the tokens list', 'if (currentOption != null && currentOption.hasArg() && token.length() > (i + 1)) {', 'tokens.add(token.substring(i + 1));', '}']}]}]

###Fix:
[{'file_name': 'org/apache/commons/cli/PosixParser.java', 'insertions': [{'line_number': 303, 'new_lines': ['tokens.add(token); // Add token to the tokens list', 'if (currentOption != null && currentOption != null && currentOption.hasArg() && token.length() > (i + 1)) {', 'tokens.add(token.substring(i + 1));', '}']}]}]

###Fix:
[{'file_name': 'org/apache/commons/cli/PosixParser.java', 'insertions': [{'line_number': 303, 'new_lines': ['tokens.add(token); // Add token to the tokens list', 'if (currentOption != null && currentOption.hasArg() && token.length() > (i + 1)) {', 'tokens.add(token.substring(i + 1));', '}']}]}]


