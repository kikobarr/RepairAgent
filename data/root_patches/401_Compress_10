###Fix:
[{'file_name': 'org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest', 'insertions': [{'line_number': 144, 'new_lines': ['if (is == null) {', '    throw new RuntimeException("InputStream is null");', '}']}]}]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipFile.java', 'target_lines': [['808', '        for (ZipArchiveEntry ze : entries.keySet()) {'], ['809', '            OffsetEntry offsetEntry = entries.get(ze);'], ['842', '//']], 'insertions': [{'line_number': 842, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipFile.java', 'target_lines': [['808', '        for (ZipArchiveEntry ze : entries.keySet()) {'], ['809', '            OffsetEntry offsetEntry = entries.get(ze);'], ['842', '//']], 'insertions': [{'line_number': 842, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        ']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipFile.java', 'insertions': [{'line_number': 842, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipFile.java', 'target_lines': [['808', '        for (ZipArchiveEntry ze : entries.keySet()) {'], ['809', '            OffsetEntry offsetEntry = entries.get(ze);'], ['842', '//']], 'insertions': [{'line_number': 808, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        }']}, {'line_number': 809, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        }']}, {'line_number': 842, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipFile.java', 'target_lines': [['808', '        for (ZipArchiveEntry ze : entries.keySet()) {'], ['809', '            OffsetEntry offsetEntry = entries.get(ze);'], ['842', '//']], 'insertions': [{'line_number': 808, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        }']}, {'line_number': 809, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        }']}, {'line_number': 842, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        ']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest', 'insertions': [{'line_number': 143, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        }']}]}]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipFile.java', 'target_lines': [['808', '        for (ZipArchiveEntry ze : entries.keySet()) {'], ['809', '            OffsetEntry offsetEntry = entries.get(ze);'], ['842', '//']], 'insertions': [{'line_number': 808, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        ']}, {'line_number': 809, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        ']}, {'line_number': 842, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        ']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest', 'insertions': [{'line_number': 144, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        }']}]}]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipFile.java', 'target_lines': [['808', '        for (ZipArchiveEntry ze : entries.keySet()) {'], ['809', '            OffsetEntry offsetEntry = entries.get(ze);'], ['842', '//']], 'insertions': [{'line_number': 808, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        ']}, {'line_number': 809, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        ']}, {'line_number': 842, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        ']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipFile.java', 'insertions': [{'line_number': 842, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        ']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipFile.java', 'target_lines': [['808', '        for (ZipArchiveEntry ze : entries.keySet()) {'], ['809', '            OffsetEntry offsetEntry = entries.get(ze);'], ['842', '//']], 'insertions': [{'line_number': 808, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        ']}, {'line_number': 809, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        ']}, {'line_number': 842, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        ']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipFile.java', 'insertions': [{'line_number': 842, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        ']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipFile.java', 'target_lines': [['808', '        for (ZipArchiveEntry ze : entries.keySet()) {'], ['809', '            OffsetEntry offsetEntry = entries.get(ze);'], ['842', '//']], 'insertions': [{'line_number': 808, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        ']}, {'line_number': 809, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        ']}, {'line_number': 842, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        ']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest', 'insertions': [{'line_number': 144, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        }']}]}]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipFile.java', 'target_lines': [['808', '        for (ZipArchiveEntry ze : entries.keySet()) {'], ['809', '            OffsetEntry offsetEntry = entries.get(ze);'], ['842', '//']], 'insertions': [{'line_number': 808, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        ']}, {'line_number': 809, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        ']}, {'line_number': 842, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        ']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest', 'insertions': [{'line_number': 144, 'new_lines': ['        if (is == null) {', '            throw new RuntimeException("InputStream is null");', '        ']}], 'deletions': [], 'modifications': []}]


