###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeGenerator.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 714, 'modified_line': 'return (n.getType() == Token.FUNCTION || n.getType() == Token.DO || n.getType() == Token.IF);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeGenerator.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 714, 'modified_line': 'return (n.getType() == Token.FUNCTION || n.getType() == Token.DO || n.getType() == Token.IF);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeGenerator.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 714, 'modified_line': 'return (n.getType() == Token.FUNCTION || n.getType() == Token.DO || n.getType() == Token.IF || n.getType() == Token.WHILE);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeGenerator.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 714, 'modified_line': 'return (n.getType() == Token.FUNCTION || n.getType() == Token.DO || n.getType() == Token.IF || n.getType() == Token.WHILE || n.getType() == Token.FOR || n.getType() == Token.FOR_IN || n.getType() == Token.FOR_OF || n.getType() == Token.WHILE || n.getType() == Token.DO_WHILE || n.getType() == Token.IF || n.getType() == Token.SWITCH);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeGenerator.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 714, 'modified_line': 'return (n.getType() == Token.FUNCTION || n.getType() == Token.DO || n.getType() == Token.IF || n.getType() == Token.WHILE || n.getType() == Token.FOR || n.getType() == Token.FOR_IN || n.getType() == Token.FOR_OF || n.getType() == Token.DO_WHILE || n.getType() == Token.SWITCH);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeGenerator.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 714, 'modified_line': 'return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeGenerator.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 714, 'modified_line': 'return (n.getType() == Token.FUNCTION || n.getType() == Token.DO || n.getType() == Token.IF || n.getType() == Token.WHILE || n.getType() == Token.FOR || n.getType() == Token.FOR_IN || n.getType() == Token.FOR_OF || n.getType() == Token.DO_WHILE || n.getType() == Token.SWITCH);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeGenerator.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 708, 'modified_line': 'private boolean isOneExactlyFunctionOrDo(Node n) {'}, {'line_number': 709, 'modified_line': '    if (!(n instanceof Integer)) {'}, {'line_number': 710, 'modified_line': '        throw new IllegalArgumentException("Input must be an integer");'}, {'line_number': 711, 'modified_line': '    }'}, {'line_number': 712, 'modified_line': ''}, {'line_number': 713, 'modified_line': '    int num = (Integer) n;'}, {'line_number': 714, 'modified_line': ''}, {'line_number': 715, 'modified_line': '    return num == 1;'}, {'line_number': 716, 'modified_line': '}'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeGenerator.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 714, 'modified_line': 'return (n.getType() == Token.FUNCTION || n.getType() == Token.DO || n.getType() == Token.IF || n.getType() == Token.WHILE || n.getType() == Token.FOR || n.getType() == Token.FOR_IN || n.getType() == Token.FOR_OF || n.getType() == Token.DO_WHILE || n.getType() == Token.SWITCH);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeGenerator.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 714, 'modified_line': 'return (n.getType() == Token.FUNCTION || n.getType() == Token.DO || n.getType() == Token.IF || n.getType() == Token.WHILE || n.getType() == Token.FOR || n.getType() == Token.FOR_IN || n.getType() == Token.FOR_OF || n.getType() == Token.DO_WHILE || n.getType() == Token.SWITCH);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeGenerator.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 708, 'modified_line': 'public boolean isOneExactlyFunctionOrDo(int number) {'}, {'line_number': 709, 'modified_line': '    if (number == 1) {'}, {'line_number': 710, 'modified_line': '        return true;'}, {'line_number': 711, 'modified_line': '    } else {'}, {'line_number': 712, 'modified_line': '        return false;'}, {'line_number': 713, 'modified_line': '    }'}, {'line_number': 714, 'modified_line': '}'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeGenerator.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 708, 'modified_line': 'public boolean isOneExactlyFunctionOrDo(int number) {'}, {'line_number': 709, 'modified_line': '    return number == 1;'}, {'line_number': 710, 'modified_line': '}'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeGenerator.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 714, 'modified_line': 'return (n.getType() == Token.FUNCTION || n.getType() == Token.DO || n.getType() == Token.IF || n.getType() == Token.WHILE || n.getType() == Token.FOR || n.getType() == Token.FOR_IN || n.getType() == Token.FOR_OF || n.getType() == Token.DO_WHILE || n.getType() == Token.SWITCH);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeGenerator.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 708, 'modified_line': 'public boolean isOneExactlyFunctionOrDo(Node n) {'}, {'line_number': 709, 'modified_line': '    return (n.getType() == Token.FUNCTION || n.getType() == Token.DO || n.getType() == Token.IF || n.getType() == Token.WHILE || n.getType() == Token.FOR || n.getType() == Token.FOR_IN || n.getType() == Token.FOR_OF || n.getType() == Token.DO_WHILE || n.getType() == Token.SWITCH);'}, {'line_number': 710, 'modified_line': '}'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeGenerator.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 714, 'modified_line': 'return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeGenerator.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 714, 'modified_line': 'return (n.getType() == Token.FUNCTION || n.getType() == Token.DO || n.getType() == Token.IF || n.getType() == Token.WHILE || n.getType() == Token.FOR || n.getType() == Token.FOR_IN || n.getType() == Token.FOR_OF || n.getType() == Token.DO_WHILE || n.getType() == Token.SWITCH || n.getType() == Token.CASE || n.getType() == Token.DEFAULT);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeGenerator.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 708, 'modified_line': 'public boolean isOneExactlyFunctionOrDo(int num) {'}, {'line_number': 709, 'modified_line': '    return num == 1;'}, {'line_number': 710, 'modified_line': '}'}]}]


