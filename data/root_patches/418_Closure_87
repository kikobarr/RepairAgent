###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'modifications': [{'line_number': 529, 'modified_line': '    return firstChild.isReturn() || firstChild.isThrow() || firstChild.isExprResult();'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'modifications': [{'line_number': 529, 'modified_line': "    // We only have to worry about methods with an implicit 'this' param, or this doesn't happen."}, {'line_number': 529, 'modified_line': '    return NodeUtil.isExpressionNode(maybeExpr);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'modifications': [{'line_number': 533, 'modified_line': '          return NodeUtil.isExpressionNode(maybeExpr) && !NodeUtil.isExpressionResult(maybeExpr);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'modifications': [{'line_number': 533, 'modified_line': '          return NodeUtil.isExpressionNode(maybeExpr);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'modifications': [{'line_number': 533, 'modified_line': '          return NodeUtil.isExpressionNode(maybeExpr) && !NodeUtil.isExpressionResult(maybeExpr);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'modifications': [{'line_number': 533, 'modified_line': '          return NodeUtil.isExpressionNode(maybeExpr);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'modifications': [{'line_number': 529, 'modified_line': '          return NodeUtil.isExpressionNode(maybeExpr) && !NodeUtil.isExpressionResult(maybeExpr);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'modifications': [{'line_number': 529, 'modified_line': '          return NodeUtil.isExpressionNode(maybeExpr);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'modifications': [{'line_number': 529, 'modified_line': '          return true;'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'modifications': [{'line_number': 529, 'modified_line': '          return false;'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'modifications': [{'line_number': 529, 'modified_line': '          return false;'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'modifications': [{'line_number': 529, 'modified_line': '          return NodeUtil.isExpressionNode(maybeExpr);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'modifications': [{'line_number': 529, 'modified_line': '          return NodeUtil.isExpressionNode(maybeExpr);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'modifications': [{'line_number': 529, 'modified_line': '          return NodeUtil.isExpressionNode(maybeExpr) && !NodeUtil.isExpressionResult(maybeExpr);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'modifications': [{'line_number': 529, 'modified_line': 'return NodeUtil.isExpressionNode(maybeExpr) && !NodeUtil.isExpressionResult(maybeExpr);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'insertions': [{'line_number': 529, 'new_lines': ['          return NodeUtil.isExpressionNode(maybeExpr) && !NodeUtil.isExpressionResult(maybeExpr);']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'insertions': [{'line_number': 529, 'new_lines': ['          return NodeUtil.isExpressionNode(maybeExpr) && !NodeUtil.isExpressionResult(maybeExpr);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'modifications': [{'line_number': 529, 'modified_line': '          return NodeUtil.isExpressionNode(maybeExpr) && !NodeUtil.isExpressionResult(maybeExpr);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'insertions': [{'line_number': 529, 'new_lines': ["          // We only have to worry about methods with an implicit 'this' param, or this doesn't happen.", '          return NodeUtil.isExpressionNode(maybeExpr) && !NodeUtil.isExpressionResult(maybeExpr);']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'insertions': [{'line_number': 529, 'new_lines': ["          // We only have to worry about methods with an implicit 'this' param, or this doesn't happen.", '          return NodeUtil.isExpressionNode(maybeExpr) && !NodeUtil.isExpressionResult(maybeExpr);']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'insertions': [{'line_number': 529, 'new_lines': ["          // We only have to worry about methods with an implicit 'this' param, or this doesn't happen.", '          return NodeUtil.isExpressionNode(maybeExpr) && !NodeUtil.isExpressionResult(maybeExpr);']}], 'modifications': [{'line_number': 533, 'modified_line': '          return NodeUtil.isExpressionNode(maybeExpr) && !NodeUtil.isExpressionResult(maybeExpr);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'modifications': [{'line_number': 529, 'modified_line': '          return NodeUtil.isExpressionNode(maybeExpr) && !NodeUtil.isExpressionResult(maybeExpr);'}, {'line_number': 533, 'modified_line': '          return NodeUtil.isExpressionNode(maybeExpr) && !NodeUtil.isExpressionResult(maybeExpr);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'insertions': [{'line_number': 529, 'new_lines': ['          return NodeUtil.isExpressionNode(maybeExpr) && !NodeUtil.isExpressionResult(maybeExpr);']}, {'line_number': 533, 'new_lines': ['          return NodeUtil.isExpressionNode(maybeExpr) && !NodeUtil.isExpressionResult(maybeExpr);']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'modifications': [{'line_number': 529, 'modified_line': 'return NodeUtil.isExpressionNode(maybeExpr);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'modifications': [{'line_number': 529, 'modified_line': '          return NodeUtil.isExpressionNode(maybeExpr) && !NodeUtil.isExpressionResult(maybeExpr);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'modifications': [{'line_number': 529, 'modified_line': '          return NodeUtil.isExpressionNode(maybeExpr);'}]}]


