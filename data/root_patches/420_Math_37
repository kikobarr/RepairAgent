###Fix:
[]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'insertions': [{'line_number': 1021, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);', '        }']}, {'line_number': 1065, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);', '        }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'target_lines': [['1018', '        if (isNaN) {'], ['1063', '        if (isNaN) {'], ['1021', '//'], ['1065', '//']], 'insertions': [{'line_number': 1021, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'target_lines': [['1018', '        if (isNaN) {'], ['1063', '        if (isNaN) {'], ['1021', '//'], ['1065', '//']], 'insertions': [{'line_number': 1021, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}, {'line_number': 1065, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'insertions': [{'line_number': 1021, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}, {'line_number': 1065, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'target_lines': [['1018', '        if (isNaN) {'], ['1063', '        if (isNaN) {'], ['1021', '//'], ['1065', '//']], 'insertions': [{'line_number': 1021, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}, {'line_number': 1065, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'target_lines': [['1018', '        if (isNaN) {'], ['1063', '        if (isNaN) {'], ['1021', '//'], ['1065', '//']], 'insertions': [{'line_number': 1021, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}, {'line_number': 1065, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'insertions': [{'line_number': 1021, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}, {'line_number': 1065, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'target_lines': [['1018', '        if (isNaN) {'], ['1063', '        if (isNaN) {'], ['1021', '//'], ['1065', '//']], 'insertions': [{'line_number': 1021, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}, {'line_number': 1065, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'insertions': [{'line_number': 1021, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}, {'line_number': 1065, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'target_lines': [['1018', '        if (isNaN) {'], ['1063', '        if (isNaN) {'], ['1021', '//'], ['1065', '//']], 'insertions': [{'line_number': 1021, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}, {'line_number': 1065, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'target_lines': [['1018', '        if (isNaN) {'], ['1063', '        if (isNaN) {'], ['1021', '//'], ['1065', '//']], 'insertions': [{'line_number': 1021, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}, {'line_number': 1065, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'insertions': [{'line_number': 1021, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}], 'deletions': [], 'modifications': []}, {'file_name': 'org/apache/commons/math/complex/Complex.java', 'insertions': [{'line_number': 1065, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'target_lines': [['1018', '        if (isNaN) {'], ['1063', '        if (isNaN) {'], ['1021', '//'], ['1065', '//']], 'insertions': [{'line_number': 1021, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}, {'line_number': 1065, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'insertions': [{'line_number': 1021, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'target_lines': [['1018', '        if (isNaN) {'], ['1063', '        if (isNaN) {'], ['1021', '//'], ['1065', '//']], 'insertions': [{'line_number': 1021, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}, {'line_number': 1065, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'insertions': [{'line_number': 1021, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}, {'line_number': 1065, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'target_lines': [['1018', '        if (isNaN) {'], ['1063', '        if (isNaN) {'], ['1021', '//'], ['1065', '//']], 'insertions': [{'line_number': 1021, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}, {'line_number': 1065, 'new_lines': ['        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {', '            return createComplex(Double.NaN, Double.NaN);']}], 'deletions': [], 'modifications': []}]


