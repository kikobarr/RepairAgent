###Fix:
[{'file_name': 'org/apache/commons/math/distribution/PoissonDistributionImpl.java', 'modifications': [{'line_number': 93, 'modified_line': 'if (p <= 0) { // Check if mean value is not positive\n throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);'}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/distribution/PoissonDistributionImpl.java', 'target_lines': [['22', 'import org.apache.commons.math.MathRuntimeException;'], ['94', '            throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 22, 'modified_line': 'import org.apache.commons.math.MathRuntimeException;'}, {'line_number': 94, 'modified_line': '            if (p <= 0) { // Check if mean value is not positive\n                throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);'}]}]

###Fix:
[]

###Fix:
[{'file_name': 'org/apache/commons/math/distribution/PoissonDistributionImpl.java', 'modifications': [{'line_number': 73, 'modified_line': 'if (p <= 0) { // Check if mean value is not positive\n throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);'}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/distribution/PoissonDistributionImpl.java', 'modifications': [{'line_number': 79, 'modified_line': 'public PoissonDistributionImpl(double p) { if (p <= 0) { throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p); } this.mean = p; }'}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/distribution/PoissonDistributionImpl.java', 'target_lines': [['22', 'import org.apache.commons.math.MathRuntimeException;'], ['94', '            throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 22, 'modified_line': 'import org.apache.commons.math.MathRuntimeException;'}, {'line_number': 94, 'modified_line': '            if (p <= 0) { // Check if mean value is not positive\n                throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);'}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/distribution/PoissonDistributionImpl.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 22, 'modified_line': 'import org.apache.commons.math.MathRuntimeException;'}, {'line_number': 94, 'modified_line': 'if (p <= 0) { // Check if mean value is not positive\n                throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);'}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/distribution/PoissonDistributionImpl.java', 'modifications': [{'line_number': 93, 'modified_line': 'if (p <= 0) { // Check if mean value is not positive\n throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);'}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/distribution/PoissonDistributionImpl.java', 'target_lines': [['22', 'import org.apache.commons.math.MathRuntimeException;'], ['94', '            throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 93, 'modified_line': 'if (p <= 0) { // Check if mean value is not positive\n throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);'}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/distribution/PoissonDistributionImpl.java', 'target_lines': [['22', 'import org.apache.commons.math.MathRuntimeException;'], ['94', '            throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 22, 'modified_line': 'import org.apache.commons.math.MathRuntimeException;'}, {'line_number': 94, 'modified_line': 'if (p <= 0) { // Check if mean value is not positive\n                throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);'}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/distribution/PoissonDistributionImpl.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 94, 'modified_line': 'if (p <= 0) { // Check if mean value is not positive\n throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);'}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/distribution/PoissonDistributionImpl.java', 'target_lines': [['22', 'import org.apache.commons.math.MathRuntimeException;'], ['94', '            throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 22, 'modified_line': 'import org.apache.commons.math.MathRuntimeException;'}, {'line_number': 94, 'modified_line': 'if (p <= 0) { // Check if mean value is not positive\n                throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);'}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/distribution/PoissonDistributionImpl.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 94, 'modified_line': 'if (p <= 0) { // Check if mean value is not positive\n throw new MathRuntimeException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);'}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/distribution/PoissonDistributionImpl.java', 'target_lines': [['22', 'import org.apache.commons.math.MathRuntimeException;'], ['94', '            throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 22, 'modified_line': 'import org.apache.commons.math.MathRuntimeException;'}, {'line_number': 94, 'modified_line': 'if (p <= 0) { // Check if mean value is not positive\n throw new MathRuntimeException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);'}]}]

###Fix:
[]

###Fix:
[]

###Fix:
[{'file_name': 'org/apache/commons/math/distribution/PoissonDistributionImpl.java', 'modifications': [{'line_number': 79, 'modified_line': 'public PoissonDistributionImpl(double p) { if (p <= 0) { throw new IllegalArgumentException("The Poisson mean must be positive"); } this.mean = p; }'}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/distribution/PoissonDistributionImpl.java', 'target_lines': [['22', 'import org.apache.commons.math.MathRuntimeException;'], ['94', '            throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 22, 'modified_line': 'import org.apache.commons.math.MathRuntimeException;'}, {'line_number': 94, 'modified_line': 'if (p <= 0) { // Check if mean value is not positive\n                throw new MathRuntimeException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);'}]}]


