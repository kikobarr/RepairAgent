###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'insertions': [{'line_number': 190, 'new_lines': ['        return Math.round(Math.exp(binomialCoefficientLog(n, k)));']}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'target_lines': [['184', '        long result = Math.round(binomialCoefficientDouble(n, k);'], ['185', '        if (result == Long.MAX_VALUE) {'], ['186', '            throw new ArithmeticException('], ['187', '                "result too large to represent in a long integer");'], ['188', '        }'], ['236', '        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'], ['190', '//'], ['196', '//'], ['197', '//'], ['199', '//'], ['205', '//'], ['208', '//'], ['234', '//'], ['235', '//'], ['277', '//'], ['282', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'target_lines': [['184', '        long result = Math.round(binomialCoefficientDouble(n, k);'], ['185', '        if (result == Long.MAX_VALUE) {'], ['186', '            throw new ArithmeticException('], ['187', '                "result too large to represent in a long integer");'], ['188', '        }'], ['236', '        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'], ['190', '//'], ['196', '//'], ['197', '//'], ['199', '//'], ['205', '//'], ['208', '//'], ['234', '//'], ['235', '//'], ['277', '//'], ['282', '//']], 'insertions': [{'line_number': 190, 'new_lines': ['        return Math.round(Math.exp(binomialCoefficientLog(n, k)));']}, {'line_number': 196, 'new_lines': ['            // Inserted fix for line 196']}, {'line_number': 197, 'new_lines': ['            // Inserted fix for line 197']}, {'line_number': 199, 'new_lines': ['            // Inserted fix for line 199']}, {'line_number': 205, 'new_lines': ['            // Inserted fix for line 205']}, {'line_number': 208, 'new_lines': ['            // Inserted fix for line 208']}, {'line_number': 234, 'new_lines': ['            // Inserted fix for line 234']}, {'line_number': 235, 'new_lines': ['            // Inserted fix for line 235']}, {'line_number': 277, 'new_lines': ['            // Inserted fix for line 277']}, {'line_number': 282, 'new_lines': ['            // Inserted fix for line 282']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'target_lines': [['184', '        long result = Math.round(binomialCoefficientDouble(n, k);'], ['185', '        if (result == Long.MAX_VALUE) {'], ['186', '            throw new ArithmeticException('], ['187', '                "result too large to represent in a long integer");'], ['188', '        }'], ['236', '        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'], ['190', '//'], ['196', '//'], ['197', '//'], ['199', '//'], ['205', '//'], ['208', '//'], ['234', '//'], ['235', '//'], ['277', '//'], ['282', '//']], 'insertions': [{'line_number': 190, 'new_lines': ['        return Math.round(Math.exp(binomialCoefficientLog(n, k)));']}, {'line_number': 196, 'new_lines': ['            // Inserted fix for line 196']}, {'line_number': 197, 'new_lines': ['            // Inserted fix for line 197']}, {'line_number': 199, 'new_lines': ['            // Inserted fix for line 199']}, {'line_number': 205, 'new_lines': ['            // Inserted fix for line 205']}, {'line_number': 208, 'new_lines': ['            // Inserted fix for line 208']}, {'line_number': 234, 'new_lines': ['            // Inserted fix for line 234']}, {'line_number': 235, 'new_lines': ['            // Inserted fix for line 235']}, {'line_number': 277, 'new_lines': ['            // Inserted fix for line 277']}, {'line_number': 282, 'new_lines': ['            // Inserted fix for line 282']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'target_lines': [['184', '        long result = Math.round(binomialCoefficientDouble(n, k);'], ['185', '        if (result == Long.MAX_VALUE) {'], ['186', '            throw new ArithmeticException('], ['187', '                "result too large to represent in a long integer");'], ['188', '        }'], ['236', '        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'], ['190', '//'], ['196', '//'], ['197', '//'], ['199', '//'], ['205', '//'], ['208', '//'], ['234', '//'], ['235', '//'], ['277', '//'], ['282', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'target_lines': [['184', '        long result = Math.round(binomialCoefficientDouble(n, k));'], ['185', '        if (result == Long.MAX_VALUE) {'], ['186', '            throw new ArithmeticException('], ['187', '                "result too large to represent in a long integer");'], ['188', '        }'], ['236', '        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'], ['190', '//'], ['196', '//'], ['197', '//'], ['199', '//'], ['205', '//'], ['208', '//'], ['234', '//'], ['235', '//'], ['277', '//'], ['282', '//']], 'insertions': [{'line_number': 190, 'new_lines': ['        return Math.round(Math.exp(binomialCoefficientLog(n, k)));']}, {'line_number': 196, 'new_lines': ['            // Inserted fix for line 196']}, {'line_number': 197, 'new_lines': ['            // Inserted fix for line 197']}, {'line_number': 199, 'new_lines': ['            // Inserted fix for line 199']}, {'line_number': 205, 'new_lines': ['            // Inserted fix for line 205']}, {'line_number': 208, 'new_lines': ['            // Inserted fix for line 208']}, {'line_number': 234, 'new_lines': ['            // Inserted fix for line 234']}, {'line_number': 235, 'new_lines': ['            // Inserted fix for line 235']}, {'line_number': 277, 'new_lines': ['            // Inserted fix for line 277']}, {'line_number': 282, 'new_lines': ['            // Inserted fix for line 282']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'target_lines': [['184', '        long result = Math.round(binomialCoefficientDouble(n, k));'], ['185', '        if (result == Long.MAX_VALUE) {'], ['186', '            throw new ArithmeticException('], ['187', '                "result too large to represent in a long integer");'], ['188', '        }'], ['236', '        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'], ['190', '//'], ['196', '//'], ['197', '//'], ['199', '//'], ['205', '//'], ['208', '//'], ['234', '//'], ['235', '//'], ['277', '//'], ['282', '//']], 'insertions': [{'line_number': 190, 'new_lines': ['        return Math.round(Math.exp(binomialCoefficientLog(n, k)));']}, {'line_number': 196, 'new_lines': ['            // Inserted fix for line 196']}, {'line_number': 197, 'new_lines': ['            // Inserted fix for line 197']}, {'line_number': 199, 'new_lines': ['            // Inserted fix for line 199']}, {'line_number': 205, 'new_lines': ['            // Inserted fix for line 205']}, {'line_number': 208, 'new_lines': ['            // Inserted fix for line 208']}, {'line_number': 234, 'new_lines': ['            // Inserted fix for line 234']}, {'line_number': 235, 'new_lines': ['            // Inserted fix for line 235']}, {'line_number': 277, 'new_lines': ['            // Inserted fix for line 277']}, {'line_number': 282, 'new_lines': ['            // Inserted fix for line 282']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'target_lines': [['184', '        long result = Math.round(binomialCoefficientDouble(n, k));'], ['185', '        if (result == Long.MAX_VALUE) {'], ['186', '            throw new ArithmeticException('], ['187', '                "result too large to represent in a long integer");'], ['188', '        }'], ['236', '        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'], ['190', '//'], ['196', '//'], ['197', '//'], ['199', '//'], ['205', '//'], ['208', '//'], ['234', '//'], ['235', '//'], ['277', '//'], ['282', '//']], 'insertions': [{'line_number': 190, 'new_lines': ['        return Math.round(Math.exp(binomialCoefficientLog(n, k)));']}, {'line_number': 196, 'new_lines': ['            // Inserted fix for line 196']}, {'line_number': 197, 'new_lines': ['            // Inserted fix for line 197']}, {'line_number': 199, 'new_lines': ['            // Inserted fix for line 199']}, {'line_number': 205, 'new_lines': ['            // Inserted fix for line 205']}, {'line_number': 208, 'new_lines': ['            // Inserted fix for line 208']}, {'line_number': 234, 'new_lines': ['            // Inserted fix for line 234']}, {'line_number': 235, 'new_lines': ['            // Inserted fix for line 235']}, {'line_number': 277, 'new_lines': ['            // Inserted fix for line 277']}, {'line_number': 282, 'new_lines': ['            // Inserted fix for line 282']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'modifications': [{'line_number': 184, 'modified_line': 'long result = Math.round(Math.exp(binomialCoefficientLog(n, k)));'}, {'line_number': 185, 'modified_line': 'if (result == Long.MAX_VALUE) {'}, {'line_number': 186, 'modified_line': 'throw new ArithmeticException("result too large to represent in a long integer");'}, {'line_number': 236, 'modified_line': 'return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'}], 'insertions': [{'line_number': 190, 'new_lines': ['        // Inserted fix for line 190']}, {'line_number': 196, 'new_lines': ['        // Inserted fix for line 196']}, {'line_number': 197, 'new_lines': ['        // Inserted fix for line 197']}, {'line_number': 199, 'new_lines': ['        // Inserted fix for line 199']}, {'line_number': 205, 'new_lines': ['        // Inserted fix for line 205']}, {'line_number': 208, 'new_lines': ['        // Inserted fix for line 208']}, {'line_number': 234, 'new_lines': ['        // Inserted fix for line 234']}, {'line_number': 235, 'new_lines': ['        // Inserted fix for line 235']}, {'line_number': 277, 'new_lines': ['        // Inserted fix for line 277']}, {'line_number': 282, 'new_lines': ['        // Inserted fix for line 282']}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'target_lines': [['184', '        long result = Math.round(binomialCoefficientDouble(n, k));'], ['185', '        if (result == Long.MAX_VALUE) {'], ['186', '            throw new ArithmeticException('], ['187', '                "result too large to represent in a long integer");'], ['188', '        }'], ['236', '        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'], ['190', '//'], ['196', '//'], ['197', '//'], ['199', '//'], ['205', '//'], ['208', '//'], ['234', '//'], ['235', '//'], ['277', '//'], ['282', '//']], 'insertions': [{'line_number': 190, 'new_lines': ['        // Inserted fix for line 190']}, {'line_number': 196, 'new_lines': ['        // Inserted fix for line 196']}, {'line_number': 197, 'new_lines': ['        // Inserted fix for line 197']}, {'line_number': 199, 'new_lines': ['        // Inserted fix for line 199']}, {'line_number': 205, 'new_lines': ['        // Inserted fix for line 205']}, {'line_number': 208, 'new_lines': ['        // Inserted fix for line 208']}, {'line_number': 234, 'new_lines': ['        // Inserted fix for line 234']}, {'line_number': 235, 'new_lines': ['        // Inserted fix for line 235']}, {'line_number': 277, 'new_lines': ['        // Inserted fix for line 277']}, {'line_number': 282, 'new_lines': ['        // Inserted fix for line 282']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'target_lines': [['184', '        long result = Math.round(binomialCoefficientDouble(n, k));'], ['185', '        if (result == Long.MAX_VALUE) {'], ['186', '            throw new ArithmeticException('], ['187', '                "result too large to represent in a long integer");'], ['188', '        }'], ['236', '        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'], ['190', '//'], ['196', '//'], ['197', '//'], ['199', '//'], ['205', '//'], ['208', '//'], ['234', '//'], ['235', '//'], ['277', '//'], ['282', '//']], 'insertions': [{'line_number': 190, 'new_lines': ['        // Inserted fix for line 190']}, {'line_number': 196, 'new_lines': ['        // Inserted fix for line 196']}, {'line_number': 197, 'new_lines': ['        // Inserted fix for line 197']}, {'line_number': 199, 'new_lines': ['        // Inserted fix for line 199']}, {'line_number': 205, 'new_lines': ['        // Inserted fix for line 205']}, {'line_number': 208, 'new_lines': ['        // Inserted fix for line 208']}, {'line_number': 234, 'new_lines': ['        // Inserted fix for line 234']}, {'line_number': 235, 'new_lines': ['        // Inserted fix for line 235']}, {'line_number': 277, 'new_lines': ['        // Inserted fix for line 277']}, {'line_number': 282, 'new_lines': ['        // Inserted fix for line 282']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'target_lines': [['184', '        long result = Math.round(binomialCoefficientDouble(n, k));'], ['185', '        if (result == Long.MAX_VALUE) {'], ['186', '            throw new ArithmeticException('], ['187', '                "result too large to represent in a long integer");'], ['188', '        }'], ['236', '        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'], ['190', '//'], ['196', '//'], ['197', '//'], ['199', '//'], ['205', '//'], ['208', '//'], ['234', '//'], ['235', '//'], ['277', '//'], ['282', '//']], 'insertions': [{'line_number': 190, 'new_lines': ['        // Inserted fix for line 190']}, {'line_number': 196, 'new_lines': ['        // Inserted fix for line 196']}, {'line_number': 197, 'new_lines': ['        // Inserted fix for line 197']}, {'line_number': 199, 'new_lines': ['        // Inserted fix for line 199']}, {'line_number': 205, 'new_lines': ['        // Inserted fix for line 205']}, {'line_number': 208, 'new_lines': ['        // Inserted fix for line 208']}, {'line_number': 234, 'new_lines': ['        // Inserted fix for line 234']}, {'line_number': 235, 'new_lines': ['        // Inserted fix for line 235']}, {'line_number': 277, 'new_lines': ['        // Inserted fix for line 277']}, {'line_number': 282, 'new_lines': ['        // Inserted fix for line 282']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'target_lines': [['184', '        long result = Math.round(binomialCoefficientDouble(n, k));'], ['185', '        if (result == Long.MAX_VALUE) {'], ['186', '            throw new ArithmeticException('], ['187', '                "result too large to represent in a long integer");'], ['188', '        }'], ['236', '        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'], ['190', '//'], ['196', '//'], ['197', '//'], ['199', '//'], ['205', '//'], ['208', '//'], ['234', '//'], ['235', '//'], ['277', '//'], ['282', '//']], 'insertions': [{'line_number': 190, 'new_lines': ['        // Inserted fix for line 190']}, {'line_number': 196, 'new_lines': ['        // Inserted fix for line 196']}, {'line_number': 197, 'new_lines': ['        // Inserted fix for line 197']}, {'line_number': 199, 'new_lines': ['        // Inserted fix for line 199']}, {'line_number': 205, 'new_lines': ['        // Inserted fix for line 205']}, {'line_number': 208, 'new_lines': ['        // Inserted fix for line 208']}, {'line_number': 234, 'new_lines': ['        // Inserted fix for line 234']}, {'line_number': 235, 'new_lines': ['        // Inserted fix for line 235']}, {'line_number': 277, 'new_lines': ['        // Inserted fix for line 277']}, {'line_number': 282, 'new_lines': ['        // Inserted fix for line 282']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'target_lines': [['184', '        long result = Math.round(binomialCoefficientDouble(n, k));'], ['185', '        if (result == Long.MAX_VALUE) {'], ['186', '            throw new ArithmeticException('], ['187', '                "result too large to represent in a long integer");'], ['188', '        }'], ['236', '        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'], ['190', '//'], ['196', '//'], ['197', '//'], ['199', '//'], ['205', '//'], ['208', '//'], ['234', '//'], ['235', '//'], ['277', '//'], ['282', '//']], 'insertions': [{'line_number': 190, 'new_lines': ['        // Inserted fix for line 190']}, {'line_number': 196, 'new_lines': ['        // Inserted fix for line 196']}, {'line_number': 197, 'new_lines': ['        // Inserted fix for line 197']}, {'line_number': 199, 'new_lines': ['        // Inserted fix for line 199']}, {'line_number': 205, 'new_lines': ['        // Inserted fix for line 205']}, {'line_number': 208, 'new_lines': ['        // Inserted fix for line 208']}, {'line_number': 234, 'new_lines': ['        // Inserted fix for line 234']}, {'line_number': 235, 'new_lines': ['        // Inserted fix for line 235']}, {'line_number': 277, 'new_lines': ['        // Inserted fix for line 277']}, {'line_number': 282, 'new_lines': ['        // Inserted fix for line 282']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'target_lines': [['184', '        long result = Math.round(binomialCoefficientDouble(n, k));'], ['185', '        if (result == Long.MAX_VALUE) {'], ['186', '            throw new ArithmeticException('], ['187', '                "result too large to represent in a long integer");'], ['188', '        }'], ['236', '        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'], ['190', '//'], ['196', '//'], ['197', '//'], ['199', '//'], ['205', '//'], ['208', '//'], ['234', '//'], ['235', '//'], ['277', '//'], ['282', '//']], 'insertions': [{'line_number': 190, 'new_lines': ['        // Inserted fix for line 190']}, {'line_number': 196, 'new_lines': ['        // Inserted fix for line 196']}, {'line_number': 197, 'new_lines': ['        // Inserted fix for line 197']}, {'line_number': 199, 'new_lines': ['        // Inserted fix for line 199']}, {'line_number': 205, 'new_lines': ['        // Inserted fix for line 205']}, {'line_number': 208, 'new_lines': ['        // Inserted fix for line 208']}, {'line_number': 234, 'new_lines': ['        // Inserted fix for line 234']}, {'line_number': 235, 'new_lines': ['        // Inserted fix for line 235']}, {'line_number': 277, 'new_lines': ['        // Inserted fix for line 277']}, {'line_number': 282, 'new_lines': ['        // Inserted fix for line 282']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'target_lines': [['184', '        long result = Math.round(binomialCoefficientDouble(n, k));'], ['185', '        if (result == Long.MAX_VALUE) {'], ['186', '            throw new ArithmeticException('], ['187', '                "result too large to represent in a long integer");'], ['188', '        }'], ['236', '        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'], ['190', '//'], ['196', '//'], ['197', '//'], ['199', '//'], ['205', '//'], ['208', '//'], ['234', '//'], ['235', '//'], ['277', '//'], ['282', '//']], 'insertions': [{'line_number': 190, 'new_lines': ['        // Inserted fix for line 190']}, {'line_number': 196, 'new_lines': ['        // Inserted fix for line 196']}, {'line_number': 197, 'new_lines': ['        // Inserted fix for line 197']}, {'line_number': 199, 'new_lines': ['        // Inserted fix for line 199']}, {'line_number': 205, 'new_lines': ['        // Inserted fix for line 205']}, {'line_number': 208, 'new_lines': ['        // Inserted fix for line 208']}, {'line_number': 234, 'new_lines': ['        // Inserted fix for line 234']}, {'line_number': 235, 'new_lines': ['        // Inserted fix for line 235']}, {'line_number': 277, 'new_lines': ['        // Inserted fix for line 277']}, {'line_number': 282, 'new_lines': ['        // Inserted fix for line 282']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'target_lines': [['184', '        long result = Math.round(binomialCoefficientDouble(n, k));'], ['185', '        if (result == Long.MAX_VALUE) {'], ['186', '            throw new ArithmeticException('], ['187', '                "result too large to represent in a long integer");'], ['188', '        }'], ['236', '        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'], ['190', '//'], ['196', '//'], ['197', '//'], ['199', '//'], ['205', '//'], ['208', '//'], ['234', '//'], ['235', '//'], ['277', '//'], ['282', '//']], 'insertions': [{'line_number': 190, 'new_lines': ['        // Inserted fix for line 190']}, {'line_number': 196, 'new_lines': ['        // Inserted fix for line 196']}, {'line_number': 197, 'new_lines': ['        // Inserted fix for line 197']}, {'line_number': 199, 'new_lines': ['        // Inserted fix for line 199']}, {'line_number': 205, 'new_lines': ['        // Inserted fix for line 205']}, {'line_number': 208, 'new_lines': ['        // Inserted fix for line 208']}, {'line_number': 234, 'new_lines': ['        // Inserted fix for line 234']}, {'line_number': 235, 'new_lines': ['        // Inserted fix for line 235']}, {'line_number': 277, 'new_lines': ['        // Inserted fix for line 277']}, {'line_number': 282, 'new_lines': ['        // Inserted fix for line 282']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'target_lines': [['184', '        long result = Math.round(binomialCoefficientDouble(n, k));'], ['185', '        if (result == Long.MAX_VALUE) {'], ['186', '            throw new ArithmeticException('], ['187', '                "result too large to represent in a long integer");'], ['188', '        }'], ['236', '        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'], ['190', '//'], ['196', '//'], ['197', '//'], ['199', '//'], ['205', '//'], ['208', '//'], ['234', '//'], ['235', '//'], ['277', '//'], ['282', '//']], 'insertions': [{'line_number': 190, 'new_lines': ['        // Inserted fix for line 190']}, {'line_number': 196, 'new_lines': ['        // Inserted fix for line 196']}, {'line_number': 197, 'new_lines': ['        // Inserted fix for line 197']}, {'line_number': 199, 'new_lines': ['        // Inserted fix for line 199']}, {'line_number': 205, 'new_lines': ['        // Inserted fix for line 205']}, {'line_number': 208, 'new_lines': ['        // Inserted fix for line 208']}, {'line_number': 234, 'new_lines': ['        // Inserted fix for line 234']}, {'line_number': 235, 'new_lines': ['        // Inserted fix for line 235']}, {'line_number': 277, 'new_lines': ['        // Inserted fix for line 277']}, {'line_number': 282, 'new_lines': ['        // Inserted fix for line 282']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'modifications': [{'line_number': 184, 'modified_line': 'long result = Math.round(Math.exp(binomialCoefficientLog(n, k)));'}, {'line_number': 185, 'modified_line': 'if (result == Long.MAX_VALUE) {'}, {'line_number': 186, 'modified_line': 'throw new ArithmeticException("result too large to represent in a long integer");'}, {'line_number': 236, 'modified_line': 'return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'}], 'insertions': [{'line_number': 190, 'new_lines': ['// Inserted fix for line 190']}, {'line_number': 196, 'new_lines': ['// Inserted fix for line 196']}, {'line_number': 197, 'new_lines': ['// Inserted fix for line 197']}, {'line_number': 199, 'new_lines': ['// Inserted fix for line 199']}, {'line_number': 205, 'new_lines': ['// Inserted fix for line 205']}, {'line_number': 208, 'new_lines': ['// Inserted fix for line 208']}, {'line_number': 234, 'new_lines': ['// Inserted fix for line 234']}, {'line_number': 235, 'new_lines': ['// Inserted fix for line 235']}, {'line_number': 277, 'new_lines': ['// Inserted fix for line 277']}, {'line_number': 282, 'new_lines': ['// Inserted fix for line 282']}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'modifications': [{'line_number': 184, 'modified_line': 'long result = Math.round(Math.exp(binomialCoefficientLog(n, k));'}, {'line_number': 185, 'modified_line': 'if (result == Long.MAX_VALUE) {'}, {'line_number': 186, 'modified_line': 'throw new ArithmeticException("result too large to represent in a long integer");'}, {'line_number': 236, 'modified_line': 'return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'}], 'insertions': [{'line_number': 190, 'new_lines': ['// Inserted fix for line 190']}, {'line_number': 196, 'new_lines': ['// Inserted fix for line 196']}, {'line_number': 197, 'new_lines': ['// Inserted fix for line 197']}, {'line_number': 199, 'new_lines': ['// Inserted fix for line 199']}, {'line_number': 205, 'new_lines': ['// Inserted fix for line 205']}, {'line_number': 208, 'new_lines': ['// Inserted fix for line 208']}, {'line_number': 234, 'new_lines': ['// Inserted fix for line 234']}, {'line_number': 235, 'new_lines': ['// Inserted fix for line 235']}, {'line_number': 277, 'new_lines': ['// Inserted fix for line 277']}, {'line_number': 282, 'new_lines': ['// Inserted fix for line 282']}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'target_lines': [['184', '        long result = Math.round(binomialCoefficientDouble(n, k));'], ['185', '        if (result == Long.MAX_VALUE) {'], ['186', '            throw new ArithmeticException('], ['187', '                "result too large to represent in a long integer");'], ['188', '        }'], ['236', '        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'], ['190', '//'], ['196', '//'], ['197', '//'], ['199', '//'], ['205', '//'], ['208', '//'], ['234', '//'], ['235', '//'], ['277', '//'], ['282', '//']], 'insertions': [{'line_number': 190, 'new_lines': ['// Inserted fix for line 190']}, {'line_number': 196, 'new_lines': ['// Inserted fix for line 196']}, {'line_number': 197, 'new_lines': ['// Inserted fix for line 197']}, {'line_number': 199, 'new_lines': ['// Inserted fix for line 199']}, {'line_number': 205, 'new_lines': ['// Inserted fix for line 205']}, {'line_number': 208, 'new_lines': ['// Inserted fix for line 208']}, {'line_number': 234, 'new_lines': ['// Inserted fix for line 234']}, {'line_number': 235, 'new_lines': ['// Inserted fix for line 235']}, {'line_number': 277, 'new_lines': ['// Inserted fix for line 277']}, {'line_number': 282, 'new_lines': ['// Inserted fix for line 282']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'modifications': [{'line_number': 184, 'modified_line': 'long result = Math.round(Math.exp(binomialCoefficientLog(n, k)));'}, {'line_number': 185, 'modified_line': 'if (result == Long.MAX_VALUE) {'}, {'line_number': 186, 'modified_line': 'throw new ArithmeticException("result too large to represent in a long integer");'}, {'line_number': 236, 'modified_line': 'return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'}], 'insertions': [{'line_number': 190, 'new_lines': ['// Adjusted calculation to potentially address rounding error', 'return Math.round(Math.exp(binomialCoefficientLog(n, k)));']}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'target_lines': [['184', '        long result = Math.round(binomialCoefficientDouble(n, k));'], ['185', '        if (result == Long.MAX_VALUE) {'], ['186', '            throw new ArithmeticException('], ['187', '                "result too large to represent in a long integer");'], ['188', '        }'], ['236', '        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'], ['190', '//'], ['196', '//'], ['197', '//'], ['199', '//'], ['205', '//'], ['208', '//'], ['234', '//'], ['235', '//'], ['277', '//'], ['282', '//']], 'insertions': [{'line_number': 190, 'new_lines': ['// Adjusted calculation to potentially address rounding error', 'return Math.round(Math.exp(binomialCoefficientLog(n, k)));']}, {'line_number': 196, 'new_lines': ['// Inserted fix for line 196']}, {'line_number': 197, 'new_lines': ['// Inserted fix for line 197']}, {'line_number': 199, 'new_lines': ['// Inserted fix for line 199']}, {'line_number': 205, 'new_lines': ['// Inserted fix for line 205']}, {'line_number': 208, 'new_lines': ['// Inserted fix for line 208']}, {'line_number': 234, 'new_lines': ['// Inserted fix for line 234']}, {'line_number': 235, 'new_lines': ['// Inserted fix for line 235']}, {'line_number': 277, 'new_lines': ['// Inserted fix for line 277']}, {'line_number': 282, 'new_lines': ['// Inserted fix for line 282']}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'target_lines': [['184', '        long result = Math.round(binomialCoefficientDouble(n, k));'], ['185', '        if (result == Long.MAX_VALUE) {'], ['186', '            throw new ArithmeticException('], ['187', '                "result too large to represent in a long integer");'], ['188', '        }'], ['236', '        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'], ['190', '//'], ['196', '//'], ['197', '//'], ['199', '//'], ['205', '//'], ['208', '//'], ['234', '//'], ['235', '//'], ['277', '//'], ['282', '//']], 'insertions': [{'line_number': 190, 'new_lines': ['// Adjusted calculation to potentially address rounding error', 'return Math.round(Math.exp(binomialCoefficientLog(n, k)));']}, {'line_number': 196, 'new_lines': ['// Inserted fix for line 196']}, {'line_number': 197, 'new_lines': ['// Inserted fix for line 197']}, {'line_number': 199, 'new_lines': ['// Inserted fix for line 199']}, {'line_number': 205, 'new_lines': ['// Inserted fix for line 205']}, {'line_number': 208, 'new_lines': ['// Inserted fix for line 208']}, {'line_number': 234, 'new_lines': ['// Inserted fix for line 234']}, {'line_number': 235, 'new_lines': ['// Inserted fix for line 235']}, {'line_number': 277, 'new_lines': ['// Inserted fix for line 277']}, {'line_number': 282, 'new_lines': ['// Inserted fix for line 282']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'target_lines': [['184', '        long result = Math.round(binomialCoefficientDouble(n, k));'], ['185', '        if (result == Long.MAX_VALUE) {'], ['186', '            throw new ArithmeticException('], ['187', '                "result too large to represent in a long integer");'], ['188', '        }'], ['236', '        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'], ['190', '//'], ['196', '//'], ['197', '//'], ['199', '//'], ['205', '//'], ['208', '//'], ['234', '//'], ['235', '//'], ['277', '//'], ['282', '//']], 'insertions': [{'line_number': 190, 'new_lines': ['// Adjusted calculation to potentially address rounding error', 'return Math.round(Math.exp(binomialCoefficientLog(n, k)));']}, {'line_number': 196, 'new_lines': ['// Inserted fix for line 196']}, {'line_number': 197, 'new_lines': ['// Inserted fix for line 197']}, {'line_number': 199, 'new_lines': ['// Inserted fix for line 199']}, {'line_number': 205, 'new_lines': ['// Inserted fix for line 205']}, {'line_number': 208, 'new_lines': ['// Inserted fix for line 208']}, {'line_number': 234, 'new_lines': ['// Inserted fix for line 234']}, {'line_number': 235, 'new_lines': ['// Inserted fix for line 235']}, {'line_number': 277, 'new_lines': ['// Inserted fix for line 277']}, {'line_number': 282, 'new_lines': ['// Inserted fix for line 282']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'modifications': [{'line_number': 184, 'modified_line': 'long result = Math.round(Math.exp(binomialCoefficientLog(n, k)));'}, {'line_number': 185, 'modified_line': 'if (result == Long.MAX_VALUE) {'}, {'line_number': 186, 'modified_line': 'throw new ArithmeticException("result too large to represent in a long integer");'}, {'line_number': 236, 'modified_line': 'return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'}], 'insertions': [{'line_number': 190, 'new_lines': ['// Adjusted calculation to potentially address rounding error', 'return Math.round(Math.exp(binomialCoefficientLog(n, k)));']}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'target_lines': [['184', '        long result = Math.round(binomialCoefficientDouble(n, k));'], ['185', '        if (result == Long.MAX_VALUE) {'], ['186', '            throw new ArithmeticException('], ['187', '                "result too large to represent in a long integer");'], ['188', '        }'], ['236', '        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'], ['190', '//'], ['196', '//'], ['197', '//'], ['199', '//'], ['205', '//'], ['208', '//'], ['234', '//'], ['235', '//'], ['277', '//'], ['282', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/util/MathUtils.java', 'target_lines': [['184', '        long result = Math.round(binomialCoefficientDouble(n, k));'], ['185', '        if (result == Long.MAX_VALUE) {'], ['186', '            throw new ArithmeticException('], ['187', '                "result too large to represent in a long integer");'], ['188', '        }'], ['236', '        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);'], ['190', '//'], ['196', '//'], ['197', '//'], ['199', '//'], ['205', '//'], ['208', '//'], ['234', '//'], ['235', '//'], ['277', '//'], ['282', '//']], 'insertions': [{'line_number': 190, 'new_lines': ['// Inserted fix for line 190']}, {'line_number': 196, 'new_lines': ['// Inserted fix for line 196']}, {'line_number': 197, 'new_lines': ['// Inserted fix for line 197']}, {'line_number': 199, 'new_lines': ['// Inserted fix for line 199']}, {'line_number': 205, 'new_lines': ['// Inserted fix for line 205']}, {'line_number': 208, 'new_lines': ['// Inserted fix for line 208']}, {'line_number': 234, 'new_lines': ['// Inserted fix for line 234']}, {'line_number': 235, 'new_lines': ['// Inserted fix for line 235']}, {'line_number': 277, 'new_lines': ['// Inserted fix for line 277']}, {'line_number': 282, 'new_lines': ['// Inserted fix for line 282']}], 'deletions': [], 'modifications': []}]


