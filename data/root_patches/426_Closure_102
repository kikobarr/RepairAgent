###Fix:
[]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/Normalize.java', 'insertions': [{'line_number': 89, 'new_lines': ['        var arguments = Array.prototype.slice.call(arguments, 0);']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CompilerRunnerTest.java', 'insertions': [{'line_number': 7, 'new_lines': ['import com.google.javascript.rhino.Node;']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CompilerRunnerTest.java', 'insertions': [{'line_number': 7, 'new_lines': ['import com.google.javascript.rhino.Node;']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CompilerRunnerTest.java', 'modifications': [{'line_number': 29, 'modified_line': '  var arguments = Array.prototype.slice.call(arguments, 0);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CompilerRunnerTest.java', 'modifications': [{'line_number': 29, 'modified_line': '  arguments = Array.prototype.slice.call(arguments, 0);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CompilerRunnerTest.java', 'insertions': [{'line_number': 29, 'new_lines': ['  var arguments = Array.prototype.slice.call(arguments, 0);']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CompilerRunnerTest.java', 'modifications': [{'line_number': 29, 'modified_line': '  arguments = Array.prototype.slice.call(arguments, 0);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CompilerRunnerTest.java', 'modifications': [{'line_number': 29, 'modified_line': '  arguments = Array.prototype.slice.call(arguments, 0);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CompilerRunnerTest.java', 'modifications': [{'line_number': 29, 'modified_line': '  arguments = Array.prototype.slice.call(arguments, 0);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CompilerRunnerTest.java', 'insertions': [{'line_number': 29, 'new_lines': ['  arguments = Array.prototype.slice.call(arguments, 0);']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CompilerRunnerTest.java', 'modifications': [{'line_number': 29, 'modified_line': '  var arguments = Array.prototype.slice.call(arguments, 0);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CompilerRunnerTest.java', 'modifications': [{'line_number': 29, 'modified_line': '  arguments = Array.prototype.slice.call(arguments, 0);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CompilerRunnerTest.java', 'modifications': [{'line_number': 29, 'modified_line': '  arguments = Array.prototype.slice.call(arguments, 0);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/Normalize.java', 'insertions': [{'line_number': 89, 'new_lines': ['        var arguments = Array.prototype.slice.call(arguments, 0);']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CompilerRunnerTest.java', 'modifications': [{'line_number': 29, 'modified_line': '  var arguments = Array.prototype.slice.call(arguments, 0);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CompilerRunnerTest.java', 'modifications': [{'line_number': 29, 'modified_line': '  arguments = Array.prototype.slice.call(arguments, 0);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CompilerRunnerTest.java', 'modifications': [{'line_number': 29, 'modified_line': '  var arguments = Array.prototype.slice.call(arguments, 0);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CompilerRunnerTest.java', 'modifications': [{'line_number': 29, 'modified_line': '  arguments = Array.prototype.slice.call(arguments, 0);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CompilerRunnerTest.java', 'modifications': [{'line_number': 29, 'modified_line': '  arguments = Array.prototype.slice.call(arguments, 0);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CompilerRunnerTest.java', 'modifications': [{'line_number': 29, 'modified_line': '  arguments = Array.prototype.slice.call(arguments, 0);'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CompilerRunnerTest.java', 'modifications': [{'line_number': 29, 'modified_line': '  arguments = Array.prototype.slice.call(arguments, 0);'}]}]


