###Fix:
[{'file_name': 'org/apache/commons/math3/fraction/Fraction.java', 'insertions': [{'line_number': 215, 'new_lines': ['throw new FractionConversionException(value, Long.MAX_VALUE, 1L);']}], 'deletions': [], 'modifications': []}, {'file_name': 'org/apache/commons/math3/fraction/BigFraction.java', 'insertions': [{'line_number': 306, 'new_lines': ['throw new FractionConversionException(value, Long.MAX_VALUE, 1L);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math3/fraction/Fraction.java', 'insertions': [{'line_number': 214, 'new_lines': ['// Handle overflow condition when converting 0.5 to fraction', 'if (p2 == Long.MAX_VALUE || q2 == Long.MAX_VALUE) {', '    throw new FractionConversionException(value, Long.MAX_VALUE, 1L);', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math3/fraction/Fraction.java', 'target_lines': [['215', '//']], 'insertions': [{'line_number': 215, 'new_lines': ['throw new FractionConversionException(value, Long.MAX_VALUE, 1L);']}], 'deletions': [], 'modifications': []}, {'file_name': 'org/apache/commons/math3/fraction/BigFraction.java', 'target_lines': [['306', '//']], 'insertions': [{'line_number': 306, 'new_lines': ['throw new FractionConversionException(value, Long.MAX_VALUE, 1L);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math3/fraction/Fraction.java', 'insertions': [{'line_number': 215, 'new_lines': ['throw new FractionConversionException(value, Long.MAX_VALUE, 1L);']}], 'deletions': [], 'modifications': []}, {'file_name': 'org/apache/commons/math3/fraction/BigFraction.java', 'insertions': [{'line_number': 306, 'new_lines': ['throw new FractionConversionException(value, Long.MAX_VALUE, 1L);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math3/fraction/Fraction.java', 'insertions': [{'line_number': 214, 'new_lines': ['// Handle overflow condition when converting 0.5 to fraction', 'if (p2 == Long.MAX_VALUE || q2 == Long.MAX_VALUE) {', '    throw new FractionConversionException(value, Long.MAX_VALUE, 1L);', '}']}], 'deletions': [], 'modifications': []}, {'file_name': 'org/apache/commons/math3/fraction/BigFraction.java', 'insertions': [{'line_number': 306, 'new_lines': ['// Handle overflow condition when converting 0.5 to fraction', 'if (p2 == Long.MAX_VALUE || q2 == Long.MAX_VALUE) {', '    throw new FractionConversionException(value, Long.MAX_VALUE, 1L);', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math3/fraction/Fraction.java', 'target_lines': [['215', '//']], 'insertions': [{'line_number': 215, 'new_lines': ['throw new FractionConversionException(value, Long.MAX_VALUE, 1L);']}], 'deletions': [], 'modifications': []}, {'file_name': 'org/apache/commons/math3/fraction/BigFraction.java', 'target_lines': [['306', '//']], 'insertions': [{'line_number': 306, 'new_lines': ['throw new FractionConversionException(value, Long.MAX_VALUE, 1L);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math3/fraction/Fraction.java', 'insertions': [{'line_number': 212, 'new_lines': ['// Handle overflow condition when converting 0.5 to fraction', 'if (p2 == Long.MAX_VALUE || q2 == Long.MAX_VALUE) {', '    throw new FractionConversionException(value, Long.MAX_VALUE, 1L);', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math3/fraction/Fraction.java', 'target_lines': [['215', '//']], 'insertions': [{'line_number': 215, 'new_lines': ['throw new FractionConversionException(value, Long.MAX_VALUE, 1L);']}], 'deletions': [], 'modifications': []}, {'file_name': 'org/apache/commons/math3/fraction/BigFraction.java', 'target_lines': [['306', '//']], 'insertions': [{'line_number': 306, 'new_lines': ['throw new FractionConversionException(value, Long.MAX_VALUE, 1L);']}], 'deletions': [], 'modifications': []}]

###Fix:
[]

###Fix:
[{'file_name': 'org/apache/commons/math3/fraction/Fraction.java', 'insertions': [{'line_number': 212, 'new_lines': ['// Handle overflow condition when converting 0.5 to fraction', 'if (p2 == Long.MAX_VALUE || q2 == Long.MAX_VALUE) {', '    throw new FractionConversionException(value, Long.MAX_VALUE, 1L);', '}']}]}, {'file_name': 'org/apache/commons/math3/fraction/BigFraction.java', 'insertions': [{'line_number': 306, 'new_lines': ['// Handle overflow condition when converting 0.5 to fraction', 'if (p2 == Long.MAX_VALUE || q2 == Long.MAX_VALUE) {', '    throw new FractionConversionException(value, Long.MAX_VALUE, 1L);', '}']}]}]

###Fix:
[{'file_name': 'org/apache/commons/math3/fraction/Fraction.java', 'target_lines': [['215', '//']], 'insertions': [{'line_number': 215, 'new_lines': ['throw new FractionConversionException(value, Long.MAX_VALUE, 1L);']}], 'deletions': [], 'modifications': []}, {'file_name': 'org/apache/commons/math3/fraction/BigFraction.java', 'target_lines': [['306', '//']], 'insertions': [{'line_number': 306, 'new_lines': ['throw new FractionConversionException(value, Long.MAX_VALUE, 1L);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math3/fraction/Fraction.java', 'insertions': [{'line_number': 212, 'new_lines': ['// Handle overflow condition when converting 0.5 to fraction', 'if (p2 == Long.MAX_VALUE || q2 == Long.MAX_VALUE) {', '    throw new FractionConversionException(value, Long.MAX_VALUE, 1L);', '}']}], 'deletions': [], 'modifications': []}, {'file_name': 'org/apache/commons/math3/fraction/BigFraction.java', 'insertions': [{'line_number': 306, 'new_lines': ['// Handle overflow condition when converting 0.5 to fraction', 'if (p2 == Long.MAX_VALUE || q2 == Long.MAX_VALUE) {', '    throw new FractionConversionException(value, Long.MAX_VALUE, 1L);', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math3/fraction/Fraction.java', 'target_lines': [['215', '//']], 'insertions': [{'line_number': 215, 'new_lines': ['throw new FractionConversionException(value, Long.MAX_VALUE, 1L);']}], 'deletions': [], 'modifications': []}, {'file_name': 'org/apache/commons/math3/fraction/BigFraction.java', 'target_lines': [['306', '//']], 'insertions': [{'line_number': 306, 'new_lines': ['throw new FractionConversionException(value, Long.MAX_VALUE, 1L);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math3/fraction/Fraction.java', 'insertions': [{'line_number': 212, 'new_lines': ['// Handle overflow condition when converting 0.5 to fraction', 'if (p2 == Long.MAX_VALUE || q2 == Long.MAX_VALUE) {', '    throw new FractionConversionException(value, Long.MAX_VALUE, 1L);', '}']}], 'deletions': [], 'modifications': []}, {'file_name': 'org/apache/commons/math3/fraction/BigFraction.java', 'insertions': [{'line_number': 306, 'new_lines': ['// Handle overflow condition when converting 0.5 to fraction', 'if (p2 == Long.MAX_VALUE || q2 == Long.MAX_VALUE) {', '    throw new FractionConversionException(value, Long.MAX_VALUE, 1L);', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math3/fraction/Fraction.java', 'target_lines': [['215', '//']], 'insertions': [{'line_number': 215, 'new_lines': ['throw new FractionConversionException(value, Long.MAX_VALUE, 1L);']}], 'deletions': [], 'modifications': []}, {'file_name': 'org/apache/commons/math3/fraction/BigFraction.java', 'target_lines': [['306', '//']], 'insertions': [{'line_number': 306, 'new_lines': ['throw new FractionConversionException(value, Long.MAX_VALUE, 1L);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math3/fraction/Fraction.java', 'insertions': [{'line_number': 212, 'new_lines': ['// Handle overflow condition when converting 0.5 to fraction', 'if (p2 == Long.MAX_VALUE || q2 == Long.MAX_VALUE) {', '    throw new FractionConversionException(value, Long.MAX_VALUE, 1L);', '}']}], 'deletions': [], 'modifications': []}, {'file_name': 'org/apache/commons/math3/fraction/BigFraction.java', 'insertions': [{'line_number': 306, 'new_lines': ['// Handle overflow condition when converting 0.5 to fraction', 'if (p2 == Long.MAX_VALUE || q2 == Long.MAX_VALUE) {', '    throw new FractionConversionException(value, Long.MAX_VALUE, 1L);', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math3/fraction/Fraction.java', 'target_lines': [['215', '//']], 'insertions': [{'line_number': 215, 'new_lines': ['throw new FractionConversionException(value, Long.MAX_VALUE, 1L);']}], 'deletions': [], 'modifications': []}, {'file_name': 'org/apache/commons/math3/fraction/BigFraction.java', 'target_lines': [['306', '//']], 'insertions': [{'line_number': 306, 'new_lines': ['throw new FractionConversionException(value, Long.MAX_VALUE, 1L);']}], 'deletions': [], 'modifications': []}]


