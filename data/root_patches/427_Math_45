###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 52, 'modified_line': 'if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {\n throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);\n}\nthis.entries = new OpenIntToDoubleHashMap();'}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 52, 'modified_line': 'if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {\n throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);\n}\nthis.entries = new OpenIntToDoubleHashMap();'}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'insertions': [{'line_number': 52, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}']}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'insertions': [{'line_number': 52, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}', 'this.entries = new OpenIntToDoubleHashMap();']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}', 'this.entries = new OpenIntToDoubleHashMap();']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}', 'this.entries = new OpenIntToDoubleHashMap();']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}', 'this.entries = new OpenIntToDoubleHashMap();']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}', 'this.entries = new OpenIntToDoubleHashMap();']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}', 'this.entries = new OpenIntToDoubleHashMap();']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}', 'this.entries = new OpenIntToDoubleHashMap();']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}', 'this.entries = new OpenIntToDoubleHashMap();']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}', 'this.entries = new OpenIntToDoubleHashMap();']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}', 'this.entries = new OpenIntToDoubleHashMap();']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}', 'this.entries = new OpenIntToDoubleHashMap();']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}', 'this.entries = new OpenIntToDoubleHashMap();']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}', 'this.entries = new OpenIntToDoubleHashMap();']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}', 'this.entries = new OpenIntToDoubleHashMap();']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}', 'this.entries = new OpenIntToDoubleHashMap();']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}', 'this.entries = new OpenIntToDoubleHashMap();']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}', 'this.entries = new OpenIntToDoubleHashMap();']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}', 'this.entries = new OpenIntToDoubleHashMap();']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/linear/OpenMapRealMatrix.java', 'target_lines': [['50', '//']], 'insertions': [{'line_number': 50, 'new_lines': ['if (rowDimension > Integer.MAX_VALUE || columnDimension > Integer.MAX_VALUE) {', '    throw new NumberIsTooLargeException(rowDimension + " or " + columnDimension, Integer.MAX_VALUE, false);', '}', 'this.entries = new OpenIntToDoubleHashMap();']}], 'deletions': [], 'modifications': []}]


