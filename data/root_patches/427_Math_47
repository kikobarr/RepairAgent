###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'insertions': [{'line_number': 82, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        }']}, {'line_number': 105, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        }']}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'target_lines': [['256', '        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {'], ['257', '            return NaN;'], ['293', '            return NaN;'], ['82', '//'], ['105', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'target_lines': [['256', '        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {'], ['257', '            return NaN;'], ['293', '            return NaN;'], ['82', '//'], ['105', '//']], 'insertions': [{'line_number': 82, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        }']}, {'line_number': 105, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        ']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'target_lines': [['256', '        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {'], ['257', '            return NaN;'], ['293', '            return NaN;'], ['82', '//'], ['105', '//']], 'insertions': [{'line_number': 82, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        }']}, {'line_number': 105, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        ']}, {'line_number': 256, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        ']}, {'line_number': 257, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        ']}, {'line_number': 293, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        ']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'insertions': [{'line_number': 256, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        }']}, {'line_number': 293, 'new_lines': ['            return NaN;']}, {'line_number': 280, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        }']}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'target_lines': [['256', '        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {'], ['257', '            return NaN;'], ['293', '            return NaN;'], ['82', '//'], ['105', '//']], 'insertions': [{'line_number': 82, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        ']}, {'line_number': 105, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        ']}, {'line_number': 256, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        ']}, {'line_number': 257, 'new_lines': ['            return NaN;']}, {'line_number': 293, 'new_lines': ['            return NaN;']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'insertions': [{'line_number': 256, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return createComplex(real / divisor.getReal(), imaginary / divisor.getImaginary());', '        }']}, {'line_number': 293, 'new_lines': ['            return createComplex(real / divisor.getReal(), imaginary / divisor.getImaginary());']}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'target_lines': [['256', '        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {'], ['257', '            return NaN;'], ['293', '            return NaN;'], ['82', '//'], ['105', '//']], 'insertions': [{'line_number': 82, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        ']}, {'line_number': 105, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        ']}, {'line_number': 256, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        ']}, {'line_number': 257, 'new_lines': ['            return NaN;']}, {'line_number': 293, 'new_lines': ['            return NaN;']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'insertions': [{'line_number': 256, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return createComplex(real / divisor.getReal(), imaginary / divisor.getImaginary());', '        }']}, {'line_number': 293, 'new_lines': ['            return createComplex(real / divisor.getReal(), imaginary / divisor.getImaginary());']}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'target_lines': [['256', '        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {'], ['257', '            return NaN;'], ['293', '            return NaN;'], ['82', '//'], ['105', '//']], 'insertions': [{'line_number': 82, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        ']}, {'line_number': 105, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        ']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'target_lines': [['256', '        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {'], ['257', '            return NaN;'], ['293', '            return NaN;'], ['82', '//'], ['105', '//']], 'insertions': [{'line_number': 82, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        ']}, {'line_number': 105, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        ']}, {'line_number': 256, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        ']}, {'line_number': 257, 'new_lines': ['            return NaN;']}, {'line_number': 293, 'new_lines': ['            return NaN;']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'target_lines': [['256', '        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {'], ['257', '            return NaN;'], ['293', '            return NaN;'], ['82', '//'], ['105', '//']], 'insertions': [{'line_number': 82, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return createComplex(real / divisor.getReal(), imaginary / divisor.getImaginary());', '        ']}, {'line_number': 105, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return createComplex(real / divisor.getReal(), imaginary / divisor.getImaginary());', '        ']}, {'line_number': 256, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return createComplex(real / divisor.getReal(), imaginary / divisor.getImaginary());', '        ']}, {'line_number': 257, 'new_lines': ['            return createComplex(real / divisor.getReal(), imaginary / divisor.getImaginary());']}, {'line_number': 293, 'new_lines': ['            return createComplex(real / divisor.getReal(), imaginary / divisor.getImaginary());']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'insertions': [{'line_number': 82, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return createComplex(real / divisor.getReal(), imaginary / divisor.getImaginary());', '        }']}, {'line_number': 105, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return createComplex(real / divisor.getReal(), imaginary / divisor.getImaginary());', '        }']}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'target_lines': [['256', '        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {'], ['257', '            return NaN;'], ['293', '            return NaN;'], ['82', '//'], ['105', '//']], 'insertions': [{'line_number': 82, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return createComplex(real / divisor.getReal(), imaginary / divisor.getImaginary());', '        ']}, {'line_number': 105, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return createComplex(real / divisor.getReal(), imaginary / divisor.getImaginary());', '        ']}, {'line_number': 256, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return createComplex(real / divisor.getReal(), imaginary / divisor.getImaginary());', '        ']}, {'line_number': 257, 'new_lines': ['            return createComplex(real / divisor.getReal(), imaginary / divisor.getImaginary());']}, {'line_number': 293, 'new_lines': ['            return createComplex(real / divisor.getReal(), imaginary / divisor.getImaginary());']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'insertions': [{'line_number': 82, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        }']}, {'line_number': 105, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        }']}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'target_lines': [['256', '        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {'], ['257', '            return NaN;'], ['293', '            return NaN;'], ['82', '//'], ['105', '//']], 'insertions': [{'line_number': 82, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        ']}, {'line_number': 105, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        ']}, {'line_number': 256, 'new_lines': ['        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {', '            return NaN;', '        ']}, {'line_number': 257, 'new_lines': ['            return NaN;']}, {'line_number': 293, 'new_lines': ['            return NaN;']}], 'deletions': [], 'modifications': []}]


