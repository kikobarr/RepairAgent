###Fix:
[{'file_name': 'org/apache/commons/math/geometry/euclidean/threed/Rotation.java', 'insertions': [{'line_number': 343, 'new_lines': ['        if (Math.abs(c) < tolerance) {', '            q0 = 1.0;', '            q1 = 0.0;', '            q2 = 0.0;', '            q3 = 0.0;', '            return;', '        }']}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/geometry/euclidean/threed/Rotation.java', 'target_lines': [['344', '  if (c == 0) {'], ['353', '    if (c == 0) {'], ['359', '      if (c == 0) {']], 'insertions': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/geometry/euclidean/threed/Rotation.java', 'target_lines': [['344', '  if (c == 0) {'], ['353', '    if (c == 0) {'], ['359', '      if (c == 0) {']], 'insertions': [{'line_number': 344, 'new_lines': ['        if (Math.abs(c) < tolerance) {', '            q0 = 1.0;', '            q1 = 0.0;', '            q2 = 0.0;', '            q3 = 0.0;', '            return;']}, {'line_number': 353, 'new_lines': ['        if (Math.abs(c) < tolerance) {', '            q0 = 1.0;', '            q1 = 0.0;', '            q2 = 0.0;', '            q3 = 0.0;', '            return;']}, {'line_number': 359, 'new_lines': ['        if (Math.abs(c) < tolerance) {', '            q0 = 1.0;', '            q1 = 0.0;', '            q2 = 0.0;', '            q3 = 0.0;', '            return;']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/geometry/euclidean/threed/Rotation.java', 'insertions': [{'line_number': 353, 'new_lines': ['        if (Math.abs(c) < tolerance) {', '            q0 = 1.0;', '            q1 = 0.0;', '            q2 = 0.0;', '            q3 = 0.0;', '            return;']}, {'line_number': 359, 'new_lines': ['        if (Math.abs(c) < tolerance) {', '            q0 = 1.0;', '            q1 = 0.0;', '            q2 = 0.0;', '            q3 = 0.0;', '            return;']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/geometry/euclidean/threed/Rotation.java', 'target_lines': [['344', '  if (c == 0) {'], ['353', '    if (c == 0) {'], ['359', '      if (c == 0) {']], 'insertions': [{'line_number': 344, 'new_lines': ['        if (Math.abs(c) < tolerance) {', '            q0 = 1.0;', '            q1 = 0.0;', '            q2 = 0.0;', '            q3 = 0.0;', '            return;']}, {'line_number': 353, 'new_lines': ['        if (Math.abs(c) < tolerance) {', '            q0 = 1.0;', '            q1 = 0.0;', '            q2 = 0.0;', '            q3 = 0.0;', '            return;']}, {'line_number': 359, 'new_lines': ['        if (Math.abs(c) < tolerance) {', '            q0 = 1.0;', '            q1 = 0.0;', '            q2 = 0.0;', '            q3 = 0.0;', '            return;']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/geometry/euclidean/threed/Rotation.java', 'insertions': [{'line_number': 344, 'new_lines': ['        if (Math.abs(c) < tolerance) {', '            q0 = 1.0;', '            q1 = 0.0;', '            q2 = 0.0;', '            q3 = 0.0;', '            return;']}, {'line_number': 353, 'new_lines': ['        if (Math.abs(c) < tolerance) {', '            q0 = 1.0;', '            q1 = 0.0;', '            q2 = 0.0;', '            q3 = 0.0;', '            return;']}, {'line_number': 359, 'new_lines': ['        if (Math.abs(c) < tolerance) {', '            q0 = 1.0;', '            q1 = 0.0;', '            q2 = 0.0;', '            q3 = 0.0;', '            return;']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/geometry/euclidean/threed/Rotation.java', 'insertions': [{'line_number': 344, 'new_lines': ['        if (Math.abs(c) < tolerance) {', '            q0 = 1.0;', '            q1 = 0.0;', '            q2 = 0.0;', '            q3 = 0.0;', '            return;']}, {'line_number': 353, 'new_lines': ['        if (Math.abs(c) < tolerance) {', '            q0 = 1.0;', '            q1 = 0.0;', '            q2 = 0.0;', '            q3 = 0.0;', '            return;']}, {'line_number': 359, 'new_lines': ['        if (Math.abs(c) < tolerance) {', '            q0 = 1.0;', '            q1 = 0.0;', '            q2 = 0.0;', '            q3 = 0.0;', '            return;']}], 'deletions': [], 'modifications': []}]

###Fix:
[]

###Fix:
[{'file_name': 'org/apache/commons/math/geometry/euclidean/threed/Rotation.java', 'insertions': [{'line_number': 343, 'new_lines': ['        if (Math.abs(c) < tolerance) {', '            q0 = 1.0;', '            q1 = 0.0;', '            q2 = 0.0;', '            q3 = 0.0;', '            return;']}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/geometry/euclidean/threed/Rotation.java', 'target_lines': [['344', '  if (c == 0) {'], ['353', '    if (c == 0) {'], ['359', '      if (c == 0) {']], 'insertions': [{'line_number': 344, 'new_lines': ['        if (Math.abs(c) < tolerance) {', '            q0 = 1.0;', '            q1 = 0.0;', '            q2 = 0.0;', '            q3 = 0.0;', '            return;']}, {'line_number': 353, 'new_lines': ['        if (Math.abs(c) < tolerance) {', '            q0 = 1.0;', '            q1 = 0.0;', '            q2 = 0.0;', '            q3 = 0.0;', '            return;']}, {'line_number': 359, 'new_lines': ['        if (Math.abs(c) < tolerance) {', '            q0 = 1.0;', '            q1 = 0.0;', '            q2 = 0.0;', '            q3 = 0.0;', '            return;']}], 'deletions': [], 'modifications': []}]


