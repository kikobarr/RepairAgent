###Fix:
[{'file_name': 'com/google/gson/TypeInfoFactory.java', 'insertions': [{'line_number': 111, 'new_lines': ['// Handle WildcardType differently\n', 'if (typeToEvaluate instanceof WildcardType) {\n', 'WildcardType castedType = (WildcardType) typeToEvaluate;\n', 'return getActualType(castedType.getUpperBounds()[0], parentType, rawParentClass);\n', '}']}]}]

###Fix:
[{'file_name': 'com/google/gson/TypeInfoFactory.java', 'target_lines': [['93', '//'], ['94', '//'], ['109', '//'], ['110', '//'], ['111', '//'], ['112', '//'], ['113', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'com/google/gson/TypeInfoFactory.java', 'target_lines': [['93', '//'], ['94', '//'], ['109', '//'], ['110', '//'], ['111', '//'], ['112', '//'], ['113', '//']], 'insertions': [{'line_number': 93, 'new_lines': ['// Inserted to fix the bug at line 93']}, {'line_number': 94, 'new_lines': ['// Inserted to fix the bug at line 94']}, {'line_number': 109, 'new_lines': ['// Inserted to fix the bug at line 109']}, {'line_number': 110, 'new_lines': ['// Inserted to fix the bug at line 110']}, {'line_number': 111, 'new_lines': ['// Inserted to fix the bug at line 111']}, {'line_number': 112, 'new_lines': ['// Inserted to fix the bug at line 112']}, {'line_number': 113, 'new_lines': ['// Inserted to fix the bug at line 113']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/gson/TypeInfoFactory.java', 'insertions': [{'line_number': 111, 'new_lines': ['// Handle WildcardType instances differently', 'if (typeToEvaluate instanceof WildcardType) {', 'WildcardType castedType = (WildcardType) typeToEvaluate;', 'return getActualType(castedType.getUpperBounds()[0], parentType, rawParentClass);', '}']}]}]

###Fix:
[{'file_name': 'com/google/gson/TypeInfoFactory.java', 'target_lines': [['93', '//'], ['94', '//'], ['109', '//'], ['110', '//'], ['111', '//'], ['112', '//'], ['113', '//']], 'insertions': [{'line_number': 93, 'new_lines': ['// Inserted to fix the bug at line 93']}, {'line_number': 94, 'new_lines': ['// Inserted to fix the bug at line 94']}, {'line_number': 109, 'new_lines': ['// Inserted to fix the bug at line 109']}, {'line_number': 110, 'new_lines': ['// Inserted to fix the bug at line 110']}, {'line_number': 111, 'new_lines': ['// Inserted to fix the bug at line 111']}, {'line_number': 112, 'new_lines': ['// Inserted to fix the bug at line 112']}, {'line_number': 113, 'new_lines': ['// Inserted to fix the bug at line 113']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/gson/TypeInfoFactory.java', 'insertions': [{'line_number': 111, 'new_lines': ['// Handle WildcardType instances differently', 'if (typeToEvaluate instanceof WildcardType) {', 'WildcardType castedType = (WildcardType) typeToEvaluate;', 'return getActualType(castedType.getUpperBounds()[0], parentType, rawParentClass);', '}']}]}]

###Fix:
[{'file_name': 'com/google/gson/TypeInfoFactory.java', 'target_lines': [['93', '//'], ['94', '//'], ['109', '//'], ['110', '//'], ['111', '//'], ['112', '//'], ['113', '//']], 'insertions': [{'line_number': 93, 'new_lines': ['// Inserted to fix the bug at line 93']}, {'line_number': 94, 'new_lines': ['// Inserted to fix the bug at line 94']}, {'line_number': 109, 'new_lines': ['// Inserted to fix the bug at line 109']}, {'line_number': 110, 'new_lines': ['// Inserted to fix the bug at line 110']}, {'line_number': 111, 'new_lines': ['// Inserted to fix the bug at line 111']}, {'line_number': 112, 'new_lines': ['// Inserted to fix the bug at line 112']}, {'line_number': 113, 'new_lines': ['// Inserted to fix the bug at line 113']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/gson/TypeInfoFactory.java', 'insertions': [{'line_number': 111, 'new_lines': ['// Handle WildcardType instances differently', 'if (typeToEvaluate instanceof WildcardType) {', 'WildcardType castedType = (WildcardType) typeToEvaluate;', 'return getActualType(castedType.getUpperBounds()[0], parentType, rawParentClass);', '}']}]}]

###Fix:
[{'file_name': 'com/google/gson/TypeInfoFactory.java', 'target_lines': [['93', '//'], ['94', '//'], ['109', '//'], ['110', '//'], ['111', '//'], ['112', '//'], ['113', '//']], 'insertions': [{'line_number': 93, 'new_lines': ['// Inserted to fix the bug at line 93']}, {'line_number': 94, 'new_lines': ['// Inserted to fix the bug at line 94']}, {'line_number': 109, 'new_lines': ['// Inserted to fix the bug at line 109']}, {'line_number': 110, 'new_lines': ['// Inserted to fix the bug at line 110']}, {'line_number': 111, 'new_lines': ['// Handle WildcardType instances differently', 'if (typeToEvaluate instanceof WildcardType) {', 'WildcardType castedType = (WildcardType) typeToEvaluate;', 'return getActualType(castedType.getUpperBounds()[0], parentType, rawParentClass);', '}']}, {'line_number': 112, 'new_lines': ['// Inserted to fix the bug at line 112']}, {'line_number': 113, 'new_lines': ['// Inserted to fix the bug at line 113']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/gson/TypeInfoFactory.java', 'insertions': [{'line_number': 111, 'new_lines': ['// Handle WildcardType instances differently', 'if (typeToEvaluate instanceof WildcardType) {', 'WildcardType castedType = (WildcardType) typeToEvaluate;', 'return getActualType(castedType.getUpperBounds()[0], parentType, rawParentClass);', '}']}]}]

###Fix:
[{'file_name': 'com/google/gson/TypeInfoFactory.java', 'target_lines': [['93', '//'], ['94', '//'], ['109', '//'], ['110', '//'], ['111', '//'], ['112', '//'], ['113', '//']], 'insertions': [{'line_number': 93, 'new_lines': ['// Inserted to fix the bug at line 93']}, {'line_number': 94, 'new_lines': ['// Inserted to fix the bug at line 94']}, {'line_number': 109, 'new_lines': ['// Inserted to fix the bug at line 109']}, {'line_number': 110, 'new_lines': ['// Inserted to fix the bug at line 110']}, {'line_number': 111, 'new_lines': ['// Handle WildcardType instances differently', 'if (typeToEvaluate instanceof WildcardType) {', 'WildcardType castedType = (WildcardType) typeToEvaluate;', 'return getActualType(castedType.getUpperBounds()[0], parentType, rawParentClass);', '}']}, {'line_number': 112, 'new_lines': ['// Inserted to fix the bug at line 112']}, {'line_number': 113, 'new_lines': ['// Inserted to fix the bug at line 113']}], 'deletions': [], 'modifications': []}]


