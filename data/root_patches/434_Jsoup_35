###Fix:
[{'file_name': 'org.jsoup.parser.HtmlTreeBuilderState.java', 'insertions': [{'line_number': 726, 'new_lines': ['                            adopter.appendChild(childNode); // append will reparent. thus the clone to avoid concurrent mod.\n']}]}]

###Fix:
[{'file_name': 'org.jsoup.parser.HtmlTreeBuilderState.java', 'insertions': [{'line_number': 726, 'new_lines': ['adopter.appendChild(childNode); // append will reparent. thus the clone to avoid concurrent mod.']}]}]

###Fix:
[{'file_name': 'org.jsoup.parser.HtmlTreeBuilderState.java', 'insertions': [{'line_number': 726, 'new_lines': ['adopter.appendChild(childNode); // append will reparent. thus the clone to avoid concurrent mod.']}]}]

###Fix:
[{'file_name': 'org.jsoup.parser.HtmlTreeBuilderState.java', 'insertions': [{'line_number': 726, 'new_lines': ['adopter.appendChild(childNode.clone()); // append will reparent. Thus, clone to avoid concurrent modification.']}]}]

###Fix:
[{'file_name': 'org.jsoup.parser.HtmlTreeBuilderState.java', 'insertions': [{'line_number': 726, 'new_lines': ['adopter.appendChild(childNode.clone()); // append will reparent. Thus, clone to avoid concurrent modification.']}]}]

###Fix:
[{'file_name': 'org.jsoup.parser.HtmlTreeBuilderState.java', 'insertions': [{'line_number': 726, 'new_lines': ['adopter.appendChild(childNode.clone()); // append will reparent. Thus, clone to avoid concurrent modification.']}]}]

###Fix:
[{'file_name': 'org.jsoup.parser.HtmlTreeBuilderState.java', 'insertions': [{'line_number': 726, 'new_lines': ['adopter.appendChild(childNode.clone()); // append will reparent. Thus, clone to avoid concurrent modification.']}]}]

###Fix:
[{'file_name': 'org.jsoup.parser.HtmlTreeBuilderState.java', 'insertions': [{'line_number': 726, 'new_lines': ['adopter.appendChild(childNode.clone()); // append will reparent. Thus, clone to avoid concurrent modification.']}]}]

###Fix:
[{'file_name': 'org.jsoup.parser.HtmlTreeBuilderState.java', 'insertions': [{'line_number': 726, 'new_lines': ['adopter.appendChild(childNode.clone()); // append will reparent. Thus, clone to avoid concurrent modification.']}]}]

###Fix:
[{'file_name': 'org.jsoup.parser.HtmlTreeBuilderState.java', 'insertions': [{'line_number': 726, 'new_lines': ['adopter.appendChild(childNode.clone()); // append will reparent. Thus, clone to avoid concurrent modification.']}]}]

###Fix:
[{'file_name': 'org.jsoup.parser.HtmlTreeBuilderState.java', 'insertions': [{'line_number': 726, 'new_lines': ['adopter.appendChild(childNode.clone()); // append will reparent. Thus, clone to avoid concurrent modification.']}]}]

###Fix:
[{'file_name': 'org.jsoup.parser.HtmlTreeBuilderState.java', 'insertions': [{'line_number': 726, 'new_lines': ['adopter.appendChild(childNode.clone()); // append will reparent. Thus, clone to avoid concurrent modification.']}]}]

###Fix:
[{'file_name': 'org.jsoup.parser.HtmlTreeBuilderState.java', 'insertions': [{'line_number': 726, 'new_lines': ['adopter.appendChild(childNode.clone()); // append will reparent. Thus, clone to avoid concurrent modification.']}]}]

###Fix:
[{'file_name': 'org.jsoup.parser.HtmlTreeBuilderState.java', 'insertions': [{'line_number': 728, 'new_lines': ['adopter.appendChild(childNode.clone()); // append will reparent. Thus, clone to avoid concurrent modification.']}]}]

###Fix:
[{'file_name': 'org.jsoup.parser.HtmlTreeBuilderState.java', 'insertions': [{'line_number': 726, 'new_lines': ['adopter.appendChild(childNode.clone()); // append will reparent. Thus, clone to avoid concurrent modification.']}]}]

###Fix:
[{'file_name': 'org.jsoup.parser.HtmlTreeBuilderState.java', 'insertions': [{'line_number': 726, 'new_lines': ['adopter.appendChild(childNode.clone()); // append will reparent. Thus, clone to avoid concurrent modification.']}]}]

###Fix:
[{'file_name': 'org.jsoup.parser.HtmlTreeBuilderState.java', 'insertions': [{'line_number': 726, 'new_lines': ['adopter.appendChild(childNode.clone()); // append will reparent. Thus, clone to avoid concurrent modification.']}]}]

###Fix:
[{'file_name': 'org.jsoup.parser.HtmlTreeBuilderState.java', 'insertions': [{'line_number': 726, 'new_lines': ['adopter.appendChild(childNode.clone()); // append will reparent. Thus, clone to avoid concurrent modification.']}]}]

###Fix:
[{'file_name': 'org.jsoup.parser.HtmlTreeBuilderState.java', 'insertions': [{'line_number': 726, 'new_lines': ['adopter.appendChild(childNode.clone()); // append will reparent. Thus, clone to avoid concurrent modification.']}]}]


