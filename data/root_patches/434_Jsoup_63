###Fix:
[{'file_name': 'org/jsoup/parser/Tokeniser.java', 'modifications': [{'line_number': 45, 'modified_line': '            error("Tag cannot be self closing; not a void tag");'}, {'line_number': 77, 'modified_line': '                selfClosingFlagAcknowledged = true;'}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'target_lines': [['227', '                if (tag.isSelfClosing()) tokeniser.acknowledgeSelfClosingFlag();'], ['229', '            else {'], ['231', '                tokeniser.acknowledgeSelfClosingFlag();'], ['232', '            }']], 'insertions': [], 'deletions': [], 'modifications': []}, {'file_name': 'org/jsoup/parser/Tokeniser.java', 'target_lines': [['36', '    private boolean selfClosingFlagAcknowledged = true;'], ['44', '        if (!selfClosingFlagAcknowledged) {'], ['45', '            error("Self closing flag not acknowledged");'], ['46', '            selfClosingFlagAcknowledged = true;'], ['47', '        }'], ['76', '            if (startTag.selfClosing)'], ['77', '                selfClosingFlagAcknowledged = false;'], ['124', '    void acknowledgeSelfClosingFlag() {'], ['125', '        selfClosingFlagAcknowledged = true;'], ['126', '    }']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/Tokeniser.java', 'modifications': [{'line_number': 45, 'modified_line': '            error("Tag cannot be self closing; not a void tag");'}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'target_lines': [['227', '                if (tag.isSelfClosing()) tokeniser.acknowledgeSelfClosingFlag();'], ['229', '            else {'], ['231', '                tokeniser.acknowledgeSelfClosingFlag();'], ['232', '            }']], 'insertions': [], 'deletions': [], 'modifications': []}, {'file_name': 'org/jsoup/parser/Tokeniser.java', 'target_lines': [['36', '    private boolean selfClosingFlagAcknowledged = true;'], ['44', '        if (!selfClosingFlagAcknowledged) {'], ['45', '            error("Tag cannot be self closing; not a void tag");'], ['46', '            selfClosingFlagAcknowledged = true;'], ['47', '        }'], ['76', '            if (startTag.selfClosing)'], ['77', '                selfClosingFlagAcknowledged = false;'], ['124', '    void acknowledgeSelfClosingFlag() {'], ['125', '        selfClosingFlagAcknowledged = true;'], ['126', '    }']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 45, 'modified_line': '            error("Tag cannot be self closing; not a void tag");'}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'target_lines': [['227', '                if (tag.isSelfClosing()) tokeniser.acknowledgeSelfClosingFlag();'], ['229', '            else {'], ['231', '                tokeniser.acknowledgeSelfClosingFlag();'], ['232', '            }']], 'insertions': [{'line_number': 228, 'new_lines': ['                if (tag.isSelfClosing()) {', '                    tokeniser.acknowledgeSelfClosingFlag();', '                }']}], 'deletions': [], 'modifications': []}, {'file_name': 'org/jsoup/parser/Tokeniser.java', 'target_lines': [['36', '    private boolean selfClosingFlagAcknowledged = true;'], ['44', '        if (!selfClosingFlagAcknowledged) {'], ['45', '            error("Self closing flag not acknowledged");'], ['46', '            selfClosingFlagAcknowledged = true;'], ['47', '        }'], ['76', '            if (startTag.selfClosing)'], ['77', '                selfClosingFlagAcknowledged = false;'], ['124', '    void acknowledgeSelfClosingFlag() {'], ['125', '        selfClosingFlagAcknowledged = true;'], ['126', '    }']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 45, 'modified_line': '            error("Tag cannot be self closing; not a void tag");'}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'target_lines': [['227', '                if (tag.isSelfClosing()) tokeniser.acknowledgeSelfClosingFlag();'], ['229', '            else {'], ['231', '                tokeniser.acknowledgeSelfClosingFlag();'], ['232', '            }']], 'insertions': [{'line_number': 228, 'new_lines': ['                if (tag.isSelfClosing()) {', '                    tokeniser.acknowledgeSelfClosingFlag();', '                }']}], 'deletions': [], 'modifications': []}, {'file_name': 'org/jsoup/parser/Tokeniser.java', 'target_lines': [['36', '    private boolean selfClosingFlagAcknowledged = true;'], ['44', '        if (!selfClosingFlagAcknowledged) {'], ['45', '            error("Self closing flag not acknowledged");'], ['46', '            selfClosingFlagAcknowledged = true;'], ['47', '        }'], ['76', '            if (startTag.selfClosing)'], ['77', '                selfClosingFlagAcknowledged = false;'], ['124', '    void acknowledgeSelfClosingFlag() {'], ['125', '        selfClosingFlagAcknowledged = true;'], ['126', '    }']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 45, 'modified_line': '            error("Tag cannot be self closing; not a void tag");'}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'target_lines': [['227', '                if (tag.isSelfClosing()) tokeniser.acknowledgeSelfClosingFlag();'], ['229', '            else {'], ['231', '                tokeniser.acknowledgeSelfClosingFlag();'], ['232', '            }']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 227, 'modified_line': '                if (tag.isSelfClosing()) { tokeniser.acknowledgeSelfClosingFlag(); }'}, {'line_number': 231, 'modified_line': '                if (tag.isSelfClosing()) { tokeniser.acknowledgeSelfClosingFlag(); }'}]}, {'file_name': 'org/jsoup/parser/Tokeniser.java', 'target_lines': [['36', '    private boolean selfClosingFlagAcknowledged = true;'], ['44', '        if (!selfClosingFlagAcknowledged) {'], ['45', '            error("Self closing flag not acknowledged");'], ['46', '            selfClosingFlagAcknowledged = true;'], ['47', '        }'], ['76', '            if (startTag.selfClosing)'], ['77', '                selfClosingFlagAcknowledged = false;'], ['124', '    void acknowledgeSelfClosingFlag() {'], ['125', '        selfClosingFlagAcknowledged = true;'], ['126', '    }']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 45, 'modified_line': '            error("Tag cannot be self closing; not a void tag");'}, {'line_number': 124, 'modified_line': '    void acknowledgeSelfClosingFlag() { selfClosingFlagAcknowledged = true; }'}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'target_lines': [['227', '                if (tag.isSelfClosing()) tokeniser.acknowledgeSelfClosingFlag();'], ['229', '            else {'], ['231', '                tokeniser.acknowledgeSelfClosingFlag();'], ['232', '            }']], 'insertions': [{'line_number': 228, 'new_lines': ['                if (tag.isSelfClosing()) {', '                    tokeniser.acknowledgeSelfClosingFlag();', '                }']}], 'deletions': [], 'modifications': [{'line_number': 227, 'modified_line': '                if (tag.isSelfClosing()) { tokeniser.acknowledgeSelfClosingFlag(); }'}, {'line_number': 229, 'modified_line': '            else { tokeniser.acknowledgeSelfClosingFlag(); }'}, {'line_number': 231, 'modified_line': '                if (tag.isSelfClosing()) { tokeniser.acknowledgeSelfClosingFlag(); }'}, {'line_number': 232, 'modified_line': '            else { tokeniser.acknowledgeSelfClosingFlag(); }'}]}, {'file_name': 'org/jsoup/parser/Tokeniser.java', 'target_lines': [['36', '    private boolean selfClosingFlagAcknowledged = true;'], ['44', '        if (!selfClosingFlagAcknowledged) {'], ['45', '            error("Self closing flag not acknowledged");'], ['46', '            selfClosingFlagAcknowledged = true;'], ['47', '        }'], ['76', '            if (startTag.selfClosing)'], ['77', '                selfClosingFlagAcknowledged = false;'], ['124', '    void acknowledgeSelfClosingFlag() {'], ['125', '        selfClosingFlagAcknowledged = true;'], ['126', '    }']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 45, 'modified_line': '            error("Tag cannot be self closing; not a void tag");'}, {'line_number': 124, 'modified_line': '    void acknowledgeSelfClosingFlag() { selfClosingFlagAcknowledged = true; }'}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'target_lines': [['227', '                if (tag.isSelfClosing()) tokeniser.acknowledgeSelfClosingFlag();'], ['229', '            else {'], ['231', '                tokeniser.acknowledgeSelfClosingFlag();'], ['232', '            }']], 'insertions': [{'line_number': 228, 'new_lines': ['                if (tag.isSelfClosing()) {', '                    tokeniser.acknowledgeSelfClosingFlag();', '                }']}], 'deletions': [], 'modifications': [{'line_number': 227, 'modified_line': '                if (tag.isSelfClosing()) { tokeniser.acknowledgeSelfClosingFlag(); }'}, {'line_number': 229, 'modified_line': '            else { tokeniser.acknowledgeSelfClosingFlag(); }'}, {'line_number': 231, 'modified_line': '                if (tag.isSelfClosing()) { tokeniser.acknowledgeSelfClosingFlag(); }'}, {'line_number': 232, 'modified_line': '            else { tokeniser.acknowledgeSelfClosingFlag(); }'}]}, {'file_name': 'org/jsoup/parser/Tokeniser.java', 'target_lines': [['36', '    private boolean selfClosingFlagAcknowledged = true;'], ['44', '        if (!selfClosingFlagAcknowledged) {'], ['45', '            error("Self closing flag not acknowledged");'], ['46', '            selfClosingFlagAcknowledged = true;'], ['47', '        }'], ['76', '            if (startTag.selfClosing)'], ['77', '                selfClosingFlagAcknowledged = false;'], ['124', '    void acknowledgeSelfClosingFlag() {'], ['125', '        selfClosingFlagAcknowledged = true;'], ['126', '    }']], 'insertions': [{'line_number': 45, 'new_lines': ['            error("Tag cannot be self closing; not a void tag");']}, {'line_number': 124, 'new_lines': ['    void acknowledgeSelfClosingFlag() { selfClosingFlagAcknowledged = true; }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'target_lines': [['227', '                if (tag.isSelfClosing()) tokeniser.acknowledgeSelfClosingFlag();'], ['229', '            else {'], ['231', '                tokeniser.acknowledgeSelfClosingFlag();'], ['232', '            }']], 'insertions': [{'line_number': 228, 'new_lines': ['                if (tag.isSelfClosing()) {', '                    tokeniser.acknowledgeSelfClosingFlag();', '                }']}, {'line_number': 229, 'new_lines': ['            else {', '                tokeniser.acknowledgeSelfClosingFlag();', '            }']}, {'line_number': 231, 'new_lines': ['                if (tag.isSelfClosing()) {', '                    tokeniser.acknowledgeSelfClosingFlag();', '                }']}, {'line_number': 232, 'new_lines': ['            else {', '                tokeniser.acknowledgeSelfClosingFlag();', '            }']}], 'deletions': [], 'modifications': []}, {'file_name': 'org/jsoup/parser/Tokeniser.java', 'target_lines': [['36', '    private boolean selfClosingFlagAcknowledged = true;'], ['44', '        if (!selfClosingFlagAcknowledged) {'], ['45', '            error("Self closing flag not acknowledged");'], ['46', '            selfClosingFlagAcknowledged = true;'], ['47', '        }'], ['76', '            if (startTag.selfClosing)'], ['77', '                selfClosingFlagAcknowledged = false;'], ['124', '    void acknowledgeSelfClosingFlag() {'], ['125', '        selfClosingFlagAcknowledged = true;'], ['126', '    }']], 'insertions': [{'line_number': 45, 'new_lines': ['            error("Tag cannot be self closing; not a void tag");']}, {'line_number': 124, 'new_lines': ['    void acknowledgeSelfClosingFlag() { selfClosingFlagAcknowledged = true; }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'target_lines': [['227', '                if (tag.isSelfClosing()) tokeniser.acknowledgeSelfClosingFlag();'], ['229', '            else {'], ['231', '                tokeniser.acknowledgeSelfClosingFlag();'], ['232', '            }']], 'insertions': [{'line_number': 228, 'new_lines': ['                if (tag.isSelfClosing()) {', '                    tokeniser.acknowledgeSelfClosingFlag();', '                }']}, {'line_number': 229, 'new_lines': ['            else {', '                tokeniser.acknowledgeSelfClosingFlag();', '            ']}, {'line_number': 231, 'new_lines': ['                if (tag.isSelfClosing()) {', '                    tokeniser.acknowledgeSelfClosingFlag();', '                }']}, {'line_number': 232, 'new_lines': ['            else {', '                tokeniser.acknowledgeSelfClosingFlag();', '            }']}], 'deletions': [], 'modifications': []}, {'file_name': 'org/jsoup/parser/Tokeniser.java', 'target_lines': [['36', '    private boolean selfClosingFlagAcknowledged = true;'], ['44', '        if (!selfClosingFlagAcknowledged) {'], ['45', '            error("Self closing flag not acknowledged");'], ['46', '            selfClosingFlagAcknowledged = true;'], ['47', '        }'], ['76', '            if (startTag.selfClosing)'], ['77', '                selfClosingFlagAcknowledged = false;'], ['124', '    void acknowledgeSelfClosingFlag() {'], ['125', '        selfClosingFlagAcknowledged = true;'], ['126', '    }']], 'insertions': [{'line_number': 45, 'new_lines': ['            error("Tag cannot be self closing; not a void tag");']}, {'line_number': 124, 'new_lines': ['    void acknowledgeSelfClosingFlag() { selfClosingFlagAcknowledged = true; ']}, {'line_number': 76, 'new_lines': ['            if (startTag.selfClosing) {', '                selfClosingFlagAcknowledged = false;']}, {'line_number': 77, 'new_lines': ['                selfClosingFlagAcknowledged = true;']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'target_lines': [['227', '                if (tag.isSelfClosing()) tokeniser.acknowledgeSelfClosingFlag();'], ['229', '            else {'], ['231', '                tokeniser.acknowledgeSelfClosingFlag();'], ['232', '            ']], 'insertions': [{'line_number': 228, 'new_lines': ['                if (tag.isSelfClosing()) {', '                    tokeniser.acknowledgeSelfClosingFlag();', '                }']}, {'line_number': 229, 'new_lines': ['            else {', '                tokeniser.acknowledgeSelfClosingFlag();', '            ']}, {'line_number': 231, 'new_lines': ['                if (tag.isSelfClosing()) {', '                    tokeniser.acknowledgeSelfClosingFlag();', '                }']}, {'line_number': 232, 'new_lines': ['            else {', '                tokeniser.acknowledgeSelfClosingFlag();', '            }']}], 'deletions': [], 'modifications': []}, {'file_name': 'org/jsoup/parser/Tokeniser.java', 'target_lines': [['36', '    private boolean selfClosingFlagAcknowledged = true;'], ['44', '        if (!selfClosingFlagAcknowledged) {'], ['45', '            error("Self closing flag not acknowledged");'], ['46', '            selfClosingFlagAcknowledged = true;'], ['47', '        '], ['76', '            if (startTag.selfClosing)'], ['77', '                selfClosingFlagAcknowledged = false;'], ['124', '    void acknowledgeSelfClosingFlag() {'], ['125', '        selfClosingFlagAcknowledged = true;'], ['126', '    ']], 'insertions': [{'line_number': 47, 'new_lines': ['            error("Tag cannot be self closing; not a void tag");']}, {'line_number': 126, 'new_lines': ['        selfClosingFlagAcknowledged = true;']}, {'line_number': 76, 'new_lines': ['            if (startTag.selfClosing) {', '                selfClosingFlagAcknowledged = false;']}, {'line_number': 77, 'new_lines': ['                selfClosingFlagAcknowledged = true;']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'target_lines': [['227', '                if (tag.isSelfClosing()) tokeniser.acknowledgeSelfClosingFlag();'], ['229', '            else {'], ['231', '                tokeniser.acknowledgeSelfClosingFlag();'], ['232', '            ']], 'insertions': [{'line_number': 228, 'new_lines': ['                if (tag.isSelfClosing()) {', '                    tokeniser.acknowledgeSelfClosingFlag();', '                }']}, {'line_number': 229, 'new_lines': ['            else {', '                tokeniser.acknowledgeSelfClosingFlag();', '            ']}, {'line_number': 231, 'new_lines': ['                if (tag.isSelfClosing()) {', '                    tokeniser.acknowledgeSelfClosingFlag();', '                }']}, {'line_number': 232, 'new_lines': ['            else {', '                tokeniser.acknowledgeSelfClosingFlag();', '            }']}], 'deletions': [], 'modifications': []}, {'file_name': 'org/jsoup/parser/Tokeniser.java', 'target_lines': [['36', '    private boolean selfClosingFlagAcknowledged = true;'], ['44', '        if (!selfClosingFlagAcknowledged) {'], ['45', '            error("Self closing flag not acknowledged");'], ['46', '            selfClosingFlagAcknowledged = true;'], ['47', '        '], ['76', '            if (startTag.selfClosing)'], ['77', '                selfClosingFlagAcknowledged = false;'], ['124', '    void acknowledgeSelfClosingFlag() {'], ['125', '        selfClosingFlagAcknowledged = true;'], ['126', '    ']], 'insertions': [{'line_number': 47, 'new_lines': ['            error("Tag cannot be self closing; not a void tag");']}, {'line_number': 126, 'new_lines': ['        selfClosingFlagAcknowledged = true;']}, {'line_number': 76, 'new_lines': ['            if (startTag.selfClosing) {', '                selfClosingFlagAcknowledged = false;']}, {'line_number': 77, 'new_lines': ['                selfClosingFlagAcknowledged = true;']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'target_lines': [['227', '                if (tag.isSelfClosing()) tokeniser.acknowledgeSelfClosingFlag();'], ['229', '            else {'], ['231', '                tokeniser.acknowledgeSelfClosingFlag();'], ['232', '            ']], 'insertions': [{'line_number': 228, 'new_lines': ['                if (tag.isSelfClosing()) {', '                    tokeniser.acknowledgeSelfClosingFlag();', '                ']}, {'line_number': 229, 'new_lines': ['            else {', '                tokeniser.acknowledgeSelfClosingFlag();', '            ']}, {'line_number': 231, 'new_lines': ['                if (tag.isSelfClosing()) {', '                    tokeniser.acknowledgeSelfClosingFlag();', '                ']}, {'line_number': 232, 'new_lines': ['            else {', '                tokeniser.acknowledgeSelfClosingFlag();', '            ']}], 'deletions': [], 'modifications': []}, {'file_name': 'org/jsoup/parser/Tokeniser.java', 'target_lines': [['36', '    private boolean selfClosingFlagAcknowledged = true;'], ['44', '        if (!selfClosingFlagAcknowledged) {'], ['45', '            error("Self closing flag not acknowledged");'], ['46', '            selfClosingFlagAcknowledged = true;'], ['47', '        '], ['76', '            if (startTag.selfClosing)'], ['77', '                selfClosingFlagAcknowledged = false;'], ['124', '    void acknowledgeSelfClosingFlag() {'], ['125', '        selfClosingFlagAcknowledged = true;'], ['126', '    ']], 'insertions': [{'line_number': 47, 'new_lines': ['            error("Tag cannot be self closing; not a void tag");']}, {'line_number': 126, 'new_lines': ['        selfClosingFlagAcknowledged = true;']}, {'line_number': 76, 'new_lines': ['            if (startTag.selfClosing) {', '                selfClosingFlagAcknowledged = false;']}, {'line_number': 77, 'new_lines': ['                selfClosingFlagAcknowledged = true;']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'target_lines': [['227', '                if (tag.isSelfClosing()) tokeniser.acknowledgeSelfClosingFlag();'], ['229', '            else {'], ['231', '                tokeniser.acknowledgeSelfClosingFlag();'], ['232', '            ']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 227, 'modified_line': '                if (tag.isSelfClosing()) { tokeniser.acknowledgeSelfClosingFlag(); }'}, {'line_number': 229, 'modified_line': '            else { tokeniser.acknowledgeSelfClosingFlag(); }'}, {'line_number': 231, 'modified_line': '                if (tag.isSelfClosing()) { tokeniser.acknowledgeSelfClosingFlag(); }'}, {'line_number': 232, 'modified_line': '            else { tokeniser.acknowledgeSelfClosingFlag(); }'}]}, {'file_name': 'org/jsoup/parser/Tokeniser.java', 'target_lines': [['36', '    private boolean selfClosingFlagAcknowledged = true;'], ['44', '        if (!selfClosingFlagAcknowledged) {'], ['45', '            error("Self closing flag not acknowledged");'], ['46', '            selfClosingFlagAcknowledged = true;'], ['47', '        '], ['76', '            if (startTag.selfClosing)'], ['77', '                selfClosingFlagAcknowledged = false;'], ['124', '    void acknowledgeSelfClosingFlag() {'], ['125', '        selfClosingFlagAcknowledged = true;'], ['126', '    ']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 45, 'modified_line': '            error("Tag cannot be self closing; not a void tag");'}, {'line_number': 124, 'modified_line': '    void acknowledgeSelfClosingFlag() { selfClosingFlagAcknowledged = true; }'}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'target_lines': [['227', '                if (tag.isSelfClosing()) tokeniser.acknowledgeSelfClosingFlag();'], ['229', '            else {'], ['231', '                tokeniser.acknowledgeSelfClosingFlag();'], ['232', '            ']], 'insertions': [{'line_number': 228, 'new_lines': ['                if (tag.isSelfClosing()) {', '                    tokeniser.acknowledgeSelfClosingFlag();', '                }']}, {'line_number': 229, 'new_lines': ['            else {', '                tokeniser.acknowledgeSelfClosingFlag();', '            ']}, {'line_number': 231, 'new_lines': ['                if (tag.isSelfClosing()) {', '                    tokeniser.acknowledgeSelfClosingFlag();', '                ']}, {'line_number': 232, 'new_lines': ['            else {', '                tokeniser.acknowledgeSelfClosingFlag();', '            ']}], 'deletions': [], 'modifications': []}, {'file_name': 'org/jsoup/parser/Tokeniser.java', 'target_lines': [['36', '    private boolean selfClosingFlagAcknowledged = true;'], ['44', '        if (!selfClosingFlagAcknowledged) {'], ['45', '            error("Self closing flag not acknowledged");'], ['46', '            selfClosingFlagAcknowledged = true;'], ['47', '        '], ['76', '            if (startTag.selfClosing)'], ['77', '                selfClosingFlagAcknowledged = false;'], ['124', '    void acknowledgeSelfClosingFlag() {'], ['125', '        selfClosingFlagAcknowledged = true;'], ['126', '    ']], 'insertions': [{'line_number': 47, 'new_lines': ['            error("Tag cannot be self closing; not a void tag");']}, {'line_number': 126, 'new_lines': ['        selfClosingFlagAcknowledged = true;']}, {'line_number': 76, 'new_lines': ['            if (startTag.selfClosing) {', '                selfClosingFlagAcknowledged = false;']}, {'line_number': 77, 'new_lines': ['                selfClosingFlagAcknowledged = true;']}], 'deletions': [], 'modifications': []}]

###Fix:
[]

###Fix:
[{'file_name': 'org/jsoup/parser/Tokeniser.java', 'modifications': [{'line_number': 124, 'modified_line': '    void acknowledgeSelfClosingFlag() { selfClosingFlagAcknowledged = true; }'}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'target_lines': [['227', '                if (tag.isSelfClosing()) tokeniser.acknowledgeSelfClosingFlag();'], ['229', '            else {'], ['231', '                tokeniser.acknowledgeSelfClosingFlag();'], ['232', '            ']], 'insertions': [], 'deletions': [], 'modifications': []}, {'file_name': 'org/jsoup/parser/Tokeniser.java', 'target_lines': [['36', '    private boolean selfClosingFlagAcknowledged = true;'], ['44', '        if (!selfClosingFlagAcknowledged) {'], ['45', '            error("Self closing flag not acknowledged");'], ['46', '            selfClosingFlagAcknowledged = true;'], ['47', '        '], ['76', '            if (startTag.selfClosing)'], ['77', '                selfClosingFlagAcknowledged = false;'], ['124', '    void acknowledgeSelfClosingFlag() {'], ['125', '        selfClosingFlagAcknowledged = true;'], ['126', '    ']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'target_lines': [['227', '                if (tag.isSelfClosing()) tokeniser.acknowledgeSelfClosingFlag();'], ['229', '            else {'], ['231', '                tokeniser.acknowledgeSelfClosingFlag();'], ['232', '            ']], 'insertions': [], 'deletions': [], 'modifications': []}, {'file_name': 'org/jsoup/parser/Tokeniser.java', 'target_lines': [['36', '    private boolean selfClosingFlagAcknowledged = true;'], ['44', '        if (!selfClosingFlagAcknowledged) {'], ['45', '            error("Self closing flag not acknowledged");'], ['46', '            selfClosingFlagAcknowledged = true;'], ['47', '        '], ['76', '            if (startTag.selfClosing)'], ['77', '                selfClosingFlagAcknowledged = false;'], ['124', '    void acknowledgeSelfClosingFlag() {'], ['125', '        selfClosingFlagAcknowledged = true;'], ['126', '    ']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'target_lines': [['227', '                if (tag.isSelfClosing()) tokeniser.acknowledgeSelfClosingFlag();'], ['229', '            else {'], ['231', '                tokeniser.acknowledgeSelfClosingFlag();'], ['232', '            ']], 'insertions': [{'line_number': 228, 'new_lines': ['                if (tag.isSelfClosing()) {', '                    tokeniser.acknowledgeSelfClosingFlag();', '                ']}, {'line_number': 229, 'new_lines': ['            else {', '                tokeniser.acknowledgeSelfClosingFlag();', '            ']}, {'line_number': 231, 'new_lines': ['                if (tag.isSelfClosing()) {', '                    tokeniser.acknowledgeSelfClosingFlag();', '                ']}, {'line_number': 232, 'new_lines': ['            else {', '                tokeniser.acknowledgeSelfClosingFlag();', '            ']}], 'deletions': [], 'modifications': []}, {'file_name': 'org/jsoup/parser/Tokeniser.java', 'target_lines': [['36', '    private boolean selfClosingFlagAcknowledged = true;'], ['44', '        if (!selfClosingFlagAcknowledged) {'], ['45', '            error("Self closing flag not acknowledged");'], ['46', '            selfClosingFlagAcknowledged = true;'], ['47', '        '], ['76', '            if (startTag.selfClosing)'], ['77', '                selfClosingFlagAcknowledged = false;'], ['124', '    void acknowledgeSelfClosingFlag() {'], ['125', '        selfClosingFlagAcknowledged = true;'], ['126', '    ']], 'insertions': [{'line_number': 47, 'new_lines': ['            error("Tag cannot be self closing; not a void tag");']}, {'line_number': 126, 'new_lines': ['        selfClosingFlagAcknowledged = true;']}, {'line_number': 76, 'new_lines': ['            if (startTag.selfClosing) {', '                selfClosingFlagAcknowledged = false;']}, {'line_number': 77, 'new_lines': ['                selfClosingFlagAcknowledged = true;']}], 'deletions': [], 'modifications': []}]


