###Fix:
[{'file_name': 'org/jsoup/parser/XmlTreeBuilder.java', 'insertions': [{'line_number': 91, 'new_lines': ['        if (doc.children().size() > 0) {', '            Element el = doc.child(0);', '            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));', '            insert.attributes().addAll(el.attributes());', '        }']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/XmlTreeBuilder.java', 'insertions': [{'line_number': 91, 'new_lines': ['        if (!doc.children().isEmpty()) {', '            Element el = doc.child(0);', '            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));', '            insert.attributes().addAll(el.attributes());', '        }']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/XmlTreeBuilder.java', 'insertions': [{'line_number': 91, 'new_lines': ['        if (doc != null && !doc.children().isEmpty()) {', '            Element el = doc.child(0);', '            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));', '            insert.attributes().addAll(el.attributes());', '        }']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/XmlTreeBuilder.java', 'insertions': [{'line_number': 91, 'new_lines': ['        if (doc != null && doc.children().size() > 0) {', '            Element el = doc.child(0);', '            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));', '            insert.attributes().addAll(el.attributes());', '        }']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/XmlTreeBuilder.java', 'insertions': [{'line_number': 91, 'new_lines': ['        if (doc != null && doc.children().size() > 0) {', '            Element el = doc.child(0);', '            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));', '            insert.attributes().addAll(el.attributes());', '        }']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/XmlTreeBuilder.java', 'insertions': [{'line_number': 91, 'new_lines': ['        if (doc != null && !doc.children().isEmpty()) {', '            Element el = doc.child(0);', '            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));', '            insert.attributes().addAll(el.attributes());', '        }']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/XmlTreeBuilder.java', 'insertions': [{'line_number': 91, 'new_lines': ['        if (doc != null && !doc.children().isEmpty()) {', '            Element el = doc.child(0);', '            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));', '            insert.attributes().addAll(el.attributes());', '        }']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/XmlTreeBuilder.java', 'insertions': [{'line_number': 91, 'new_lines': ['        if (doc != null && !doc.children().isEmpty()) {', '            Element el = doc.child(0);', '            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));', '            insert.attributes().addAll(el.attributes());', '        }']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/XmlTreeBuilder.java', 'insertions': [{'line_number': 91, 'new_lines': ['        if (doc != null && !doc.children().isEmpty()) {', '            Element el = doc.child(0);', '            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));', '            insert.attributes().addAll(el.attributes());', '        }']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/XmlTreeBuilder.java', 'insertions': [{'line_number': 91, 'new_lines': ['        if (doc != null && !doc.children().isEmpty()) {', '            Element el = doc.child(0);', '            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));', '            insert.attributes().addAll(el.attributes());', '        }']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/XmlTreeBuilder.java', 'insertions': [{'line_number': 91, 'new_lines': ['        if (doc != null && !doc.children().isEmpty()) {', '            Element el = doc.child(0);', '            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));', '            insert.attributes().addAll(el.attributes());', '        }']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/XmlTreeBuilder.java', 'insertions': [{'line_number': 91, 'new_lines': ['        if (doc != null && !doc.children().isEmpty()) {', '            Element el = doc.child(0);', '            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));', '            insert.attributes().addAll(el.attributes());', '        }']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/XmlTreeBuilder.java', 'insertions': [{'line_number': 91, 'new_lines': ['        if (doc != null && !doc.children().isEmpty()) {', '            Element el = doc.child(0);', '            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));', '            insert.attributes().addAll(el.attributes());', '        }']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/XmlTreeBuilder.java', 'insertions': [{'line_number': 91, 'new_lines': ['        if (doc != null && !doc.children().isEmpty()) {', '            Element el = doc.child(0);', '            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));', '            insert.attributes().addAll(el.attributes());', '        }']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/XmlTreeBuilder.java', 'insertions': [{'line_number': 91, 'new_lines': ['        if (doc != null && !doc.children().isEmpty()) {', '            Element el = doc.child(0);', '            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));', '            insert.attributes().addAll(el.attributes());', '        }']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/XmlTreeBuilder.java', 'insertions': [{'line_number': 91, 'new_lines': ['        if (doc != null && !doc.children().isEmpty()) {', '            Element el = doc.child(0);', '            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));', '            insert.attributes().addAll(el.attributes());', '        }']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/XmlTreeBuilder.java', 'insertions': [{'line_number': 91, 'new_lines': ['        if (doc != null && doc.children() != null && !doc.children().isEmpty()) {', '            Element el = doc.child(0);', '            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));', '            insert.attributes().addAll(el.attributes());', '        }']}]}]

###Fix:
[]

###Fix:
[{'file_name': 'org/jsoup/parser/XmlTreeBuilder.java', 'insertions': [{'line_number': 91, 'new_lines': ['        if (doc != null && !doc.childNodes().isEmpty()) {', '            Element el = doc.child(0);', '            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));', '            insert.attributes().addAll(el.attributes());', '        }']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/XmlTreeBuilder.java', 'insertions': [{'line_number': 91, 'new_lines': ['        if (doc != null && doc.childNodes() != null && !doc.childNodes().isEmpty()) {', '            Element el = doc.child(0);', '            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));', '            insert.attributes().addAll(el.attributes());', '        }']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/XmlTreeBuilder.java', 'insertions': [{'line_number': 91, 'new_lines': ['        if (doc != null && !doc.childNodes().isEmpty()) {', '            Element el = doc.child(0);', '            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));', '            insert.attributes().addAll(el.attributes());', '        }']}]}]


