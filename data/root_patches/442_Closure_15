###Fix:
[{'file_name': 'com/google/javascript/jscomp/FlowSensitiveInlineVariables.java', 'insertions': [{'line_number': 103, 'new_lines': ['if (c.isIn() && apply(c)) {', 'return true;']}], 'deletions': [105]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/FlowSensitiveInlineVariables.java', 'target_lines': [['102', '//']], 'insertions': [{'line_number': 102, 'new_lines': ['// Inserted line to fix the bug at line 102']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/FlowSensitiveInlineVariables.java', 'insertions': [{'line_number': 102, 'new_lines': ['// Inserted line to fix the bug at line 102', 'if (c.isIn() && apply(c)) {', 'return true;']}], 'deletions': [], 'modifications': []}]

###Fix:
[]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/FlowSensitiveInlineVariables.java', 'insertions': [{'line_number': 102, 'new_lines': ["// Fixing the bug by correcting the 'IN' operator placement", 'if (c.isIn() && apply(c)) {', 'return true;']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java', 'insertions': [{'line_number': 66, 'new_lines': ['var a,b,x; a in b']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/FlowSensitiveInlineVariables.java', 'target_lines': [['102', '//']], 'insertions': [{'line_number': 102, 'new_lines': ["// Fixing the bug by correcting the 'IN' operator placement", 'if (c.isIn() && apply(c)) {', 'return true;']}], 'deletions': [], 'modifications': []}]


