###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliasesTest.java', 'modifications': [{'line_number': 329, 'modified_line': '/** @param {foo.Foo.Bar} x */ function actual(x) {3}'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['307', '        int type = n.getType();'], ['308', '        if (type == Token.NAME && parent.getType() == Token.VAR) {'], ['309', '          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {'], ['310', '            String name = n.getString();'], ['311', '            Var aliasVar = t.getScope().getVar(name);'], ['312', '            aliases.put(name, aliasVar);'], ['315', '            String qualifiedName ='], ['316', '                aliasVar.getInitialValue().getQualifiedName();'], ['317', '            transformation.addAlias(name, qualifiedName);'], ['322', '            report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());'], ['323', '          }'], ['324', '        }'], ['325', '        if (type == Token.NAME && NodeUtil.isAssignmentOp(parent) &&'], ['326', '            n == parent.getFirstChild()) {'], ['342', '        if (n.getType() == Token.NAME) {'], ['343', '          String name = n.getString();'], ['344', '          Var aliasVar = aliases.get(name);'], ['345', '          if (aliasVar != null &&'], ['346', '              t.getScope().getVar(name) == aliasVar) {'], ['355', '          }'], ['226', '//'], ['271', '//'], ['272', '//'], ['273', '//'], ['303', '//'], ['304', '//']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['307', '        int type = n.getType();'], ['308', '        if (type == Token.NAME && parent.getType() == Token.VAR) {'], ['309', '          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {'], ['310', '            String name = n.getString();'], ['311', '            Var aliasVar = t.getScope().getVar(name);'], ['312', '            aliases.put(name, aliasVar);'], ['315', '            String qualifiedName ='], ['316', '                aliasVar.getInitialValue().getQualifiedName();'], ['317', '            transformation.addAlias(name, qualifiedName);'], ['322', '            report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());'], ['323', '          }'], ['324', '        }'], ['325', '        if (type == Token.NAME && NodeUtil.isAssignmentOp(parent) &&'], ['326', '            n == parent.getFirstChild()) {'], ['342', '        if (n.getType() == Token.NAME) {'], ['343', '          String name = n.getString();'], ['344', '          Var aliasVar = aliases.get(name);'], ['345', '          if (aliasVar != null &&'], ['346', '              t.getScope().getVar(name) == aliasVar) {'], ['355', '          }']], 'insertions': [{'line_number': 226, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 271, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 272, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 273, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 303, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 304, 'new_lines': ['// Inserted line to fix the bug']}], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/Scope.java', 'target_lines': [['568', '//']], 'insertions': [{'line_number': 568, 'new_lines': ['// Inserted line to fix the bug']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['307', '        int type = n.getType();'], ['308', '        if (type == Token.NAME && parent.getType() == Token.VAR) {'], ['309', '          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {'], ['310', '            String name = n.getString();'], ['311', '            Var aliasVar = t.getScope().getVar(name);'], ['312', '            aliases.put(name, aliasVar);'], ['315', '            String qualifiedName ='], ['316', '                aliasVar.getInitialValue().getQualifiedName();'], ['317', '            transformation.addAlias(name, qualifiedName);'], ['322', '            report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());'], ['323', '          }'], ['324', '        }'], ['325', '        if (type == Token.NAME && NodeUtil.isAssignmentOp(parent) &&'], ['326', '            n == parent.getFirstChild()) {'], ['342', '        if (n.getType() == Token.NAME) {'], ['343', '          String name = n.getString();'], ['344', '          Var aliasVar = aliases.get(name);'], ['345', '          if (aliasVar != null &&'], ['346', '              t.getScope().getVar(name) == aliasVar) {'], ['355', '          }'], ['226', '//'], ['271', '//'], ['272', '//'], ['273', '//'], ['303', '//'], ['304', '//']], 'insertions': [{'line_number': 226, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 271, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 272, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 273, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 303, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 304, 'new_lines': ['// Inserted line to fix the bug']}], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/Scope.java', 'target_lines': [['568', '//']], 'insertions': [{'line_number': 568, 'new_lines': ['// Inserted line to fix the bug']}], 'deletions': [], 'modifications': []}]

###Fix:
[]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'insertions': [{'line_number': 226, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}, {'line_number': 271, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}, {'line_number': 272, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}, {'line_number': 273, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}, {'line_number': 303, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}, {'line_number': 304, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'insertions': [{'line_number': 226, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}, {'line_number': 271, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}, {'line_number': 272, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}, {'line_number': 273, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}, {'line_number': 303, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}, {'line_number': 304, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/Scope.java', 'insertions': [{'line_number': 568, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'insertions': [{'line_number': 226, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 271, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 272, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 273, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 303, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 304, 'new_lines': ['// Inserted line to fix the bug']}], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/Scope.java', 'insertions': [{'line_number': 568, 'new_lines': ['// Inserted line to fix the bug']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['307', '        int type = n.getType();'], ['308', '        if (type == Token.NAME && parent.getType() == Token.VAR) {'], ['309', '          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {'], ['310', '            String name = n.getString();'], ['311', '            Var aliasVar = t.getScope().getVar(name);'], ['312', '            aliases.put(name, aliasVar);'], ['315', '            String qualifiedName ='], ['316', '                aliasVar.getInitialValue().getQualifiedName();'], ['317', '            transformation.addAlias(name, qualifiedName);'], ['322', '            report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());'], ['323', '          }'], ['324', '        }'], ['325', '        if (type == Token.NAME && NodeUtil.isAssignmentOp(parent) &&'], ['326', '            n == parent.getFirstChild()) {'], ['342', '        if (n.getType() == Token.NAME) {'], ['343', '          String name = n.getString();'], ['344', '          Var aliasVar = aliases.get(name);'], ['345', '          if (aliasVar != null &&'], ['346', '              t.getScope().getVar(name) == aliasVar) {'], ['355', '          }'], ['226', '//'], ['271', '//'], ['272', '//'], ['273', '//'], ['303', '//'], ['304', '//']], 'insertions': [{'line_number': 226, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 271, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 272, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 273, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 303, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 304, 'new_lines': ['// Inserted line to fix the bug']}], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/Scope.java', 'target_lines': [['568', '//']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'insertions': [{'line_number': 307, 'new_lines': ['        int type = n.getType();', '        if (type == Token.NAME && parent.getType() == Token.VAR) {', '          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {', '            String name = n.getString();', '            Var aliasVar = t.getScope().getVar(name);', '            aliases.put(name, aliasVar);', '            aliasDefinitionsInOrder.add(n);', '', '            String qualifiedName =', '                aliasVar.getInitialValue().getQualifiedName();', '            transformation.addAlias(name, qualifiedName);', "            // Return early, to ensure that we don't record a definition", '            // twice.', '            return;', '          } else {', '            report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());', '          }', '        }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['307', '        int type = n.getType();'], ['308', '        if (type == Token.NAME && parent.getType() == Token.VAR) {'], ['309', '          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {'], ['310', '            String name = n.getString();'], ['311', '            Var aliasVar = t.getScope().getVar(name);'], ['312', '            aliases.put(name, aliasVar);'], ['315', '            String qualifiedName ='], ['316', '                aliasVar.getInitialValue().getQualifiedName();'], ['317', '            transformation.addAlias(name, qualifiedName);'], ['322', '            report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());'], ['323', '          }'], ['324', '        }'], ['325', '        if (type == Token.NAME && NodeUtil.isAssignmentOp(parent) &&'], ['326', '            n == parent.getFirstChild()) {'], ['342', '        if (n.getType() == Token.NAME) {'], ['343', '          String name = n.getString();'], ['344', '          Var aliasVar = aliases.get(name);'], ['345', '          if (aliasVar != null &&'], ['346', '              t.getScope().getVar(name) == aliasVar) {'], ['355', '          }']], 'insertions': [{'line_number': 226, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 271, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 272, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 273, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 303, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 304, 'new_lines': ['// Inserted line to fix the bug']}], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/Scope.java', 'target_lines': [['568', '//']], 'insertions': [{'line_number': 568, 'new_lines': ['// Inserted line to fix the bug']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'insertions': [{'line_number': 226, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 271, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 272, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 273, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 303, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 304, 'new_lines': ['// Inserted line to fix the bug']}], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/Scope.java', 'insertions': [{'line_number': 568, 'new_lines': ['// Inserted line to fix the bug']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['307', '        int type = n.getType();'], ['308', '        if (type == Token.NAME && parent.getType() == Token.VAR) {'], ['309', '          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {'], ['310', '            String name = n.getString();'], ['311', '            Var aliasVar = t.getScope().getVar(name);'], ['312', '            aliases.put(name, aliasVar);'], ['315', '            String qualifiedName ='], ['316', '                aliasVar.getInitialValue().getQualifiedName();'], ['317', '            transformation.addAlias(name, qualifiedName);'], ['322', '            report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());'], ['323', '          }'], ['324', '        }'], ['325', '        if (type == Token.NAME && NodeUtil.isAssignmentOp(parent) &&'], ['326', '            n == parent.getFirstChild()) {'], ['342', '        if (n.getType() == Token.NAME) {'], ['343', '          String name = n.getString();'], ['344', '          Var aliasVar = aliases.get(name);'], ['345', '          if (aliasVar != null &&'], ['346', '              t.getScope().getVar(name) == aliasVar) {'], ['355', '          }'], ['226', '//'], ['271', '//'], ['272', '//'], ['273', '//'], ['303', '//'], ['304', '//']], 'insertions': [], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/Scope.java', 'target_lines': [['568', '//']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['307', '        int type = n.getType();'], ['308', '        if (type == Token.NAME && parent.getType() == Token.VAR) {'], ['309', '          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {'], ['310', '            String name = n.getString();'], ['311', '            Var aliasVar = t.getScope().getVar(name);'], ['312', '            aliases.put(name, aliasVar);'], ['315', '            String qualifiedName ='], ['316', '                aliasVar.getInitialValue().getQualifiedName();'], ['317', '            transformation.addAlias(name, qualifiedName);'], ['322', '            report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());'], ['323', '          }'], ['324', '        }'], ['325', '        if (type == Token.NAME && NodeUtil.isAssignmentOp(parent) &&'], ['326', '            n == parent.getFirstChild()) {'], ['342', '        if (n.getType() == Token.NAME) {'], ['343', '          String name = n.getString();'], ['344', '          Var aliasVar = aliases.get(name);'], ['345', '          if (aliasVar != null &&'], ['346', '              t.getScope().getVar(name) == aliasVar) {'], ['355', '          }'], ['226', '//'], ['271', '//'], ['272', '//'], ['273', '//'], ['303', '//'], ['304', '//']], 'insertions': [], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/Scope.java', 'target_lines': [['568', '//']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['307', '        int type = n.getType();'], ['308', '        if (type == Token.NAME && parent.getType() == Token.VAR) {'], ['309', '          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {'], ['310', '            String name = n.getString();'], ['311', '            Var aliasVar = t.getScope().getVar(name);'], ['312', '            aliases.put(name, aliasVar);'], ['315', '            String qualifiedName ='], ['316', '                aliasVar.getInitialValue().getQualifiedName();'], ['317', '            transformation.addAlias(name, qualifiedName);'], ['322', '            report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());'], ['323', '          }'], ['324', '        }'], ['325', '        if (type == Token.NAME && NodeUtil.isAssignmentOp(parent) &&'], ['326', '            n == parent.getFirstChild()) {'], ['342', '        if (n.getType() == Token.NAME) {'], ['343', '          String name = n.getString();'], ['344', '          Var aliasVar = aliases.get(name);'], ['345', '          if (aliasVar != null &&'], ['346', '              t.getScope().getVar(name) == aliasVar) {'], ['355', '          }'], ['226', '//'], ['271', '//'], ['272', '//'], ['273', '//'], ['303', '//'], ['304', '//']], 'insertions': [], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/Scope.java', 'target_lines': [['568', '//']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['307', '        int type = n.getType();'], ['308', '        if (type == Token.NAME && parent.getType() == Token.VAR) {'], ['309', '          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {'], ['310', '            String name = n.getString();'], ['311', '            Var aliasVar = t.getScope().getVar(name);'], ['312', '            aliases.put(name, aliasVar);'], ['315', '            String qualifiedName ='], ['316', '                aliasVar.getInitialValue().getQualifiedName();'], ['317', '            transformation.addAlias(name, qualifiedName);'], ['322', '            report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());'], ['323', '          }'], ['324', '        }'], ['325', '        if (type == Token.NAME && NodeUtil.isAssignmentOp(parent) &&'], ['326', '            n == parent.getFirstChild()) {'], ['342', '        if (n.getType() == Token.NAME) {'], ['343', '          String name = n.getString();'], ['344', '          Var aliasVar = aliases.get(name);'], ['345', '          if (aliasVar != null &&'], ['346', '              t.getScope().getVar(name) == aliasVar) {'], ['355', '          }'], ['226', '//'], ['271', '//'], ['272', '//'], ['273', '//'], ['303', '//'], ['304', '//']], 'insertions': [], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/Scope.java', 'target_lines': [['568', '//']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'insertions': [{'line_number': 226, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}, {'line_number': 271, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}, {'line_number': 272, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}, {'line_number': 273, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}, {'line_number': 303, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}, {'line_number': 304, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/Scope.java', 'insertions': [{'line_number': 568, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['307', '        int type = n.getType();'], ['308', '        if (type == Token.NAME && parent.getType() == Token.VAR) {'], ['309', '          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {'], ['310', '            String name = n.getString();'], ['311', '            Var aliasVar = t.getScope().getVar(name);'], ['312', '            aliases.put(name, aliasVar);'], ['315', '            String qualifiedName ='], ['316', '                aliasVar.getInitialValue().getQualifiedName();'], ['317', '            transformation.addAlias(name, qualifiedName);'], ['322', '            report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());'], ['323', '          }'], ['324', '        }'], ['325', '        if (type == Token.NAME && NodeUtil.isAssignmentOp(parent) &&'], ['326', '            n == parent.getFirstChild())'], ['342', '        if (n.getType() == Token.NAME) {'], ['343', '          String name = n.getString();'], ['344', '          Var aliasVar = aliases.get(name);'], ['345', '          if (aliasVar != null &&'], ['346', '              t.getScope().getVar(name) == aliasVar) {'], ['355', '          }'], ['226', '//'], ['271', '//'], ['272', '//'], ['273', '//'], ['303', '//'], ['304', '//']], 'insertions': [{'line_number': 226, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 271, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 272, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 273, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 303, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 304, 'new_lines': ['// Inserted line to fix the bug']}], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/Scope.java', 'target_lines': [['568', '//']], 'insertions': [{'line_number': 568, 'new_lines': ['// Inserted line to fix the bug']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['307', '        int type = n.getType();'], ['308', '        if (type == Token.NAME && parent.getType() == Token.VAR) {'], ['309', '          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {'], ['310', '            String name = n.getString();'], ['311', '            Var aliasVar = t.getScope().getVar(name);'], ['312', '            aliases.put(name, aliasVar);'], ['315', '            String qualifiedName ='], ['316', '                aliasVar.getInitialValue().getQualifiedName();'], ['317', '            transformation.addAlias(name, qualifiedName);'], ['322', '            report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());'], ['323', '          }'], ['324', '        }'], ['325', '        if (type == Token.NAME && NodeUtil.isAssignmentOp(parent) &&'], ['326', '            n == parent.getFirstChild())'], ['342', '        if (n.getType() == Token.NAME) {'], ['343', '          String name = n.getString();'], ['344', '          Var aliasVar = aliases.get(name);'], ['345', '          if (aliasVar != null &&'], ['346', '              t.getScope().getVar(name) == aliasVar) {'], ['355', '          }'], ['226', '//'], ['271', '//'], ['272', '//'], ['273', '//'], ['303', '//'], ['304', '//']], 'insertions': [{'line_number': 226, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 271, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 272, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 273, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 303, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 304, 'new_lines': ['// Inserted line to fix the bug']}], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/Scope.java', 'target_lines': [['568', '//']], 'insertions': [{'line_number': 568, 'new_lines': ['// Inserted line to fix the bug']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'insertions': [{'line_number': 226, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}, {'line_number': 271, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}, {'line_number': 272, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}, {'line_number': 273, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}, {'line_number': 303, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}, {'line_number': 304, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/Scope.java', 'insertions': [{'line_number': 568, 'new_lines': ['// Inserted line to fix the bug - Adding a comment for clarity']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['307', '        int type = n.getType();'], ['308', '        if (type == Token.NAME && parent.getType() == Token.VAR) {'], ['309', '          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {'], ['310', '            String name = n.getString();'], ['311', '            Var aliasVar = t.getScope().getVar(name);'], ['312', '            aliases.put(name, aliasVar);'], ['315', '            String qualifiedName ='], ['316', '                aliasVar.getInitialValue().getQualifiedName();'], ['317', '            transformation.addAlias(name, qualifiedName);'], ['322', '            report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());'], ['323', '          }'], ['324', '        }'], ['325', '        if (type == Token.NAME && NodeUtil.isAssignmentOp(parent) &&'], ['326', '            n == parent.getFirstChild()) {'], ['342', '        if (n.getType() == Token.NAME) {'], ['343', '          String name = n.getString();'], ['344', '          Var aliasVar = aliases.get(name);'], ['345', '          if (aliasVar != null &&'], ['346', '              t.getScope().getVar(name) == aliasVar) {'], ['355', '          }'], ['226', ''], ['271', ''], ['272', ''], ['273', ''], ['303', ''], ['304', '']], 'insertions': [], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/Scope.java', 'target_lines': [['568', '']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['307', '        int type = n.getType();'], ['308', '        if (type == Token.NAME && parent.getType() == Token.VAR) {'], ['309', '          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {'], ['310', '            String name = n.getString();'], ['311', '            Var aliasVar = t.getScope().getVar(name);'], ['312', '            aliases.put(name, aliasVar);'], ['315', '            String qualifiedName ='], ['316', '                aliasVar.getInitialValue().getQualifiedName();'], ['317', '            transformation.addAlias(name, qualifiedName);'], ['322', '            report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());'], ['323', '          }'], ['324', '        }'], ['325', '        if (type == Token.NAME && NodeUtil.isAssignmentOp(parent) &&'], ['326', '            n == parent.getFirstChild()) {'], ['342', '        if (n.getType() == Token.NAME) {'], ['343', '          String name = n.getString();'], ['344', '          Var aliasVar = aliases.get(name);'], ['345', '          if (aliasVar != null &&'], ['346', '              t.getScope().getVar(name) == aliasVar) {'], ['355', '          }'], ['226', ''], ['271', ''], ['272', ''], ['273', ''], ['303', ''], ['304', '']], 'insertions': [], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/Scope.java', 'target_lines': [['568', '']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['307', '        int type = n.getType();'], ['308', '        if (type == Token.NAME && parent.getType() == Token.VAR) {'], ['309', '          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {'], ['310', '            String name = n.getString();'], ['311', '            Var aliasVar = t.getScope().getVar(name);'], ['312', '            aliases.put(name, aliasVar);'], ['315', '            String qualifiedName ='], ['316', '                aliasVar.getInitialValue().getQualifiedName();'], ['317', '            transformation.addAlias(name, qualifiedName);'], ['322', '            report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());'], ['323', '          }'], ['324', '        }'], ['325', '        if (type == Token.NAME && NodeUtil.isAssignmentOp(parent) &&'], ['326', '            n == parent.getFirstChild()) {'], ['342', '        if (n.getType() == Token.NAME) {'], ['343', '          String name = n.getString();'], ['344', '          Var aliasVar = aliases.get(name);'], ['345', '          if (aliasVar != null &&'], ['346', '              t.getScope().getVar(name) == aliasVar) {'], ['355', '          }'], ['226', ''], ['271', ''], ['272', ''], ['273', ''], ['303', ''], ['304', '']], 'insertions': [{'line_number': 226, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 271, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 272, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 273, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 303, 'new_lines': ['// Inserted line to fix the bug']}, {'line_number': 304, 'new_lines': ['// Inserted line to fix the bug']}], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/Scope.java', 'target_lines': [['568', '//']], 'insertions': [{'line_number': 568, 'new_lines': ['// Inserted line to fix the bug']}], 'deletions': [], 'modifications': []}]


