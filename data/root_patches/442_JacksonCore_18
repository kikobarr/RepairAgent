###Fix:
[{'file_name': 'com/fasterxml/jackson/core/json/UTF8JsonGenerator.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 910, 'modified_line': '            String raw = value.toPlainString();'}, {'line_number': 913, 'modified_line': '            writeRaw(value.toPlainString());'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/core/json/UTF8JsonGenerator.java', 'target_lines': [['910', '            String raw = Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features) ? value.toPlainString() : value.toString();'], ['911', '            _writeQuotedRaw(raw);'], ['912', '        } else if (Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features)) {'], ['913', '            writeRaw(value.toPlainString());']], 'insertions': [], 'deletions': [], 'modifications': []}, {'file_name': 'com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java', 'target_lines': [['687', '            String raw = isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN) ? value.toPlainString() : value.toString();'], ['688', '            _writeQuotedRaw(raw);'], ['689', '        } else if (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)) {'], ['690', '            writeRaw(value.toPlainString());']], 'insertions': [], 'deletions': [], 'modifications': []}, {'file_name': 'com/fasterxml/jackson/core/base/GeneratorBase.java', 'target_lines': [['53', '//'], ['434', '//'], ['435', '//']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/core/json/UTF8JsonGenerator.java', 'target_lines': [['910', '            String raw = Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features) ? value.toPlainString() : value.toString();'], ['911', '            _writeQuotedRaw(raw);'], ['912', '        } else if (Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features)) {'], ['913', '            writeRaw(value.toPlainString());']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 910, 'modified_line': '            String raw = value.toPlainString();'}, {'line_number': 913, 'modified_line': '            writeRaw(value.toPlainString());'}]}, {'file_name': 'com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java', 'target_lines': [['687', '            String raw = isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN) ? value.toPlainString() : value.toString();'], ['688', '            _writeQuotedRaw(raw);'], ['689', '        } else if (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)) {'], ['690', '            writeRaw(value.toPlainString());']], 'insertions': [], 'deletions': [], 'modifications': []}, {'file_name': 'com/fasterxml/jackson/core/base/GeneratorBase.java', 'target_lines': [['53', '//'], ['434', '//'], ['435', '//']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/core/json/UTF8JsonGenerator.java', 'target_lines': [['910', '            String raw = Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features) ? value.toPlainString() : value.toString();'], ['911', '            _writeQuotedRaw(raw);'], ['912', '        } else if (Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features)) {'], ['913', '            writeRaw(value.toPlainString());']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 910, 'modified_line': '            String raw = value.toPlainString();'}, {'line_number': 911, 'modified_line': '            _writeQuotedRaw(raw);'}, {'line_number': 912, 'modified_line': '        writeRaw(value.toPlainString());'}, {'line_number': 913, 'modified_line': '            writeRaw(value.toPlainString());'}]}, {'file_name': 'com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java', 'target_lines': [['687', '            String raw = isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN) ? value.toPlainString() : value.toString();'], ['688', '            _writeQuotedRaw(raw);'], ['689', '        } else if (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)) {'], ['690', '            writeRaw(value.toPlainString());']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 687, 'modified_line': '            String raw = value.toPlainString();'}, {'line_number': 688, 'modified_line': '            _writeQuotedRaw(raw);'}, {'line_number': 689, 'modified_line': '        writeRaw(value.toPlainString());'}, {'line_number': 690, 'modified_line': '            writeRaw(value.toPlainString());'}]}, {'file_name': 'com/fasterxml/jackson/core/base/GeneratorBase.java', 'target_lines': [['53', '//'], ['434', '//'], ['435', '//']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 53, 'modified_line': '            // Fix for writing big decimals as plain strings'}, {'line_number': 434, 'modified_line': '            // Fix for writing big decimals as plain strings'}, {'line_number': 435, 'modified_line': '            // Fix for writing big decimals as plain strings'}]}]

###Fix:
[]

###Fix:
[{'file_name': 'com/fasterxml/jackson/core/json/UTF8JsonGenerator.java', 'modifications': [{'line_number': 910, 'modified_line': '            String raw = value.toPlainString();'}, {'line_number': 913, 'modified_line': '            writeRaw(value.toPlainString());'}]}, {'file_name': 'com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java', 'modifications': [{'line_number': 687, 'modified_line': '            String raw = value.toPlainString();'}, {'line_number': 690, 'modified_line': '            writeRaw(value.toPlainString());'}]}, {'file_name': 'com/fasterxml/jackson/core/base/GeneratorBase.java', 'modifications': [{'line_number': 53, 'modified_line': '            // Fix for writing big decimals as plain strings'}, {'line_number': 434, 'modified_line': '            // Fix for writing big decimals as plain strings'}, {'line_number': 435, 'modified_line': '            // Fix for writing big decimals as plain strings'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/core/json/UTF8JsonGenerator.java', 'target_lines': [['910', '            String raw = Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features) ? value.toPlainString() : value.toString();'], ['911', '            _writeQuotedRaw(raw);'], ['912', '        } else if (Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features)) {'], ['913', '            writeRaw(value.toPlainString());']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 910, 'modified_line': '            String raw = value.toPlainString();'}, {'line_number': 911, 'modified_line': '            _writeQuotedRaw(raw);'}, {'line_number': 912, 'modified_line': '        writeRaw(value.toPlainString());'}, {'line_number': 913, 'modified_line': '            writeRaw(value.toPlainString());'}]}, {'file_name': 'com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java', 'target_lines': [['687', '            String raw = isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN) ? value.toPlainString() : value.toString();'], ['688', '            _writeQuotedRaw(raw);'], ['689', '        } else if (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)) {'], ['690', '            writeRaw(value.toPlainString());']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 687, 'modified_line': '            String raw = value.toPlainString();'}, {'line_number': 688, 'modified_line': '            _writeQuotedRaw(raw);'}, {'line_number': 689, 'modified_line': '        writeRaw(value.toPlainString());'}, {'line_number': 690, 'modified_line': '            writeRaw(value.toPlainString());'}]}, {'file_name': 'com/fasterxml/jackson/core/base/GeneratorBase.java', 'target_lines': [['53', '//'], ['434', '//'], ['435', '//']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 53, 'modified_line': '            // Fix for writing big decimals as plain strings'}, {'line_number': 434, 'modified_line': '            // Fix for writing big decimals as plain strings'}, {'line_number': 435, 'modified_line': '            // Fix for writing big decimals as plain strings'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/core/json/UTF8JsonGenerator.java', 'modifications': [{'line_number': 910, 'modified_line': '            String raw = value.toPlainString();'}, {'line_number': 913, 'modified_line': '            writeRaw(value.toPlainString());'}]}, {'file_name': 'com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java', 'modifications': [{'line_number': 687, 'modified_line': '            String raw = value.toPlainString();'}, {'line_number': 690, 'modified_line': '            writeRaw(value.toPlainString());'}]}, {'file_name': 'com/fasterxml/jackson/core/base/GeneratorBase.java', 'modifications': [{'line_number': 53, 'modified_line': '// Fix for writing big decimals as plain strings'}, {'line_number': 434, 'modified_line': '// Fix for writing big decimals as plain strings'}, {'line_number': 435, 'modified_line': '// Fix for writing big decimals as plain strings'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/core/json/UTF8JsonGenerator.java', 'target_lines': [['910', '            String raw = Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features) ? value.toPlainString() : value.toString();'], ['911', '            _writeQuotedRaw(raw);'], ['912', '        } else if (Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features)) {'], ['913', '            writeRaw(value.toPlainString());']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 910, 'modified_line': '            String raw = value.toPlainString();'}, {'line_number': 911, 'modified_line': '            _writeQuotedRaw(raw);'}, {'line_number': 912, 'modified_line': '        writeRaw(value.toPlainString());'}, {'line_number': 913, 'modified_line': '            writeRaw(value.toPlainString());'}]}, {'file_name': 'com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java', 'target_lines': [['687', '            String raw = isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN) ? value.toPlainString() : value.toString();'], ['688', '            _writeQuotedRaw(raw);'], ['689', '        } else if (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)) {'], ['690', '            writeRaw(value.toPlainString());']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 687, 'modified_line': '            String raw = value.toPlainString();'}, {'line_number': 688, 'modified_line': '            _writeQuotedRaw(raw);'}, {'line_number': 689, 'modified_line': '        writeRaw(value.toPlainString());'}, {'line_number': 690, 'modified_line': '            writeRaw(value.toPlainString());'}]}, {'file_name': 'com/fasterxml/jackson/core/base/GeneratorBase.java', 'target_lines': [['53', '//'], ['434', '//'], ['435', '//']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 53, 'modified_line': '// Fix for writing big decimals as plain strings'}, {'line_number': 434, 'modified_line': '// Fix for writing big decimals as plain strings'}, {'line_number': 435, 'modified_line': '// Fix for writing big decimals as plain strings'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/core/json/UTF8JsonGenerator.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 910, 'modified_line': '            String raw = value.toPlainString();'}, {'line_number': 911, 'modified_line': '            _writeQuotedRaw(raw);'}, {'line_number': 912, 'modified_line': '        writeRaw(value.toPlainString());'}, {'line_number': 913, 'modified_line': '            writeRaw(value.toPlainString());'}]}, {'file_name': 'com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 687, 'modified_line': '            String raw = value.toPlainString();'}, {'line_number': 688, 'modified_line': '            _writeQuotedRaw(raw);'}, {'line_number': 689, 'modified_line': '        writeRaw(value.toPlainString());'}, {'line_number': 690, 'modified_line': '            writeRaw(value.toPlainString());'}]}, {'file_name': 'com/fasterxml/jackson/core/base/GeneratorBase.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 53, 'modified_line': '// Fix for writing big decimals as plain strings'}, {'line_number': 434, 'modified_line': '// Fix for writing big decimals as plain strings'}, {'line_number': 435, 'modified_line': '// Fix for writing big decimals as plain strings'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/core/json/UTF8JsonGenerator.java', 'insertions': [], 'deletions': [910, 911, 912, 913], 'modifications': [{'line_number': 903, 'modified_line': '    // Updated implementation for writeNumber(BigDecimal value) method'}, {'line_number': 904, 'modified_line': '    public void writeNumber(BigDecimal value) throws IOException {'}, {'line_number': 905, 'modified_line': '        if (value == null) {'}, {'line_number': 906, 'modified_line': '            _writeNull();'}, {'line_number': 907, 'modified_line': '            return;'}, {'line_number': 908, 'modified_line': '        }'}, {'line_number': 909, 'modified_line': "        // First, let's convert the BigDecimal to a plain String"}, {'line_number': 910, 'modified_line': '        String numberStr = value.toString();'}, {'line_number': 911, 'modified_line': '        int length = numberStr.length();'}, {'line_number': 912, 'modified_line': '        // Check if the output buffer is large enough'}, {'line_number': 913, 'modified_line': '        if (_outputTail + length >= _outputEnd) {'}, {'line_number': 914, 'modified_line': '            _flushBuffer();'}, {'line_number': 915, 'modified_line': '        }'}, {'line_number': 916, 'modified_line': '        // Then write the characters directly to the output buffer'}, {'line_number': 917, 'modified_line': '        numberStr.getChars(0, length, _charBuffer, 0);'}, {'line_number': 918, 'modified_line': '        if (length <= _outputMaxContiguous) {'}, {'line_number': 919, 'modified_line': '            if (_outputTail == 0) {'}, {'line_number': 920, 'modified_line': '                // If we are writing the first characters, no need to escape'}, {'line_number': 921, 'modified_line': '                _writeStringSegment(_charBuffer, 0, length);'}, {'line_number': 922, 'modified_line': '            } else {'}, {'line_number': 923, 'modified_line': '                // Escape and write the characters'}, {'line_number': 924, 'modified_line': '                _writeStringSegmentASCII(_charBuffer, 0, length);'}, {'line_number': 925, 'modified_line': '            }'}, {'line_number': 926, 'modified_line': '        } else {'}, {'line_number': 927, 'modified_line': '            // If the number of characters exceeds the output buffer size, write to output stream directly'}, {'line_number': 928, 'modified_line': '            _writeStringSegments(_charBuffer, 0, length);'}, {'line_number': 929, 'modified_line': '        }'}, {'line_number': 930, 'modified_line': '    }'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/core/json/UTF8JsonGenerator.java', 'target_lines': [['910', '            String raw = Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features) ? value.toPlainString() : value.toString();'], ['911', '            _writeQuotedRaw(raw);'], ['912', '        } else if (Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features)) {'], ['913', '            writeRaw(value.toPlainString());']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 910, 'modified_line': '            String raw = value.toPlainString();'}, {'line_number': 911, 'modified_line': '            _writeQuotedRaw(raw);'}, {'line_number': 912, 'modified_line': '        writeRaw(value.toPlainString());'}, {'line_number': 913, 'modified_line': '            writeRaw(value.toPlainString());'}]}, {'file_name': 'com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java', 'target_lines': [['687', '            String raw = isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN) ? value.toPlainString() : value.toString();'], ['688', '            _writeQuotedRaw(raw);'], ['689', '        } else if (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)) {'], ['690', '            writeRaw(value.toPlainString());']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 687, 'modified_line': '            String raw = value.toPlainString();'}, {'line_number': 688, 'modified_line': '            _writeQuotedRaw(raw);'}, {'line_number': 689, 'modified_line': '        writeRaw(value.toPlainString());'}, {'line_number': 690, 'modified_line': '            writeRaw(value.toPlainString());'}]}, {'file_name': 'com/fasterxml/jackson/core/base/GeneratorBase.java', 'target_lines': [['53', '//'], ['434', '//'], ['435', '//']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 53, 'modified_line': '// Fix for writing big decimals as plain strings'}, {'line_number': 434, 'modified_line': '// Fix for writing big decimals as plain strings'}, {'line_number': 435, 'modified_line': '// Fix for writing big decimals as plain strings'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/core/json/UTF8JsonGenerator.java', 'insertions': [], 'deletions': [910, 911, 912, 913], 'modifications': [{'line_number': 903, 'modified_line': '// Updated implementation for writeNumber(BigDecimal value) method'}, {'line_number': 904, 'modified_line': 'public void writeNumber(BigDecimal value) throws IOException {'}, {'line_number': 905, 'modified_line': '    if (value == null) {'}, {'line_number': 906, 'modified_line': '        _writeNull();'}, {'line_number': 907, 'modified_line': '        return;'}, {'line_number': 908, 'modified_line': '    }'}, {'line_number': 909, 'modified_line': "    // First, let's convert the BigDecimal to a plain String"}, {'line_number': 910, 'modified_line': '    String numberStr = value.toString();'}, {'line_number': 911, 'modified_line': '    int length = numberStr.length();'}, {'line_number': 912, 'modified_line': '    // Check if the output buffer is large enough'}, {'line_number': 913, 'modified_line': '    if (_outputTail + length >= _outputEnd) {'}, {'line_number': 914, 'modified_line': '        _flushBuffer();'}, {'line_number': 915, 'modified_line': '    }'}, {'line_number': 916, 'modified_line': '    // Then write the characters directly to the output buffer'}, {'line_number': 917, 'modified_line': '    numberStr.getChars(0, length, _charBuffer, 0);'}, {'line_number': 918, 'modified_line': '    if (length <= _outputMaxContiguous) {'}, {'line_number': 919, 'modified_line': '        if (_outputTail == 0) {'}, {'line_number': 920, 'modified_line': '            // If we are writing the first characters, no need to escape'}, {'line_number': 921, 'modified_line': '            _writeStringSegment(_charBuffer, 0, length);'}, {'line_number': 922, 'modified_line': '        } else {'}, {'line_number': 923, 'modified_line': '            // Escape and write the characters'}, {'line_number': 924, 'modified_line': '            _writeStringSegmentASCII(_charBuffer, 0, length);'}, {'line_number': 925, 'modified_line': '        }'}, {'line_number': 926, 'modified_line': '    } else {'}, {'line_number': 927, 'modified_line': '        // If the number of characters exceeds the output buffer size, write to output stream directly'}, {'line_number': 928, 'modified_line': '        _writeStringSegments(_charBuffer, 0, length);'}, {'line_number': 929, 'modified_line': '    }'}, {'line_number': 930, 'modified_line': '}'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/core/json/UTF8JsonGenerator.java', 'target_lines': [['910', '            String raw = Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features) ? value.toPlainString() : value.toString();'], ['911', '            _writeQuotedRaw(raw);'], ['912', '        } else if (Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features)) {'], ['913', '            writeRaw(value.toPlainString());']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 910, 'modified_line': '            String raw = value.toPlainString();'}, {'line_number': 911, 'modified_line': '            _writeQuotedRaw(raw);'}, {'line_number': 912, 'modified_line': '        writeRaw(value.toPlainString());'}, {'line_number': 913, 'modified_line': '            writeRaw(value.toPlainString());'}]}, {'file_name': 'com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java', 'target_lines': [['687', '            String raw = isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN) ? value.toPlainString() : value.toString();'], ['688', '            _writeQuotedRaw(raw);'], ['689', '        } else if (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)) {'], ['690', '            writeRaw(value.toPlainString());']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 687, 'modified_line': '            String raw = value.toPlainString();'}, {'line_number': 688, 'modified_line': '            _writeQuotedRaw(raw);'}, {'line_number': 689, 'modified_line': '        writeRaw(value.toPlainString());'}, {'line_number': 690, 'modified_line': '            writeRaw(value.toPlainString());'}]}, {'file_name': 'com/fasterxml/jackson/core/base/GeneratorBase.java', 'target_lines': [['53', '//'], ['434', '//'], ['435', '//']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 53, 'modified_line': '// Fix for writing big decimals as plain strings'}, {'line_number': 434, 'modified_line': '// Fix for writing big decimals as plain strings'}, {'line_number': 435, 'modified_line': '// Fix for writing big decimals as plain strings'}]}]

###Fix:
[]

###Fix:
[{'file_name': 'com/fasterxml/jackson/core/json/UTF8JsonGenerator.java', 'insertions': [], 'deletions': [910, 911, 912, 913], 'modifications': [{'line_number': 903, 'modified_line': '// Updated implementation for writeNumber(BigDecimal value) method'}, {'line_number': 904, 'modified_line': 'public void writeNumber(BigDecimal value) throws IOException {'}, {'line_number': 905, 'modified_line': '    if (value == null) {'}, {'line_number': 906, 'modified_line': '        _writeNull();'}, {'line_number': 907, 'modified_line': '        return;'}, {'line_number': 908, 'modified_line': '    }'}, {'line_number': 909, 'modified_line': "    // First, let's convert the BigDecimal to a plain String"}, {'line_number': 910, 'modified_line': '    String numberStr = value.toString();'}, {'line_number': 911, 'modified_line': '    int length = numberStr.length();'}, {'line_number': 912, 'modified_line': '    // Check if the output buffer is large enough'}, {'line_number': 913, 'modified_line': '    if (_outputTail + length >= _outputEnd) {'}, {'line_number': 914, 'modified_line': '        _flushBuffer();'}, {'line_number': 915, 'modified_line': '    }'}, {'line_number': 916, 'modified_line': '    // Then write the characters directly to the output buffer'}, {'line_number': 917, 'modified_line': '    numberStr.getChars(0, length, _charBuffer, 0);'}, {'line_number': 918, 'modified_line': '    if (length <= _outputMaxContiguous) {'}, {'line_number': 919, 'modified_line': '        if (_outputTail == 0) {'}, {'line_number': 920, 'modified_line': '            // If we are writing the first characters, no need to escape'}, {'line_number': 921, 'modified_line': '            _writeStringSegment(_charBuffer, 0, length);'}, {'line_number': 922, 'modified_line': '        } else {'}, {'line_number': 923, 'modified_line': '            // Escape and write the characters'}, {'line_number': 924, 'modified_line': '            _writeStringSegmentASCII(_charBuffer, 0, length);'}, {'line_number': 925, 'modified_line': '        }'}, {'line_number': 926, 'modified_line': '    } else {'}, {'line_number': 927, 'modified_line': '        // If the number of characters exceeds the output buffer size, write to output stream directly'}, {'line_number': 928, 'modified_line': '        _writeStringSegments(_charBuffer, 0, length);'}, {'line_number': 929, 'modified_line': '    }'}, {'line_number': 930, 'modified_line': '}'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/core/json/UTF8JsonGenerator.java', 'target_lines': [['910', '            String raw = Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features) ? value.toPlainString() : value.toString();'], ['911', '            _writeQuotedRaw(raw);'], ['912', '        } else if (Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features)) {'], ['913', '            writeRaw(value.toPlainString());']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 910, 'modified_line': '            String raw = value.toPlainString();'}, {'line_number': 911, 'modified_line': '            _writeQuotedRaw(raw);'}, {'line_number': 912, 'modified_line': '        writeRaw(value.toPlainString());'}, {'line_number': 913, 'modified_line': '            writeRaw(value.toPlainString());'}]}, {'file_name': 'com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java', 'target_lines': [['687', '            String raw = isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN) ? value.toPlainString() : value.toString();'], ['688', '            _writeQuotedRaw(raw);'], ['689', '        } else if (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)) {'], ['690', '            writeRaw(value.toPlainString());']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 687, 'modified_line': '            String raw = value.toPlainString();'}, {'line_number': 688, 'modified_line': '            _writeQuotedRaw(raw);'}, {'line_number': 689, 'modified_line': '        writeRaw(value.toPlainString());'}, {'line_number': 690, 'modified_line': '            writeRaw(value.toPlainString());'}]}, {'file_name': 'com/fasterxml/jackson/core/base/GeneratorBase.java', 'target_lines': [['53', '//'], ['434', '//'], ['435', '//']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 53, 'modified_line': '// Fix for writing big decimals as plain strings'}, {'line_number': 434, 'modified_line': '// Fix for writing big decimals as plain strings'}, {'line_number': 435, 'modified_line': '// Fix for writing big decimals as plain strings'}]}]


