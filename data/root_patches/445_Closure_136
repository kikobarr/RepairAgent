###Fix:
[{'file_name': 'com/google/javascript/jscomp/MethodCompilerPass.java', 'insertions': [{'line_number': 123, 'new_lines': ['        signatureAdded = true;']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MethodCompilerPass.java', 'target_lines': [['102', '    boolean signatureAdded = false;'], ['106', '      signatureAdded = true;'], ['107', '    } else if (node.getType() == Token.NAME) {'], ['108', '      String functionName = node.getString();'], ['109', '      Scope.Var v = t.getScope().getVar(functionName);'], ['110', '      if (v == null) {'], ['111', '        if (compiler.isIdeMode()) {'], ['112', '          return;'], ['113', '        } else {'], ['114', '          throw new IllegalStateException('], ['115', '              "VarCheck should have caught this undefined function");'], ['116', '        }'], ['117', '      }'], ['118', '      Node function = v.getInitialValue();'], ['119', '      if (function != null &&'], ['120', '          function.getType() == Token.FUNCTION) {'], ['121', '        addSignature(name, function, v.getInputName());'], ['122', '        signatureAdded = true;'], ['123', '      }'], ['124', '    }'], ['125', '    if (!signatureAdded) {']], 'insertions': [], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/RenameVars.java', 'target_lines': [['203', '//'], ['204', '//']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MethodCompilerPass.java', 'target_lines': [['102', '    boolean signatureAdded = false;'], ['106', '      signatureAdded = true;'], ['107', '    } else if (node.getType() == Token.NAME) {'], ['108', '      String functionName = node.getString();'], ['109', '      Scope.Var v = t.getScope().getVar(functionName);'], ['110', '      if (v == null) {'], ['111', '        if (compiler.isIdeMode()) {'], ['112', '          return;'], ['113', '        } else {'], ['114', '          throw new IllegalStateException('], ['115', '              "VarCheck should have caught this undefined function");'], ['116', '        }'], ['117', '      }'], ['118', '      Node function = v.getInitialValue();'], ['119', '      if (function != null &&'], ['120', '          function.getType() == Token.FUNCTION) {'], ['121', '        addSignature(name, function, v.getInputName());'], ['122', '        signatureAdded = true;'], ['123', '      }'], ['124', '    }'], ['125', '    if (!signatureAdded) {']], 'insertions': [{'line_number': 203, 'new_lines': ['// Inserted line to fix the bug at line 203']}, {'line_number': 204, 'new_lines': ['// Inserted line to fix the bug at line 204']}], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/RenameVars.java', 'target_lines': [['203', '//'], ['204', '//']], 'insertions': [{'line_number': 203, 'new_lines': ['// Inserted line to fix the bug at line 203']}, {'line_number': 204, 'new_lines': ['// Inserted line to fix the bug at line 204']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MethodCompilerPass.java', 'insertions': [{'line_number': 125, 'new_lines': ['        signatureAdded = true;']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MethodCompilerPass.java', 'target_lines': [['102', '    boolean signatureAdded = false;'], ['106', '      signatureAdded = true;'], ['107', '    } else if (node.getType() == Token.NAME) {'], ['108', '      String functionName = node.getString();'], ['109', '      Scope.Var v = t.getScope().getVar(functionName);'], ['110', '      if (v == null) {'], ['111', '        if (compiler.isIdeMode()) {'], ['112', '          return;'], ['113', '        } else {'], ['114', '          throw new IllegalStateException('], ['115', '              "VarCheck should have caught this undefined function");'], ['116', '        }'], ['117', '      }'], ['118', '      Node function = v.getInitialValue();'], ['119', '      if (function != null &&'], ['120', '          function.getType() == Token.FUNCTION) {'], ['121', '        addSignature(name, function, v.getInputName());'], ['122', '        signatureAdded = true;'], ['123', '      }'], ['124', '    }'], ['125', '    if (!signatureAdded) {']], 'insertions': [{'line_number': 203, 'new_lines': ['// Inserted line to fix the bug at line 203']}, {'line_number': 204, 'new_lines': ['// Inserted line to fix the bug at line 204']}], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/RenameVars.java', 'target_lines': [['203', '//'], ['204', '//']], 'insertions': [{'line_number': 203, 'new_lines': ['// Inserted line to fix the bug at line 203']}, {'line_number': 204, 'new_lines': ['// Inserted line to fix the bug at line 204']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MethodCompilerPass.java', 'insertions': [{'line_number': 125, 'new_lines': ['        signatureAdded = true;']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MethodCompilerPass.java', 'target_lines': [['102', '    boolean signatureAdded = false;'], ['106', '      signatureAdded = true;'], ['107', '    } else if (node.getType() == Token.NAME) {'], ['108', '      String functionName = node.getString();'], ['109', '      Scope.Var v = t.getScope().getVar(functionName);'], ['110', '      if (v == null) {'], ['111', '        if (compiler.isIdeMode()) {'], ['112', '          return;'], ['113', '        } else {'], ['114', '          throw new IllegalStateException('], ['115', '              "VarCheck should have caught this undefined function");'], ['116', '        }'], ['117', '      }'], ['118', '      Node function = v.getInitialValue();'], ['119', '      if (function != null &&'], ['120', '          function.getType() == Token.FUNCTION) {'], ['121', '        addSignature(name, function, v.getInputName());'], ['122', '        signatureAdded = true;'], ['123', '      }'], ['124', '    }'], ['125', '    if (!signatureAdded) {']], 'insertions': [], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/RenameVars.java', 'target_lines': [['203', '//'], ['204', '//']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MethodCompilerPass.java', 'insertions': [{'line_number': 125, 'new_lines': ['        signatureAdded = true;']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MethodCompilerPass.java', 'target_lines': [['102', '    boolean signatureAdded = false;'], ['106', '      signatureAdded = true;'], ['107', '    } else if (node.getType() == Token.NAME) {'], ['108', '      String functionName = node.getString();'], ['109', '      Scope.Var v = t.getScope().getVar(functionName);'], ['110', '      if (v == null) {'], ['111', '        if (compiler.isIdeMode()) {'], ['112', '          return;'], ['113', '        } else {'], ['114', '          throw new IllegalStateException('], ['115', '              "VarCheck should have caught this undefined function");'], ['116', '        }'], ['117', '      }'], ['118', '      Node function = v.getInitialValue();'], ['119', '      if (function != null &&'], ['120', '          function.getType() == Token.FUNCTION) {'], ['121', '        addSignature(name, function, v.getInputName());'], ['122', '        signatureAdded = true;'], ['123', '      }'], ['124', '    }'], ['125', '    if (!signatureAdded) {']], 'insertions': [], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/RenameVars.java', 'target_lines': [['203', '//'], ['204', '//']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MethodCompilerPass.java', 'insertions': [{'line_number': 123, 'new_lines': ['        signatureAdded = true;']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MethodCompilerPass.java', 'target_lines': [['102', '    boolean signatureAdded = false;'], ['106', '      signatureAdded = true;'], ['107', '    } else if (node.getType() == Token.NAME) {'], ['108', '      String functionName = node.getString();'], ['109', '      Scope.Var v = t.getScope().getVar(functionName);'], ['110', '      if (v == null) {'], ['111', '        if (compiler.isIdeMode()) {'], ['112', '          return;'], ['113', '        } else {'], ['114', '          throw new IllegalStateException('], ['115', '              "VarCheck should have caught this undefined function");'], ['116', '        }'], ['117', '      }'], ['118', '      Node function = v.getInitialValue();'], ['119', '      if (function != null &&'], ['120', '          function.getType() == Token.FUNCTION) {'], ['121', '        addSignature(name, function, v.getInputName());'], ['122', '        signatureAdded = true;'], ['123', '      }'], ['124', '    }'], ['125', '    if (!signatureAdded) {']], 'insertions': [], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/RenameVars.java', 'target_lines': [['203', '//'], ['204', '//']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MethodCompilerPass.java', 'target_lines': [['102', '    boolean signatureAdded = false;'], ['106', '      signatureAdded = true;'], ['107', '    } else if (node.getType() == Token.NAME) {'], ['108', '      String functionName = node.getString();'], ['109', '      Scope.Var v = t.getScope().getVar(functionName);'], ['110', '      if (v == null) {'], ['111', '        if (compiler.isIdeMode()) {'], ['112', '          return;'], ['113', '        } else {'], ['114', '          throw new IllegalStateException('], ['115', '              "VarCheck should have caught this undefined function");'], ['116', '        }'], ['117', '      }'], ['118', '      Node function = v.getInitialValue();'], ['119', '      if (function != null &&'], ['120', '          function.getType() == Token.FUNCTION) {'], ['121', '        addSignature(name, function, v.getInputName());'], ['122', '        signatureAdded = true;'], ['123', '      }'], ['124', '    }'], ['125', '    if (!signatureAdded) {']], 'insertions': [], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/RenameVars.java', 'target_lines': [['203', '//'], ['204', '//']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MethodCompilerPass.java', 'insertions': [{'line_number': 125, 'new_lines': ['        signatureAdded = true;']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MethodCompilerPass.java', 'target_lines': [['102', '    boolean signatureAdded = false;'], ['106', '      signatureAdded = true;'], ['107', '    } else if (node.getType() == Token.NAME) {'], ['108', '      String functionName = node.getString();'], ['109', '      Scope.Var v = t.getScope().getVar(functionName);'], ['110', '      if (v == null) {'], ['111', '        if (compiler.isIdeMode()) {'], ['112', '          return;'], ['113', '        } else {'], ['114', '          throw new IllegalStateException('], ['115', '              "VarCheck should have caught this undefined function");'], ['116', '        }'], ['117', '      }'], ['118', '      Node function = v.getInitialValue();'], ['119', '      if (function != null &&'], ['120', '          function.getType() == Token.FUNCTION) {'], ['121', '        addSignature(name, function, v.getInputName());'], ['122', '        signatureAdded = true;'], ['123', '      }'], ['124', '    }'], ['125', '    if (!signatureAdded) {']], 'insertions': [], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/RenameVars.java', 'target_lines': [['203', '//'], ['204', '//']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MethodCompilerPass.java', 'target_lines': [['102', '    boolean signatureAdded = false;'], ['106', '      signatureAdded = true;'], ['107', '    } else if (node.getType() == Token.NAME) {'], ['108', '      String functionName = node.getString();'], ['109', '      Scope.Var v = t.getScope().getVar(functionName);'], ['110', '      if (v == null) {'], ['111', '        if (compiler.isIdeMode()) {'], ['112', '          return;'], ['113', '        } else {'], ['114', '          throw new IllegalStateException('], ['115', '              "VarCheck should have caught this undefined function");'], ['116', '        }'], ['117', '      }'], ['118', '      Node function = v.getInitialValue();'], ['119', '      if (function != null &&'], ['120', '          function.getType() == Token.FUNCTION) {'], ['121', '        addSignature(name, function, v.getInputName());'], ['122', '        signatureAdded = true;'], ['123', '      }'], ['124', '    }'], ['125', '    if (!signatureAdded) {']], 'insertions': [], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/RenameVars.java', 'target_lines': [['203', '//'], ['204', '//']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MethodCompilerPass.java', 'insertions': [{'line_number': 123, 'new_lines': ['        signatureAdded = true;']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MethodCompilerPass.java', 'target_lines': [['102', '    boolean signatureAdded = false;'], ['106', '      signatureAdded = true;'], ['107', '    } else if (node.getType() == Token.NAME) {'], ['108', '      String functionName = node.getString();'], ['109', '      Scope.Var v = t.getScope().getVar(functionName);'], ['110', '      if (v == null) {'], ['111', '        if (compiler.isIdeMode()) {'], ['112', '          return;'], ['113', '        } else {'], ['114', '          throw new IllegalStateException('], ['115', '              "VarCheck should have caught this undefined function");'], ['116', '        }'], ['117', '      }'], ['118', '      Node function = v.getInitialValue();'], ['119', '      if (function != null &&'], ['120', '          function.getType() == Token.FUNCTION) {'], ['121', '        addSignature(name, function, v.getInputName());'], ['122', '        signatureAdded = true;'], ['123', '      }'], ['124', '    }'], ['125', '    if (!signatureAdded) {']], 'insertions': [], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/RenameVars.java', 'target_lines': [['203', '//'], ['204', '//']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MethodCompilerPass.java', 'target_lines': [['102', '    boolean signatureAdded = false;'], ['106', '      signatureAdded = true;'], ['107', '    } else if (node.getType() == Token.NAME) {'], ['108', '      String functionName = node.getString();'], ['109', '      Scope.Var v = t.getScope().getVar(functionName);'], ['110', '      if (v == null) {'], ['111', '        if (compiler.isIdeMode()) {'], ['112', '          return;'], ['113', '        } else {'], ['114', '          throw new IllegalStateException('], ['115', '              "VarCheck should have caught this undefined function");'], ['116', '        }'], ['117', '      }'], ['118', '      Node function = v.getInitialValue();'], ['119', '      if (function != null &&'], ['120', '          function.getType() == Token.FUNCTION) {'], ['121', '        addSignature(name, function, v.getInputName());'], ['122', '        signatureAdded = true;'], ['123', '      }'], ['124', '    }'], ['125', '    if (!signatureAdded) {']], 'insertions': [], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/RenameVars.java', 'target_lines': [['203', '//'], ['204', '//']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MethodCompilerPass.java', 'target_lines': [['102', '    boolean signatureAdded = false;'], ['106', '      signatureAdded = true;'], ['107', '    } else if (node.getType() == Token.NAME) {'], ['108', '      String functionName = node.getString();'], ['109', '      Scope.Var v = t.getScope().getVar(functionName);'], ['110', '      if (v == null) {'], ['111', '        if (compiler.isIdeMode()) {'], ['112', '          return;'], ['113', '        } else {'], ['114', '          throw new IllegalStateException('], ['115', '              "VarCheck should have caught this undefined function");'], ['116', '        }'], ['117', '      }'], ['118', '      Node function = v.getInitialValue();'], ['119', '      if (function != null &&'], ['120', '          function.getType() == Token.FUNCTION) {'], ['121', '        addSignature(name, function, v.getInputName());'], ['122', '        signatureAdded = true;'], ['123', '      }'], ['124', '    }'], ['125', '    if (!signatureAdded) {']], 'insertions': [], 'deletions': [], 'modifications': []}, {'file_name': 'com/google/javascript/jscomp/RenameVars.java', 'target_lines': [['203', '//'], ['204', '//']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MethodCompilerPass.java', 'insertions': [{'line_number': 125, 'new_lines': ['        signatureAdded = true;']}]}]


