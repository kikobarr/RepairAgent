###Fix:
[]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/NodeUtil.java', 'insertions': [{'line_number': 136, 'new_lines': ['        return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/NodeUtil.java', 'target_lines': [['108', '//'], ['136', '//'], ['137', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/NodeUtil.java', 'target_lines': [['108', '//'], ['136', '//'], ['137', '//']], 'insertions': [{'line_number': 108, 'new_lines': ['        return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix']}, {'line_number': 136, 'new_lines': ['        return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix']}, {'line_number': 137, 'new_lines': ['        return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/NodeUtil.java', 'insertions': [{'line_number': 122, 'new_lines': ['      case Token.NUMBER:', '        return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix']}, {'line_number': 120, 'new_lines': ['      case Token.TRUE:', '        return TernaryValue.TRUE; // Modified for bug fix']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/NodeUtil.java', 'target_lines': [['108', '//'], ['136', '//'], ['137', '//']], 'insertions': [{'line_number': 108, 'new_lines': ['        return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix']}, {'line_number': 136, 'new_lines': ['        return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix']}, {'line_number': 137, 'new_lines': ['        return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/NodeUtil.java', 'insertions': [{'line_number': 136, 'new_lines': ['        return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/NodeUtil.java', 'target_lines': [['108', '//'], ['136', '//'], ['137', '//']], 'insertions': [{'line_number': 136, 'new_lines': ['        return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix']}, {'line_number': 137, 'new_lines': ['        return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/NodeUtil.java', 'target_lines': [['108', '//'], ['136', '//'], ['137', '//']], 'insertions': [{'line_number': 108, 'new_lines': ['        return getPureBooleanValue(n); // Modified for bug fix']}, {'line_number': 136, 'new_lines': ['        return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix']}, {'line_number': 137, 'new_lines': ['        return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/NodeUtil.java', 'insertions': [{'line_number': 108, 'new_lines': ['        if (n.getType() == Token.NUMBER) {', '            return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix', '        }']}, {'line_number': 136, 'new_lines': ['        if (n.getType() == Token.NUMBER) {', '            return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix', '        }']}, {'line_number': 137, 'new_lines': ['        if (n.getType() == Token.NUMBER) {', '            return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix', '        }']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/NodeUtil.java', 'insertions': [{'line_number': 108, 'new_lines': ['        if (n.getType() == Token.NUMBER) {', '            return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix', '        }']}, {'line_number': 136, 'new_lines': ['        if (n.getType() == Token.NUMBER) {', '            return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix', '        }']}, {'line_number': 137, 'new_lines': ['        if (n.getType() == Token.NUMBER) {', '            return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix', '        }']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/NodeUtil.java', 'insertions': [{'line_number': 108, 'new_lines': ['        if (n.getType() == Token.NUMBER) {', '            return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix', '        }']}, {'line_number': 136, 'new_lines': ['        if (n.getType() == Token.NUMBER) {', '            return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix', '        }']}, {'line_number': 137, 'new_lines': ['        if (n.getType() == Token.NUMBER) {', '            return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix', '        }']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/NodeUtil.java', 'insertions': [{'line_number': 108, 'new_lines': ['        if (n.getType() == Token.NUMBER) {', '            return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix', '        }']}, {'line_number': 136, 'new_lines': ['        if (n.getType() == Token.NUMBER) {', '            return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix', '        }']}, {'line_number': 137, 'new_lines': ['        if (n.getType() == Token.NUMBER) {', '            return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix', '        }']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/NodeUtil.java', 'insertions': [{'line_number': 136, 'new_lines': ['        return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/NodeUtil.java', 'target_lines': [['108', '//'], ['136', '//'], ['137', '//']], 'insertions': [{'line_number': 108, 'new_lines': ['        return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix']}, {'line_number': 136, 'new_lines': ['        return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix']}, {'line_number': 137, 'new_lines': ['        return TernaryValue.forBoolean(n.getDouble() != 0); // Modified for bug fix']}], 'deletions': [], 'modifications': []}]


