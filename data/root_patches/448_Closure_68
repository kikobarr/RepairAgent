###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'insertions': [{'line_number': 868, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}, {'line_number': 1709, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}, {'line_number': 1761, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': [{'line_number': 868, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}, {'line_number': 1709, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}, {'line_number': 1761, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': [{'line_number': 868, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}, {'line_number': 1709, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}, {'line_number': 1761, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': [{'line_number': 868, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}, {'line_number': 1709, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}, {'line_number': 1761, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': [{'line_number': 868, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}, {'line_number': 1709, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}, {'line_number': 1761, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': [{'line_number': 868, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}, {'line_number': 1709, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}, {'line_number': 1761, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': [{'line_number': 868, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}, {'line_number': 1709, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}, {'line_number': 1761, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': [{'line_number': 868, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}, {'line_number': 1709, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}, {'line_number': 1761, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': [{'line_number': 868, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}, {'line_number': 1709, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}, {'line_number': 1761, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations\n', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {\n', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());\n', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'insertions': [{'line_number': 868, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());', '}']}, {'line_number': 870, 'new_lines': ['                  }']}, {'line_number': 1709, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());', '}']}, {'line_number': 1761, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());', '}']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'insertions': [{'line_number': 868, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());', '}']}, {'line_number': 1709, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());', '}']}, {'line_number': 1761, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());', '}']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': [{'line_number': 868, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());', '}']}, {'line_number': 1709, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());', '}']}, {'line_number': 1761, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());', '}']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': [{'line_number': 868, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());', '}']}, {'line_number': 870, 'new_lines': ['                  }']}, {'line_number': 1709, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());', '}']}, {'line_number': 1761, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());', '}']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'insertions': [{'line_number': 868, 'new_lines': ['if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());']}, {'line_number': 1709, 'new_lines': ['if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());']}, {'line_number': 1761, 'new_lines': ['if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': [{'line_number': 868, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());']}, {'line_number': 1709, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());']}, {'line_number': 1761, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': [{'line_number': 868, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());', '}']}, {'line_number': 1709, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());', '}']}, {'line_number': 1761, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': [{'line_number': 868, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());', '}']}, {'line_number': 1709, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());', '}']}, {'line_number': 1761, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/parsing/JsDocInfoParser.java', 'target_lines': [['870', '                  }'], ['868', '//'], ['1709', '//'], ['1761', '//']], 'insertions': [{'line_number': 868, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());', '}']}, {'line_number': 870, 'new_lines': ['                  }']}, {'line_number': 1709, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());', '}']}, {'line_number': 1761, 'new_lines': ['// Inserted line to handle missing opening parentheses in type annotations', 'if (token == JsDocToken.ANNOTATION && annotation == Annotation.TYPE && !stream.getString().startsWith("(") {', 'parser.addParserWarning("msg.missing.opening.parentheses", stream.getLineno(), stream.getCharno());', '}']}], 'deletions': [], 'modifications': []}]


