###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 202, 'new_lines': ['// Fixing potential issue with self-closing tags handling', 'if (startTag.isSelfClosing()) {', 'Element el = insertEmpty(startTag);', 'stack.add(el);', 'tokeniser.transition(TokeniserState.Data);', 'tokeniser.emit(emptyEnd.reset().name(el.tagName()));', 'return el;', '}']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'target_lines': [['42', '//'], ['468', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'target_lines': [['42', '//'], ['468', '//']], 'insertions': [{'line_number': 42, 'new_lines': ['// Insert new line(s) here to fix the bug at line 42']}, {'line_number': 468, 'new_lines': ['// Insert new line(s) here to fix the bug at line 468']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 42, 'new_lines': ['// Insert new line(s) here to fix the bug at line 42']}, {'line_number': 468, 'new_lines': ['// Insert new line(s) here to fix the bug at line 468']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 42, 'new_lines': ['// Fixing potential issue with self-closing tags handling', 'if (startTag.isSelfClosing()) {', 'Element el = insertEmpty(startTag);', 'stack.add(el);', 'tokeniser.transition(TokeniserState.Data);', 'tokeniser.emit(emptyEnd.reset().name(el.tagName()));', 'return el;', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 202, 'new_lines': ['// Fixing potential issue with self-closing tags handling', 'if (startTag.isSelfClosing()) {', 'Element el = insertEmpty(startTag);', 'stack.add(el);', 'tokeniser.transition(TokeniserState.Data);', 'tokeniser.emit(emptyEnd.reset().name(el.tagName()));', 'return el;', '}']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'target_lines': [['42', '//'], ['468', '//']], 'insertions': [{'line_number': 42, 'new_lines': ['// Fixing potential issue with self-closing tags handling', 'if (startTag.isSelfClosing()) {', 'Element el = insertEmpty(startTag);', 'stack.add(el);', 'tokeniser.transition(TokeniserState.Data);', 'tokeniser.emit(emptyEnd.reset().name(el.tagName()));', 'return el;', '}']}, {'line_number': 468, 'new_lines': ['// Fixing potential issue with self-closing tags handling', 'if (startTag.isSelfClosing()) {', 'Element el = insertEmpty(startTag);', 'stack.add(el);', 'tokeniser.transition(TokeniserState.Data);', 'tokeniser.emit(emptyEnd.reset().name(el.tagName()));', 'return el;', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 202, 'new_lines': ['// Fixing potential issue with self-closing tags handling', 'if (startTag.isSelfClosing()) {', 'Element el = insertEmpty(startTag);', 'stack.add(el);', 'tokeniser.transition(TokeniserState.Data);', 'tokeniser.emit(emptyEnd.reset().name(el.tagName()));', 'return el;', '}']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 202, 'new_lines': ['// Fixing potential issue with self-closing tags handling', 'if (startTag.isSelfClosing()) {', 'Element el = insertEmpty(startTag);', 'stack.add(el);', 'tokeniser.transition(TokeniserState.Data);', 'tokeniser.emit(emptyEnd.reset().name(el.tagName()));', 'return el;', '}']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'target_lines': [['42', '//'], ['468', '//']], 'insertions': [{'line_number': 42, 'new_lines': ['// Insert new line(s) here to fix the bug at line 42']}, {'line_number': 468, 'new_lines': ['// Insert new line(s) here to fix the bug at line 468']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 42, 'new_lines': ['// Fixing potential issue with self-closing tags handling', 'if (startTag.isSelfClosing()) {', 'Element el = insertEmpty(startTag);', 'stack.add(el);', 'tokeniser.transition(TokeniserState.Data);', 'tokeniser.emit(emptyEnd.reset().name(el.tagName()));', 'return el;', '}']}, {'line_number': 468, 'new_lines': ['// Fixing potential issue with self-closing tags handling', 'if (startTag.isSelfClosing()) {', 'Element el = insertEmpty(startTag);', 'stack.add(el);', 'tokeniser.transition(TokeniserState.Data);', 'tokeniser.emit(emptyEnd.reset().name(el.tagName()));', 'return el;', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 202, 'new_lines': ['// Fixing potential issue with self-closing tags handling', 'if (startTag.isSelfClosing()) {', 'Element el = insertEmpty(startTag);', 'stack.add(el);', 'tokeniser.transition(TokeniserState.Data);', 'tokeniser.emit(emptyEnd.reset().name(el.tagName()));', 'return el;', '}']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'target_lines': [['42', '//'], ['468', '//']], 'insertions': [{'line_number': 42, 'new_lines': ['// Fixing potential issue with self-closing tags handling', 'if (startTag.isSelfClosing()) {', 'Element el = insertEmpty(startTag);', 'stack.add(el);', 'tokeniser.transition(TokeniserState.Data);', 'tokeniser.emit(emptyEnd.reset().name(el.tagName()));', 'return el;', '}']}, {'line_number': 468, 'new_lines': ['// Fixing potential issue with self-closing tags handling', 'if (startTag.isSelfClosing()) {', 'Element el = insertEmpty(startTag);', 'stack.add(el);', 'tokeniser.transition(TokeniserState.Data);', 'tokeniser.emit(emptyEnd.reset().name(el.tagName()));', 'return el;', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 202, 'new_lines': ['// Fixing potential issue with self-closing tags handling', 'if (startTag.isSelfClosing()) {', 'Element el = insertEmpty(startTag);', 'stack.add(el);', 'tokeniser.transition(TokeniserState.Data);', 'tokeniser.emit(emptyEnd.reset().name(el.tagName()));', 'return el;', '}']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'target_lines': [['42', '//'], ['468', '//']], 'insertions': [{'line_number': 42, 'new_lines': ['// Fixing potential issue with self-closing tags handling', 'if (startTag.isSelfClosing()) {', 'Element el = insertEmpty(startTag);', 'stack.add(el);', 'tokeniser.transition(TokeniserState.Data);', 'tokeniser.emit(emptyEnd.reset().name(el.tagName()));', 'return el;', '}']}, {'line_number': 468, 'new_lines': ['// Fixing potential issue with self-closing tags handling', 'if (startTag.isSelfClosing()) {', 'Element el = insertEmpty(startTag);', 'stack.add(el);', 'tokeniser.transition(TokeniserState.Data);', 'tokeniser.emit(emptyEnd.reset().name(el.tagName()));', 'return el;', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilder.java', 'insertions': [{'line_number': 42, 'new_lines': ['// Insert new line(s) here to fix the bug at line 42']}, {'line_number': 468, 'new_lines': ['// Insert new line(s) here to fix the bug at line 468']}]}]


