###Fix:
[]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 363, 'modified_line': '            byte[] data = n.binaryValue();\n'}, {'line_number': 364, 'modified_line': '            if (data != null && n.isBinary()) {\n'}, {'line_number': 365, 'modified_line': '                return data;\n'}, {'line_number': 366, 'modified_line': '            }\n'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 364, 'modified_line': '            if (data != null && n.isBinary()) {'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [{'line_number': 364, 'new_lines': ['            if (data != null && n.isBinary()) {']}, {'line_number': 366, 'new_lines': ['                if (n.isBinary()) {']}, {'line_number': 367, 'new_lines': ['                    return n.binaryValue();']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [{'line_number': 364, 'new_lines': ['            if (data != null && n.isBinary()) {']}, {'line_number': 366, 'new_lines': ['                if (n.isBinary()) {']}, {'line_number': 367, 'new_lines': ['                    return n.binaryValue();']}], 'deletions': [], 'modifications': [{'line_number': 364, 'modified_line': '            if (data != null && n.isBinary()) {'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [{'line_number': 364, 'new_lines': ['            if (data != null && n.isBinary()) {']}, {'line_number': 366, 'new_lines': ['                if (n.isBinary()) {']}, {'line_number': 367, 'new_lines': ['                    return n.binaryValue();']}], 'deletions': [], 'modifications': [{'line_number': 364, 'modified_line': '            if (data != null && n.isBinary()) {'}, {'line_number': 367, 'modified_line': '            if (n.isPojo() || n.isBinary()) {'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [{'line_number': 364, 'new_lines': ['            if (data != null && n.isBinary()) {']}, {'line_number': 366, 'new_lines': ['                if (n.isBinary()) {']}, {'line_number': 367, 'new_lines': ['                    return n.binaryValue();']}], 'deletions': [], 'modifications': [{'line_number': 364, 'modified_line': '            if (data != null && n.isBinary()) {'}, {'line_number': 365, 'modified_line': '                if (data != null && n.isBinary()) {'}, {'line_number': 366, 'modified_line': '                return data;'}, {'line_number': 367, 'modified_line': '            }'}, {'line_number': 368, 'modified_line': '            if (n.isPojo() || n.isBinary()) {'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [{'line_number': 364, 'new_lines': ['            if (data != null && n.isBinary()) {']}, {'line_number': 366, 'new_lines': ['                if (n.isBinary()) {']}, {'line_number': 367, 'new_lines': ['                    return n.binaryValue();']}], 'deletions': [], 'modifications': [{'line_number': 364, 'modified_line': '            if (data != null && n.isBinary()) {'}, {'line_number': 365, 'modified_line': '                if (data != null && n.isBinary()) {'}, {'line_number': 366, 'modified_line': '                return data;'}, {'line_number': 367, 'modified_line': '            }'}, {'line_number': 368, 'modified_line': '            if (n.isPojo() || n.isBinary()) {'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [{'line_number': 364, 'new_lines': ['            if (data != null && n.isBinary()) {']}, {'line_number': 366, 'new_lines': ['                if (n.isBinary()) {']}, {'line_number': 367, 'new_lines': ['                    return n.binaryValue();']}], 'deletions': [], 'modifications': [{'line_number': 364, 'modified_line': '            if (data != null && n.isBinary()) {'}, {'line_number': 365, 'modified_line': '                if (data != null && n.isBinary()) {'}, {'line_number': 366, 'modified_line': '                return data;'}, {'line_number': 367, 'modified_line': '            '}, {'line_number': 368, 'modified_line': '            if (n.isPojo() || n.isBinary()) {'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 364, 'modified_line': '            if (data != null && n.isBinary()) {'}, {'line_number': 365, 'modified_line': '                if (data != null && n.isBinary()) {'}, {'line_number': 366, 'modified_line': '                return data;'}, {'line_number': 367, 'modified_line': '            '}, {'line_number': 368, 'modified_line': '            if (n.isPojo() || n.isBinary()) {'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 364, 'modified_line': '            if (data != null && n.isBinary()) {'}, {'line_number': 365, 'modified_line': '                if (data != null && n.isBinary()) {'}, {'line_number': 366, 'modified_line': '                return data;'}, {'line_number': 367, 'modified_line': '            '}, {'line_number': 368, 'modified_line': '            if (n.isPojo() || n.isBinary()) {'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 364, 'modified_line': '            if (data != null && n.isBinary()) {'}, {'line_number': 365, 'modified_line': '                if (data != null && n.isBinary()) {'}, {'line_number': 366, 'modified_line': '                return data;'}, {'line_number': 367, 'modified_line': '            if (n.isPojo() || n.isBinary()) {'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 363, 'modified_line': '            byte[] data = n.binaryValue();'}, {'line_number': 364, 'modified_line': '            if (data != null && n.isBinary()) {'}, {'line_number': 365, 'modified_line': '                return data;'}, {'line_number': 366, 'modified_line': '            if (n.isBinary()) {'}, {'line_number': 367, 'modified_line': '            if (n.isPojo() || n.isBinary()) {'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 363, 'modified_line': '            byte[] data = n.binaryValue();'}, {'line_number': 364, 'modified_line': '            if (data != null && n.isBinary()) {'}, {'line_number': 365, 'modified_line': '                return data;'}, {'line_number': 366, 'modified_line': '            if (n.isBinary()) {'}, {'line_number': 367, 'modified_line': '            if (n.isPojo() || n.isBinary()) {'}, {'line_number': 368, 'modified_line': '                Object ob = ((POJONode) n).getPojo();'}, {'line_number': 369, 'modified_line': '                if (ob instanceof byte[]) {'}, {'line_number': 370, 'modified_line': '                    return (byte[]) ob;'}, {'line_number': 371, 'modified_line': '                }'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 364, 'modified_line': '            if (data != null && n.isBinary()) {'}, {'line_number': 365, 'modified_line': '                return data;'}, {'line_number': 366, 'modified_line': '            }'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 364, 'modified_line': '            if (data != null && n.isBinary()) {'}, {'line_number': 365, 'modified_line': '                return data;'}, {'line_number': 366, 'modified_line': '            if (n.isBinary()) {'}, {'line_number': 367, 'modified_line': '            if (n.isPojo() || n.isBinary()) {'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [{'line_number': 364, 'new_lines': ['            if (data != null && n.isBinary()) {']}, {'line_number': 366, 'new_lines': ['                if (n.isBinary()) {']}, {'line_number': 367, 'new_lines': ['                    return n.binaryValue();']}], 'deletions': [], 'modifications': [{'line_number': 364, 'modified_line': '            if (data != null && n.isBinary()) {'}, {'line_number': 365, 'modified_line': '                return data;'}, {'line_number': 366, 'modified_line': '            if (n.isBinary()) {'}, {'line_number': 367, 'modified_line': '            if (n.isPojo() || n.isBinary()) {'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 363, 'modified_line': '            byte[] data = n.binaryValue();'}, {'line_number': 364, 'modified_line': '            if (data != null && n.isBinary()) {'}, {'line_number': 365, 'modified_line': '                return data;'}, {'line_number': 366, 'modified_line': '            }'}, {'line_number': 367, 'modified_line': '            if (n.isPojo() || n.isBinary()) {'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [{'line_number': 364, 'new_lines': ['            if (data != null && n.isBinary()) {']}, {'line_number': 366, 'new_lines': ['                if (n.isBinary()) {']}, {'line_number': 367, 'new_lines': ['                    return n.binaryValue();']}], 'deletions': [], 'modifications': [{'line_number': 364, 'modified_line': '            if (data != null && n.isBinary()) {'}, {'line_number': 365, 'modified_line': '                return data;'}, {'line_number': 366, 'modified_line': '            if (n.isBinary()) {'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [{'line_number': 364, 'new_lines': ['            if (data != null && n.isBinary()) {']}, {'line_number': 366, 'new_lines': ['                if (n.isBinary()) {']}, {'line_number': 367, 'new_lines': ['                    return n.binaryValue();']}], 'deletions': [], 'modifications': [{'line_number': 363, 'modified_line': '            byte[] data = n.binaryValue();'}, {'line_number': 364, 'modified_line': '            if (data != null && n.isBinary()) {'}, {'line_number': 365, 'modified_line': '                return data;'}, {'line_number': 366, 'modified_line': '            if (n.isBinary()) {'}, {'line_number': 367, 'modified_line': '            if (n.isPojo() || n.isBinary()) {'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 363, 'modified_line': '            byte[] data = n.binaryValue();'}, {'line_number': 364, 'modified_line': '            if (data != null && n.isBinary()) {'}, {'line_number': 365, 'modified_line': '                return data;'}, {'line_number': 366, 'modified_line': '            }'}, {'line_number': 367, 'modified_line': '            if (n.isPojo() || n.isBinary()) {'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 363, 'modified_line': '            byte[] data = n.binaryValue();'}, {'line_number': 364, 'modified_line': '            if (data != null && n.isBinary()) {'}, {'line_number': 365, 'modified_line': '                return data;'}, {'line_number': 366, 'modified_line': '            }'}, {'line_number': 367, 'modified_line': '            if (n.isPojo() || n.isBinary()) {'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 363, 'modified_line': '            byte[] data = n.binaryValue();'}, {'line_number': 364, 'modified_line': '            if (data != null && n.isBinary()) {'}, {'line_number': 365, 'modified_line': '                return data;'}, {'line_number': 366, 'modified_line': '            }'}, {'line_number': 367, 'modified_line': '            if (n.isPojo() || n.isBinary()) {'}, {'line_number': 368, 'modified_line': '                Object ob = ((POJONode) n).getPojo();'}, {'line_number': 369, 'modified_line': '                if (ob instanceof byte[]) {'}, {'line_number': 370, 'modified_line': '                    return (byte[]) ob;'}, {'line_number': 371, 'modified_line': '                }'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 364, 'modified_line': '            if (data != null && (n.isBinary() || n.isPojo())) {'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 364, 'modified_line': '            if (data != null && (n.isBinary() || n.isPojo())) {'}, {'line_number': 367, 'modified_line': '            if (n.isPojo() || n.isBinary()) {'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [{'line_number': 366, 'new_lines': ['                if (n.isBinary()) {']}, {'line_number': 367, 'new_lines': ['                    return n.binaryValue();']}], 'deletions': [], 'modifications': [{'line_number': 364, 'modified_line': '            if (data != null && n.isBinary()) {'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/node/TreeTraversingParser.java', 'target_lines': [['363', '            byte[] data = n.binaryValue();'], ['364', '            if (data != null) {'], ['365', '                return data;'], ['366', '            }'], ['367', '            if (n.isPojo()) {'], ['368', '                Object ob = ((POJONode) n).getPojo();'], ['369', '                if (ob instanceof byte[]) {'], ['370', '                    return (byte[]) ob;'], ['371', '                }']], 'insertions': [{'line_number': 366, 'new_lines': ['                if (n.isBinary()) {']}, {'line_number': 367, 'new_lines': ['                    return n.binaryValue();']}], 'deletions': [], 'modifications': [{'line_number': 364, 'modified_line': '            if (data != null && n.isBinary()) {'}, {'line_number': 367, 'modified_line': '            if (n.isPojo() || n.isBinary()) {'}]}]


