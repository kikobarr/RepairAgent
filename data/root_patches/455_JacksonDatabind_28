###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 104, 'modified_line': 'if (p.getCurrentToken() == JsonToken.FIELD_NAME || p.getCurrentToken() == JsonToken.END_OBJECT) {'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer.java', 'target_lines': [['97', '            if (p.getCurrentToken() == JsonToken.START_OBJECT) {'], ['98', '                p.nextToken();'], ['103', '            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {'], ['104', '                return deserializeObject(p, ctxt, ctxt.getNodeFactory());']], 'insertions': [], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer.java', 'target_lines': [['97', '            if (p.getCurrentToken() == JsonToken.START_OBJECT) {'], ['98', '                p.nextToken();'], ['103', '            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {'], ['104', '                return deserializeObject(p, ctxt, ctxt.getNodeFactory());']], 'insertions': [{'line_number': 101, 'new_lines': ['                if (p.getCurrentToken() == JsonToken.END_OBJECT) {']}, {'line_number': 102, 'new_lines': ['                    return deserializeObject(p, ctxt, ctxt.getNodeFactory());']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer.java', 'insertions': [{'line_number': 97, 'new_lines': ['                if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.END_OBJECT) {']}, {'line_number': 98, 'new_lines': ['                    p.nextToken();']}], 'deletions': [], 'modifications': [{'line_number': 103, 'modified_line': '            if (p.getCurrentToken() == JsonToken.FIELD_NAME || p.getCurrentToken() == JsonToken.END_OBJECT) {'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer.java', 'target_lines': [['97', '            if (p.getCurrentToken() == JsonToken.START_OBJECT) {'], ['98', '                p.nextToken();'], ['103', '            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {'], ['104', '                return deserializeObject(p, ctxt, ctxt.getNodeFactory());']], 'insertions': [{'line_number': 97, 'new_lines': ['                if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.END_OBJECT) {']}, {'line_number': 98, 'new_lines': ['                    p.nextToken();']}, {'line_number': 103, 'new_lines': ['            if (p.getCurrentToken() == JsonToken.FIELD_NAME || p.getCurrentToken() == JsonToken.END_OBJECT) {']}], 'deletions': [], 'modifications': [{'line_number': 104, 'modified_line': '                return deserializeObject(p, ctxt, ctxt.getNodeFactory());'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer.java', 'insertions': [{'line_number': 101, 'new_lines': ['                if (p.getCurrentToken() == JsonToken.END_OBJECT) {']}, {'line_number': 102, 'new_lines': ['                    return deserializeObject(p, ctxt, ctxt.getNodeFactory());']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer.java', 'target_lines': [['97', '            if (p.getCurrentToken() == JsonToken.START_OBJECT) {'], ['98', '                p.nextToken();'], ['103', '            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {'], ['104', '                return deserializeObject(p, ctxt, ctxt.getNodeFactory());']], 'insertions': [{'line_number': 101, 'new_lines': ['                if (p.getCurrentToken() == JsonToken.END_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {']}, {'line_number': 102, 'new_lines': ['                    return deserializeObject(p, ctxt, ctxt.getNodeFactory());']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer.java', 'target_lines': [['97', '            if (p.getCurrentToken() == JsonToken.START_OBJECT) {'], ['98', '                p.nextToken();'], ['103', '            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {'], ['104', '                return deserializeObject(p, ctxt, ctxt.getNodeFactory();']], 'insertions': [{'line_number': 101, 'new_lines': ['                if (p.getCurrentToken() == JsonToken.END_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {']}, {'line_number': 102, 'new_lines': ['                    return deserializeObject(p, ctxt, ctxt.getNodeFactory();']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer.java', 'target_lines': [['97', '            if (p.getCurrentToken() == JsonToken.START_OBJECT) {'], ['98', '                p.nextToken();'], ['103', '            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {'], ['104', '                return deserializeObject(p, ctxt, ctxt.getNodeFactory();']], 'insertions': [{'line_number': 101, 'new_lines': ['                if (p.getCurrentToken() == JsonToken.END_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {']}, {'line_number': 102, 'new_lines': ['                    return deserializeObject(p, ctxt, ctxt.getNodeFactory();']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer.java', 'insertions': [{'line_number': 101, 'new_lines': ['                if (p.getCurrentToken() == JsonToken.END_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {']}, {'line_number': 102, 'new_lines': ['                    return deserializeObject(p, ctxt, ctxt.getNodeFactory();']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer.java', 'target_lines': [['97', '            if (p.getCurrentToken() == JsonToken.START_OBJECT) {'], ['98', '                p.nextToken();'], ['103', '            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {'], ['104', '                return deserializeObject(p, ctxt, ctxt.getNodeFactory());']], 'insertions': [{'line_number': 101, 'new_lines': ['                if (p.getCurrentToken() == JsonToken.END_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {']}, {'line_number': 102, 'new_lines': ['                    return deserializeObject(p, ctxt, ctxt.getNodeFactory();']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer.java', 'insertions': [{'line_number': 101, 'new_lines': ['                if (p.getCurrentToken() == JsonToken.END_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {']}, {'line_number': 102, 'new_lines': ['                    return deserializeObject(p, ctxt, ctxt.getNodeFactory());']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 97, 'modified_line': '            if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.END_OBJECT) {'}, {'line_number': 98, 'modified_line': '                p.nextToken();'}, {'line_number': 103, 'modified_line': '            if (p.getCurrentToken() == JsonToken.FIELD_NAME || p.getCurrentToken() == JsonToken.END_OBJECT) {'}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer.java', 'target_lines': [['97', '            if (p.getCurrentToken() == JsonToken.START_OBJECT) {'], ['98', '                p.nextToken();'], ['103', '            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {'], ['104', '                return deserializeObject(p, ctxt, ctxt.getNodeFactory();']], 'insertions': [{'line_number': 97, 'new_lines': ['                if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.END_OBJECT) {']}, {'line_number': 98, 'new_lines': ['                    p.nextToken();']}, {'line_number': 103, 'new_lines': ['            if (p.getCurrentToken() == JsonToken.FIELD_NAME || p.getCurrentToken() == JsonToken.END_OBJECT) {']}, {'line_number': 104, 'new_lines': ['                return deserializeObject(p, ctxt, ctxt.getNodeFactory();']}], 'deletions': [], 'modifications': []}]


