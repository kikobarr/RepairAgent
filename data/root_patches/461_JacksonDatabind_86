###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java', 'insertions': [{'line_number': 29, 'new_lines': ['// Inserted new line to fix the bug']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java', 'insertions': [{'line_number': 29, 'new_lines': ['// Inserted new line to fix the bug: return new ResolvedRecursiveType(_referencedType, _contextType, _selfReferencedType, _superClass, _superInterfaces, _bindings, _superResolved, _superType, _superClassType, _superInterfacesTypes);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java', 'insertions': [{'line_number': 29, 'new_lines': ['// Inserted new line to fix the bug: return this;']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java', 'insertions': [{'line_number': 24, 'new_lines': ['if (ref.equals(_referencedType)) {', 'throw new IllegalStateException("Trying to re-set self reference; old value = "+_referencedType+", new = "+ref);', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java', 'target_lines': [['29', '//']], 'insertions': [{'line_number': 29, 'new_lines': ['// Inserted new line to fix the bug: return this;']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java', 'insertions': [{'line_number': 24, 'new_lines': ['if (ref.equals(_referencedType)) {', 'throw new IllegalStateException("Trying to re-set self reference; old value = "+_referencedType+", new = "+ref);', '}']}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java', 'target_lines': [['29', '//']], 'insertions': [{'line_number': 29, 'new_lines': ['// Inserted new line to fix the bug: return new ResolvedRecursiveType(_referencedType, _contextType, _selfReferencedType, _superClass, _superInterfaces, _bindings, _superResolved, _superType, _superClassType, _superInterfacesTypes);']}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java', 'insertions': [{'line_number': 24, 'new_lines': ['if (ref == null) {', 'throw new IllegalArgumentException("Reference type cannot be null");', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java', 'target_lines': [['29', '//']], 'insertions': [{'line_number': 29, 'new_lines': ['// Inserted new line to fix the bug: return this;']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java', 'insertions': [{'line_number': 29, 'new_lines': ['// Inserted new line to fix the bug: return new ResolvedRecursiveType(_referencedType, _contextType, _selfReferencedType, _superClass, _superInterfaces, _bindings, _superResolved, _superType, _superClassType, _superInterfacesTypes);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java', 'insertions': [{'line_number': 24, 'new_lines': ['if (ref.equals(_referencedType)) {', 'throw new IllegalStateException("Trying to re-set self reference; old value = "+_referencedType+", new = "+ref);', '}']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java', 'target_lines': [['29', '//']], 'insertions': [{'line_number': 29, 'new_lines': ['// Inserted new line to fix the bug: return new ResolvedRecursiveType(_referencedType, _contextType, _selfReferencedType, _superClass, _superInterfaces, _bindings, _superResolved, _superType, _superClassType, _superInterfacesTypes);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java', 'insertions': [{'line_number': 24, 'new_lines': ['if (ref != null && ref.equals(_referencedType)) {', 'throw new IllegalStateException("Trying to re-set self reference; old value = " + _referencedType + ", new = " + ref);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java', 'target_lines': [['29', '//']], 'insertions': [{'line_number': 29, 'new_lines': ['// Inserted new line to fix the bug: if (ref != null && ref.equals(_referencedType)) {', '// Inserted new line to fix the bug: throw new IllegalStateException("Trying to re-set self reference; old value = " + _referencedType + ", new = " + ref);']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java', 'target_lines': [['29', '//']], 'insertions': [{'line_number': 29, 'new_lines': ['// Inserted new line to fix the bug: if (ref == null) {', '// Inserted new line to fix the bug: throw new IllegalArgumentException("Reference type cannot be null");']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java', 'target_lines': [['24', 'if (_referencedType != null) {']], 'insertions': [{'line_number': 24, 'new_lines': ['if (ref == null) {', 'throw new IllegalArgumentException("Reference type cannot be null");', '}']}], 'deletions': [], 'modifications': []}]


