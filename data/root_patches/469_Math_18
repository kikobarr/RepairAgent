###Fix:
[{'file_name': 'org/apache/commons/math3/optimization/direct/CMAESOptimizer.java', 'insertions': [{'line_number': 990, 'new_lines': ['                if (x[i] < boundaries[0][i]) {', '                    x[i] = boundaries[0][i];', '                }', '                if (x[i] > boundaries[1][i]) {', '                    x[i] = boundaries[1][i];', '                }']}]}]

###Fix:
[{'file_name': 'org/apache/commons/math3/optimization/direct/CMAESOptimizer.java', 'target_lines': [['932', '                res[i] = (x[i] - boundaries[0][i]) / diff;'], ['958', '                res[i] = diff * x[i] + boundaries[0][i];'], ['992', '                if (x[i] < 0) {'], ['995', '                if (x[i] > 1.0) {'], ['990', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'org/apache/commons/math3/optimization/direct/CMAESOptimizer.java', 'target_lines': [['932', '                res[i] = (x[i] - boundaries[0][i]) / diff;'], ['958', '                res[i] = diff * x[i] + boundaries[0][i];'], ['992', '                if (x[i] < 0) {'], ['995', '                if (x[i] > 1.0) {'], ['990', '//']], 'insertions': [{'line_number': 990, 'new_lines': ['                if (x[i] < boundaries[0][i]) {', '                    x[i] = boundaries[0][i];', '                }', '                if (x[i] > boundaries[1][i]) {', '                    x[i] = boundaries[1][i];']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math3/optimization/direct/CMAESOptimizer.java', 'target_lines': [['932', '                res[i] = (x[i] - boundaries[0][i]) / diff;'], ['958', '                res[i] = diff * x[i] + boundaries[0][i];'], ['992', '                if (x[i] < 0) {'], ['995', '                if (x[i] > 1.0) {'], ['990', '//']], 'insertions': [{'line_number': 990, 'new_lines': ['                if (x[i] < boundaries[0][i]) {', '                    x[i] = boundaries[0][i];', '                }', '                if (x[i] > boundaries[1][i]) {', '                    x[i] = boundaries[1][i];', '                }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math3/optimization/direct/CMAESOptimizer.java', 'insertions': [{'line_number': 957, 'new_lines': ['                if (x[i] < boundaries[0][i]) {', '                    x[i] = boundaries[0][i];', '                }', '                if (x[i] > boundaries[1][i]) {', '                    x[i] = boundaries[1][i];', '                }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math3/optimization/direct/CMAESOptimizer.java', 'target_lines': [['932', '                res[i] = (x[i] - boundaries[0][i]) / diff;'], ['958', '                res[i] = diff * x[i] + boundaries[0][i];'], ['992', '                if (x[i] < 0) {'], ['995', '                if (x[i] > 1.0) {'], ['990', '//']], 'insertions': [{'line_number': 990, 'new_lines': ['                if (x[i] < boundaries[0][i]) {', '                    x[i] = boundaries[0][i];', '                }', '                if (x[i] > boundaries[1][i]) {', '                    x[i] = boundaries[1][i];', '                }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math3/optimization/direct/CMAESOptimizer.java', 'insertions': [{'line_number': 990, 'new_lines': ['                if (x[i] < boundaries[0][i]) {', '                    x[i] = boundaries[0][i];', '                }', '                if (x[i] > boundaries[1][i]) {', '                    x[i] = boundaries[1][i];', '                }']}]}]

###Fix:
[{'file_name': 'org/apache/commons/math3/optimization/direct/CMAESOptimizer.java', 'target_lines': [['932', '                res[i] = (x[i] - boundaries[0][i]) / diff;'], ['958', '                res[i] = diff * x[i] + boundaries[0][i];'], ['992', '                if (x[i] < 0) {'], ['995', '                if (x[i] > 1.0) {'], ['990', '//']], 'insertions': [{'line_number': 990, 'new_lines': ['                if (x[i] < boundaries[0][i]) {', '                    x[i] = boundaries[0][i];', '                }', '                if (x[i] > boundaries[1][i]) {', '                    x[i] = boundaries[1][i];', '                }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math3/optimization/direct/CMAESOptimizer.java', 'target_lines': [['932', '                res[i] = (x[i] - boundaries[0][i]) / diff;'], ['958', '                res[i] = diff * x[i] + boundaries[0][i];'], ['992', '                if (x[i] < 0) {'], ['995', '                if (x[i] > 1.0) {'], ['990', '//']], 'insertions': [{'line_number': 990, 'new_lines': ['                if (x[i] < boundaries[0][i]) {', '                    x[i] = boundaries[0][i];', '                }', '                if (x[i] > boundaries[1][i]) {', '                    x[i] = boundaries[1][i];']}]}]

###Fix:
[]


