###Fix:
[]

###Fix:
[{'file_name': 'com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 513, 'modified_line': 'noInline(\n"var x = 1; " +\n"try { x = x + someFunction(); } catch (e) {}"\n"x = x + 1;"\n"try { x = x + someFunction(); } catch (e) {}"\n"return x;");\n}'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MaybeReachingVariableUse.java', 'target_lines': [['160', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MaybeReachingVariableUse.java', 'target_lines': [['160', '//']], 'insertions': [{'line_number': 160, 'new_lines': ['// Inserted line to fix the bug at line 160', 'return false;']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 513, 'modified_line': 'noInline(\n"var x = 1; " +\n"try { x = 1 + someFunction(); } catch (e) {}"\n"try { x = x + 1 + someFunction(); } catch (e) {}"\n"return x;");\n'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MaybeReachingVariableUse.java', 'target_lines': [['160', '//']], 'insertions': [{'line_number': 160, 'new_lines': ['// Inserted line to fix the bug at line 160', 'return false;']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 513, 'modified_line': 'noInline(\n"var x = 1; " +\n"try { x = 1 + someFunction(); } catch (e) {}"\n"try { x = x + 1 + someFunction(); } catch (e) {}"\n"return x;");\n'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MaybeReachingVariableUse.java', 'target_lines': [['160', '//']], 'insertions': [{'line_number': 160, 'new_lines': ['// Inserted line to fix the bug at line 160', 'return false;']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 513, 'modified_line': 'noInline(\n"var x = 1; " +\n"try { x = x + someFunction(); } catch (e) {}"\n"x = x + 1;"\n"try { x = x + someFunction(); } catch (e) {}"\n"return x;");\n'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/MaybeReachingVariableUse.java', 'target_lines': [['160', '//']], 'insertions': [{'line_number': 160, 'new_lines': ['// Inserted line to fix the bug at line 160', 'return false;']}], 'deletions': [], 'modifications': []}]


