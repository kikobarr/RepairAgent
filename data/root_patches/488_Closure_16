###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'insertions': [{'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['172', '    AliasedTypeNode(Node typeReference,'], ['180', '      typeReference.setString(aliasName);'], ['468', '          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));'], ['170', '//'], ['175', '//']], 'insertions': [{'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['172', '    AliasedTypeNode(Node typeReference,'], ['180', '      typeReference.setString(aliasName);'], ['468', '          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));'], ['170', '//'], ['175', '//']], 'insertions': [{'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}, {'line_number': 468, 'new_lines': ['          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex)));']}, {'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['172', '    AliasedTypeNode(Node typeReference,'], ['180', '      typeReference.setString(aliasName);'], ['468', '          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));'], ['170', '//'], ['175', '//']], 'insertions': [{'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}, {'line_number': 468, 'new_lines': ['          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));']}, {'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['172', '    AliasedTypeNode(Node typeReference,'], ['180', '      typeReference.setString(aliasName);'], ['468', '          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));'], ['170', '//'], ['175', '//']], 'insertions': [{'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}, {'line_number': 468, 'new_lines': ['          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['172', '    AliasedTypeNode(Node typeReference,'], ['180', '      typeReference.setString(aliasName);'], ['468', '          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));'], ['170', '//'], ['175', '//']], 'insertions': [{'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}, {'line_number': 468, 'new_lines': ['          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));']}, {'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['172', '    AliasedTypeNode(Node typeReference,'], ['180', '      typeReference.setString(aliasName);'], ['468', '          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));'], ['170', '//'], ['175', '//']], 'insertions': [{'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}, {'line_number': 468, 'new_lines': ['          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));']}, {'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['172', '    AliasedTypeNode(Node typeReference,'], ['180', '      typeReference.setString(aliasName);'], ['468', '          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));'], ['170', '//'], ['175', '//']], 'insertions': [{'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['172', '    AliasedTypeNode(Node typeReference,'], ['180', '      typeReference.setString(aliasName);'], ['468', '          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));'], ['170', '//'], ['175', '//']], 'insertions': [{'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}, {'line_number': 468, 'new_lines': ['          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['172', '    AliasedTypeNode(Node typeReference,'], ['180', '      typeReference.setString(aliasName);'], ['468', '          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));'], ['170', '//'], ['175', '//']], 'insertions': [{'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}, {'line_number': 468, 'new_lines': ['          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['172', '    AliasedTypeNode(Node typeReference,'], ['180', '      typeReference.setString(aliasName);'], ['468', '          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));'], ['170', '//'], ['175', '//']], 'insertions': [{'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}, {'line_number': 468, 'new_lines': ['          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['172', '    AliasedTypeNode(Node typeReference,'], ['180', '      typeReference.setString(aliasName);'], ['468', '          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));'], ['170', '//'], ['175', '//']], 'insertions': [{'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}, {'line_number': 468, 'new_lines': ['          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['172', '    AliasedTypeNode(Node typeReference,'], ['180', '      typeReference.setString(aliasName);'], ['468', '          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));'], ['170', '//'], ['175', '//']], 'insertions': [{'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}, {'line_number': 468, 'new_lines': ['          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['172', '    AliasedTypeNode(Node typeReference,'], ['180', '      typeReference.setString(aliasName);'], ['468', '          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));'], ['170', '//'], ['175', '//']], 'insertions': [{'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}, {'line_number': 468, 'new_lines': ['          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['172', '    AliasedTypeNode(Node typeReference,'], ['180', '      typeReference.setString(aliasName);'], ['468', '          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));'], ['170', '//'], ['175', '//']], 'insertions': [{'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}, {'line_number': 468, 'new_lines': ['          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['172', '    AliasedTypeNode(Node typeReference,'], ['180', '      typeReference.setString(aliasName);'], ['468', '          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));'], ['170', '//'], ['175', '//']], 'insertions': [{'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}, {'line_number': 468, 'new_lines': ['          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['172', '    AliasedTypeNode(Node typeReference,'], ['180', '      typeReference.setString(aliasName);'], ['468', '          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));'], ['170', '//'], ['175', '//']], 'insertions': [{'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}, {'line_number': 468, 'new_lines': ['          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'insertions': [{'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}, {'line_number': 468, 'new_lines': ['          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'insertions': [{'line_number': 468, 'new_lines': ['          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'target_lines': [['172', '    AliasedTypeNode(Node typeReference,'], ['180', '      typeReference.setString(aliasName);'], ['468', '          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));'], ['170', '//'], ['175', '//']], 'insertions': [{'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}, {'line_number': 468, 'new_lines': ['          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex));']}], 'deletions': [], 'modifications': []}]

###Fix:
[]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/ScopedAliases.java', 'insertions': [{'line_number': 170, 'new_lines': ['    // Fixing bug by adding new lines for AliasedTypeNode constructor', '    AliasedTypeNode(Node typeReference, String aliasName) {', '      this.typeReference = typeReference;', '      this.aliasName = aliasName;', '    }']}, {'line_number': 175, 'new_lines': ['    // Fixing bug by adding new lines for applyAlias method', '    public void applyAlias() {', '      typeReference.setString(aliasName);', '    }']}], 'deletions': [], 'modifications': []}]


