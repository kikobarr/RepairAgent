###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java', 'insertions': [{'line_number': 389, 'new_lines': ['      if (right == null) {', '        right = Node.newString("");', '      }']}, {'line_number': 390, 'new_lines': ['      if (joinString == null) {', '        joinString = ",";', '      }']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java', 'target_lines': [['376', '      if (!NodeUtil.isImmutableValue(right)) {'], ['389', '//'], ['390', '//']], 'insertions': [{'line_number': 389, 'new_lines': ['      if (right == null) {', '        right = Node.newString("");', '      }']}, {'line_number': 390, 'new_lines': ['      if (joinString == null) {', '        joinString = ",";', '      }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java', 'target_lines': [['376', '      if (!NodeUtil.isImmutableValue(right)) {'], ['389', '//'], ['390', '//']], 'insertions': [{'line_number': 389, 'new_lines': ['      if (right == null) {', '        right = Node.newString("");', '      }']}, {'line_number': 390, 'new_lines': ['      if (joinString == null) {', '        joinString = ",";', '      ']}, {'line_number': 376, 'new_lines': ['      if (right == null) {', '        right = Node.newString("");', '      }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java', 'insertions': [{'line_number': 389, 'new_lines': ['      if (right == null) {', '        right = Node.newString("");', '      }']}, {'line_number': 390, 'new_lines': ['      if (joinString == null) {', '        joinString = ",";', '      }']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java', 'target_lines': [['376', '      if (!NodeUtil.isImmutableValue(right)) {'], ['389', '//'], ['390', '//']], 'insertions': [{'line_number': 389, 'new_lines': ['      if (right == null) {', '        right = Node.newString("");', '      }']}, {'line_number': 390, 'new_lines': ['      if (joinString == null) {', '        joinString = ",";', '      ']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java', 'target_lines': [['376', '      if (!NodeUtil.isImmutableValue(right)) {'], ['389', '//'], ['390', '//']], 'insertions': [{'line_number': 376, 'new_lines': ['      if (right == null) {', '        right = Node.newString("");', '      }']}, {'line_number': 389, 'new_lines': ['      if (right == null) {', '        right = Node.newString("");', '      }']}, {'line_number': 390, 'new_lines': ['      if (joinString == null) {', '        joinString = ",";', '      ']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java', 'insertions': [{'line_number': 389, 'new_lines': ['      if (right == null) {', '        right = Node.newString("");', '      }']}, {'line_number': 390, 'new_lines': ['      if (joinString == null) {', '        joinString = ",";', '      ']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java', 'target_lines': [['376', '      if (!NodeUtil.isImmutableValue(right)) {'], ['389', '//'], ['390', '//']], 'insertions': [{'line_number': 389, 'new_lines': ['      if (right == null) {', '        right = Node.newString("");', '      }']}, {'line_number': 390, 'new_lines': ['      if (joinString == null) {', '        joinString = ",";', '      ']}, {'line_number': 376, 'new_lines': ['      if (right == null) {', '        right = Node.newString("");', '      }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java', 'insertions': [{'line_number': 389, 'new_lines': ['      if (right == null) {', '        right = Node.newString("");', '      }']}, {'line_number': 390, 'new_lines': ['      if (joinString == null) {', '        joinString = ",";', '      ']}], 'deletions': [376], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java', 'insertions': [{'line_number': 389, 'new_lines': ['      if (right == null) {', '        right = Node.newString("");', '      }']}, {'line_number': 390, 'new_lines': ['      if (joinString == null) {', '        joinString = ",";', '      ']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java', 'target_lines': [['376', '      if (!NodeUtil.isImmutableValue(right)) {'], ['389', '//'], ['390', '//']], 'insertions': [{'line_number': 389, 'new_lines': ['      if (right == null) {', '        right = Node.newString("");', '      }']}, {'line_number': 390, 'new_lines': ['      if (joinString == null) {', '        joinString = ",";', '      ']}, {'line_number': 376, 'new_lines': ['      if (right == null) {', '        right = Node.newString("");', '      }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java', 'insertions': [{'line_number': 389, 'new_lines': ['      if (right == null) {', '        right = Node.newString("");', '      }']}, {'line_number': 390, 'new_lines': ['      if (joinString == null) {', '        joinString = ",";', '      }']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java', 'target_lines': [['376', '      if (!NodeUtil.isImmutableValue(right)) {'], ['389', '//'], ['390', '//']], 'insertions': [{'line_number': 389, 'new_lines': ['      if (right == null) {', '        right = Node.newString("");', '      }']}, {'line_number': 390, 'new_lines': ['      if (joinString == null) {', '        joinString = ",";', '      }']}, {'line_number': 376, 'new_lines': ['      if (right == null) {', '        right = Node.newString("");', '      }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java', 'modifications': [{'line_number': 389, 'modified_line': '      if (right == null || !NodeUtil.isImmutableValue(right)) {'}, {'line_number': 390, 'modified_line': '      if (joinString == null || !NodeUtil.isImmutableValue(joinString)) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java', 'target_lines': [['376', '      if (!NodeUtil.isImmutableValue(right)) {'], ['389', '//'], ['390', '//']], 'insertions': [{'line_number': 389, 'new_lines': ['      if (right == null) {', '        right = Node.newString("");', '      }']}, {'line_number': 390, 'new_lines': ['      if (joinString == null) {', '        joinString = ",";', '      ']}, {'line_number': 376, 'new_lines': ['      if (right == null) {', '        right = Node.newString("");', '      }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java', 'target_lines': [['376', '      if (!NodeUtil.isImmutableValue(right)) {'], ['389', '//'], ['390', '//']], 'insertions': [{'line_number': 389, 'new_lines': ['      if (right == null || !NodeUtil.isImmutableValue(right)) {']}, {'line_number': 390, 'new_lines': ['      if (joinString == null || !NodeUtil.isImmutableValue(joinString)) {']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java', 'target_lines': [['376', '      if (!NodeUtil.isImmutableValue(right)) {'], ['389', '//'], ['390', '//']], 'insertions': [{'line_number': 389, 'new_lines': ['      if (right == null || !NodeUtil.isImmutableValue(right)) {']}, {'line_number': 390, 'new_lines': ['      if (joinString == null || !NodeUtil.isImmutableValue(joinString)) {']}], 'deletions': [], 'modifications': []}]


