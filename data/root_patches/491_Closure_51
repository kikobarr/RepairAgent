###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeConsumer.java', 'insertions': [{'line_number': 259, 'new_lines': ['    add(Double.toString(x));']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeConsumer.java', 'target_lines': [['241', '    if ((long) x == x) {'], ['259', '//'], ['260', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeConsumer.java', 'target_lines': [['241', '    if ((long) x == x) {'], ['259', '//'], ['260', '//']], 'insertions': [{'line_number': 259, 'new_lines': ['    add(Double.toString(x));']}, {'line_number': 260, 'new_lines': ['    }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeConsumer.java', 'target_lines': [['241', '    if ((long) x == x) {'], ['259', '//'], ['260', '//']], 'insertions': [{'line_number': 259, 'new_lines': ['    add(Double.toString(x));']}, {'line_number': 260, 'new_lines': ['    }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeConsumer.java', 'insertions': [{'line_number': 259, 'new_lines': ['    add(Double.toString(x));']}, {'line_number': 241, 'new_lines': ['    if (Double.compare((double) x, x) == 0) {']}, {'line_number': 260, 'new_lines': ['    }']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeConsumer.java', 'insertions': [{'line_number': 241, 'new_lines': ['    if (Double.compare((double) x, x) == 0) {']}, {'line_number': 259, 'new_lines': ['    add(Double.toString(x));']}, {'line_number': 260, 'new_lines': ['    }']}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeConsumer.java', 'insertions': [{'line_number': 241, 'new_lines': ['    if (Double.compare((double) x, x) == 0) {']}, {'line_number': 259, 'new_lines': ['    add(Double.toString(x));']}, {'line_number': 260, 'new_lines': ['    }']}], 'deletions': [241, 260]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeConsumer.java', 'modifications': [{'line_number': 241, 'modified_line': '    if (Double.compare((double) x, x) == 0) {'}, {'line_number': 259, 'modified_line': '    add(Double.toString(x));'}, {'line_number': 260, 'modified_line': '    }'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeConsumer.java', 'modifications': [{'line_number': 241, 'modified_line': '    if (Double.compare(x, (double) x) == 0) {'}, {'line_number': 259, 'modified_line': '    add(Double.toString(x));'}, {'line_number': 260, 'modified_line': '    }'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeConsumer.java', 'modifications': [{'line_number': 241, 'modified_line': '    if (Double.compare(Math.abs(x), Math.abs((double) x)) == 0) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeConsumer.java', 'target_lines': [['241', '    if ((long) x == x) {'], ['259', '//'], ['260', '//']], 'insertions': [{'line_number': 259, 'new_lines': ['    add(Double.toString(x));']}, {'line_number': 260, 'new_lines': ['    }']}], 'deletions': [], 'modifications': [{'line_number': 241, 'modified_line': '    if (Double.compare(Math.abs(x), Math.abs((double) x)) == 0) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeConsumer.java', 'insertions': [{'line_number': 259, 'new_lines': ['    add(Double.toString(x));']}, {'line_number': 260, 'new_lines': ['    }']}], 'deletions': [241], 'modifications': [{'line_number': 241, 'modified_line': '    if (Double.compare(Math.abs(x), Math.abs((double) x)) == 0) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeConsumer.java', 'modifications': [{'line_number': 241, 'modified_line': '    if (Double.compare(x, (double) x) == 0) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeConsumer.java', 'target_lines': [['241', '    if ((long) x == x) {'], ['259', '//'], ['260', '//']], 'insertions': [{'line_number': 259, 'new_lines': ['    add(Double.toString(x));']}, {'line_number': 260, 'new_lines': ['    }']}], 'deletions': [], 'modifications': [{'line_number': 241, 'modified_line': '    if (Double.compare(x, (double) x) == 0) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeConsumer.java', 'insertions': [{'line_number': 241, 'new_lines': ['    if (Double.compare(x, (double) x) == 0) {']}, {'line_number': 259, 'new_lines': ['    add(Double.toString(x));']}, {'line_number': 260, 'new_lines': ['    }']}], 'deletions': [241], 'modifications': []}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeConsumer.java', 'insertions': [{'line_number': 241, 'new_lines': ['    if (Double.compare(Math.abs(x), Math.abs((double) x)) == 0) {']}, {'line_number': 259, 'new_lines': ['    add(Double.toString(x));']}, {'line_number': 260, 'new_lines': ['    }']}], 'deletions': [241], 'modifications': []}]

###Fix:
[]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeConsumer.java', 'modifications': [{'line_number': 241, 'modified_line': '    if (Double.compare(Math.abs(x), Math.abs((double) x)) == 0) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeConsumer.java', 'modifications': [{'line_number': 241, 'modified_line': '    if (Double.compare(Math.abs(x), Math.abs((double) x)) == 0) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeConsumer.java', 'target_lines': [['241', '    if ((long) x == x) {'], ['259', '//'], ['260', '//']], 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 241, 'modified_line': '    if (Double.compare(Math.abs(x), Math.abs((double) x)) == 0) {'}, {'line_number': 259, 'modified_line': '    add(Double.toString(x));'}, {'line_number': 260, 'modified_line': '    }'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeConsumer.java', 'modifications': [{'line_number': 241, 'modified_line': '    if (Double.compare(x, (double) x) == 0) {'}]}]

###Fix:
[{'file_name': 'com/google/javascript/jscomp/CodeConsumer.java', 'target_lines': [['241', '    if ((long) x == x) {'], ['259', '//'], ['260', '//']], 'insertions': [{'line_number': 259, 'new_lines': ['    add(Double.toString(x));']}, {'line_number': 260, 'new_lines': ['    }']}], 'deletions': [241], 'modifications': [{'line_number': 241, 'modified_line': '    if (Double.compare(x, (double) x) == 0) {'}]}]


