###Fix:
[{'file_name': 'org/apache/commons/lang3/math/NumberUtils.java', 'insertions': [{'line_number': 1387, 'new_lines': ['        if (str.endsWith(".")) {', '            str = str.substring(0, str.length() - 1);', '        }']}]}]

###Fix:
[{'file_name': 'org/apache/commons/lang3/math/NumberUtils.java', 'target_lines': [['491', '        if (!Character.isDigit(lastChar)) {'], ['1387', '//']], 'insertions': [{'line_number': 491, 'new_lines': ["        if (!Character.isDigit(lastChar) && lastChar != '.') {", '            throw new NumberFormatException(str + " is not a valid number.");', '        }']}, {'line_number': 1387, 'new_lines': ['        if (str.endsWith(".")) {', '            str = str.substring(0, str.length() - 1);', '        }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/lang3/math/NumberUtils.java', 'insertions': [{'line_number': 1387, 'new_lines': ['        if (str.endsWith(".")) {', '            str = str.substring(0, str.length() - 1);', '        }']}]}]

###Fix:
[{'file_name': 'org/apache/commons/lang3/math/NumberUtils.java', 'target_lines': [['491', '        if (!Character.isDigit(lastChar)) {'], ['1387', '//']], 'insertions': [{'line_number': 491, 'new_lines': ["        if (!Character.isDigit(lastChar) && lastChar != '.') {", '            throw new NumberFormatException(str + " is not a valid number.");', '        }']}, {'line_number': 1387, 'new_lines': ['        if (str.endsWith(".")) {', '            str = str.substring(0, str.length() - 1);', '        }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/lang3/math/NumberUtils.java', 'insertions': [{'line_number': 1387, 'new_lines': ['        if (str.endsWith(".")) {', '            str = str.substring(0, str.length() - 1);', '        }']}]}]

###Fix:
[{'file_name': 'org/apache/commons/lang3/math/NumberUtils.java', 'target_lines': [['491', '        if (!Character.isDigit(lastChar)) {'], ['1387', '//']], 'insertions': [{'line_number': 491, 'new_lines': ["        if (!Character.isDigit(lastChar) && lastChar != '.') {", '            throw new NumberFormatException(str + " is not a valid number.");', '        }']}, {'line_number': 1387, 'new_lines': ['        if (str.endsWith(".")) {', '            str = str.substring(0, str.length() - 1);', '        }']}], 'deletions': [], 'modifications': []}]

###Fix:
[]

###Fix:
[]

###Fix:
[{'file_name': 'org/apache/commons/lang3/math/NumberUtils.java', 'insertions': [{'line_number': 1387, 'new_lines': ['        if (str.endsWith(".")) {', '            str = str.substring(0, str.length() - 1);', '        }', '        if (str.endsWith(".0")) {', '            str = str.substring(0, str.length() - 2);', '        }']}]}]

###Fix:
[{'file_name': 'org/apache/commons/lang3/math/NumberUtils.java', 'target_lines': [['491', '        if (!Character.isDigit(lastChar)) {'], ['1387', '//']], 'insertions': [{'line_number': 491, 'new_lines': ["        if (!Character.isDigit(lastChar) && lastChar != '.') {", '            throw new NumberFormatException(str + " is not a valid number.");', '        }']}, {'line_number': 1387, 'new_lines': ['        if (str.endsWith(".")) {', '            str = str.substring(0, str.length() - 1);', '        }', '        if (str.endsWith(".0")) {', '            str = str.substring(0, str.length() - 2);', '        }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/lang3/math/NumberUtils.java', 'insertions': [{'line_number': 1387, 'new_lines': ['        if (str.endsWith(".")) {', '            str = str.substring(0, str.length() - 1);', '        }']}]}]

###Fix:
[{'file_name': 'org/apache/commons/lang3/math/NumberUtils.java', 'target_lines': [['491', '        if (!Character.isDigit(lastChar)) {'], ['1387', '//']], 'insertions': [{'line_number': 491, 'new_lines': ["        if (!Character.isDigit(lastChar) && lastChar != '.') {", '            throw new NumberFormatException(str + " is not a valid number.");', '        }']}, {'line_number': 1387, 'new_lines': ['        if (str.endsWith(".")) {', '            str = str.substring(0, str.length() - 1);', '        }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/lang3/math/NumberUtils.java', 'insertions': [{'line_number': 1387, 'new_lines': ['        if (str.endsWith(".")) {', '            str = str.substring(0, str.length() - 1);', '        }', '        if (str.endsWith(".0")) {', '            str = str.substring(0, str.length() - 2);', '        }']}]}]

###Fix:
[{'file_name': 'org/apache/commons/lang3/math/NumberUtils.java', 'target_lines': [['491', '        if (!Character.isDigit(lastChar)) {'], ['1387', '//']], 'insertions': [{'line_number': 491, 'new_lines': ["        if (!Character.isDigit(lastChar) && lastChar != '.') {", '            throw new NumberFormatException(str + " is not a valid number.");', '        }']}, {'line_number': 1387, 'new_lines': ['        if (str.endsWith(".")) {', '            str = str.substring(0, str.length() - 1);', '        }', '        if (str.endsWith(".0")) {', '            str = str.substring(0, str.length() - 2);', '        }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/lang3/math/NumberUtils.java', 'insertions': [{'line_number': 491, 'new_lines': ["        if (!Character.isDigit(lastChar) && lastChar != '.') {", '            throw new NumberFormatException(str + " is not a valid number.");', '        }']}]}]


