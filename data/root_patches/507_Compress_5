###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 239, 'modified_line': 'if (read == 0 && inf.finished() && !inf.truncated()) {'}, {'line_number': 240, 'modified_line': 'return -1;'}]}]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 239, 'modified_line': 'if (read == 0 && inf.finished() && !inf.truncated() && !inf.needsInput()) {'}, {'line_number': 240, 'modified_line': 'return -1;'}]}]

###Fix:
[]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 239, 'modified_line': 'if (read == 0 && inf.finished() && !inf.truncated() && !inf.needsInput()) {'}, {'line_number': 240, 'modified_line': 'return -1;'}]}]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 239, 'modified_line': 'if (read == 0 && inf.finished() && !inf.truncated() && !inf.needsInput()) {'}, {'line_number': 240, 'modified_line': 'return -1;'}]}]

###Fix:
[]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 239, 'modified_line': 'if (read == 0 && inf.finished() && !inf.truncated() && !inf.needsInput()) {'}, {'line_number': 240, 'modified_line': 'return -1;'}]}]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 239, 'modified_line': 'if (read == 0 && inf.finished() && !inf.truncated() && !inf.needsInput() && !inf.needsDictionary()) {'}, {'line_number': 240, 'modified_line': 'return -1;'}]}]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 239, 'modified_line': 'if (read == 0 && inf.finished() && !inf.truncated() && !inf.needsInput() && !inf.needsDictionary() && !inf.needsInput()) {'}, {'line_number': 240, 'modified_line': 'return -1;'}]}]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 239, 'modified_line': 'if (read == 0 && inf.finished() && !inf.truncated() && !inf.needsInput() && !inf.needsDictionary() && !inf.needsInput() && !inf.needsInput()) {'}, {'line_number': 240, 'modified_line': 'return -1;'}]}]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 239, 'modified_line': 'if (read == 0 && inf.finished() && !inf.truncated() && !inf.needsInput() && !inf.needsDictionary() && !inf.needsInput() && !inf.needsInput() && !inf.needsInput()) {'}, {'line_number': 240, 'modified_line': 'return -1;'}]}]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 239, 'modified_line': 'if (read == 0 && inf.finished() && !inf.truncated() && !inf.needsInput() && !inf.needsDictionary() && !inf.needsInput() && !inf.needsInput() && !inf.needsInput() && !inf.needsInput()) {'}, {'line_number': 240, 'modified_line': 'return -1;'}]}]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 239, 'modified_line': 'if (read == 0 && inf.finished() && !inf.truncated() && !inf.needsInput() && !inf.needsDictionary() && !inf.needsInput() && !inf.needsInput() && !inf.needsInput() && !inf.needsInput() && !inf.needsInput()) {'}, {'line_number': 240, 'modified_line': 'return -1;'}]}]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 239, 'modified_line': 'if (read == 0 && inf.finished() && !inf.truncated() && !inf.needsInput() && !inf.needsDictionary() && !inf.needsInput() && !inf.needsInput() && !inf.needsInput() && !inf.needsInput() && !inf.needsInput() && !inf.needsInput()) {'}, {'line_number': 240, 'modified_line': 'return -1;'}]}]

###Fix:
[{'file_name': 'org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 239, 'modified_line': 'if (read == 0 && inf.finished() && !inf.truncated() && !inf.needsInput() && !inf.needsDictionary() && !inf.needsInput() && !inf.needsInput() && !inf.needsInput() && !inf.needsInput() && !inf.needsInput() && !inf.needsInput() && !inf.needsInput()) {'}, {'line_number': 240, 'modified_line': 'return -1;'}]}]


