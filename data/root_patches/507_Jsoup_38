###Fix:
[]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilderState.java', 'insertions': [{'line_number': 455, 'new_lines': ['if (name.equals("image") && tb.inSpecificScope("svg")) {', 'return tb.process(startTag.name("img")); // change <image> to <img>, unless in svg']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilderState.java', 'target_lines': [['455', '//'], ['456', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilderState.java', 'target_lines': [['455', '//'], ['456', '//']], 'insertions': [{'line_number': 455, 'new_lines': ['if (name.equals("image") && tb.inSpecificScope("svg")) {']}, {'line_number': 456, 'new_lines': ['return tb.process(startTag.name("img")); // change <image> to <img>, unless in svg']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilderState.java', 'insertions': [{'line_number': 455, 'new_lines': ['if (name.equals("image") && tb.inSpecificScope("svg")) {']}, {'line_number': 456, 'new_lines': ['return tb.process(startTag.name("img")); // change <image> to <img>, unless in svg']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilderState.java', 'insertions': [{'line_number': 455, 'new_lines': ['if (name.equals("image") && !tb.inSpecificScope("svg")) {']}, {'line_number': 456, 'new_lines': ['return tb.process(startTag.name("img")); // change <image> to <img>, unless in svg']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilderState.java', 'insertions': [{'line_number': 455, 'new_lines': ['if (name.equals("image") && !tb.inSpecificScope("svg")) {', 'return tb.process(startTag.name("img")); // change <image> to <img>, unless in svg']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilderState.java', 'target_lines': [['455', '//'], ['456', '//']], 'insertions': [{'line_number': 455, 'new_lines': ['if (name.equals("image") && !tb.inSpecificScope("svg")) {']}, {'line_number': 456, 'new_lines': ['return tb.process(startTag.name("img")); // change <image> to <img>, unless in svg']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilderState.java', 'insertions': [{'line_number': 455, 'new_lines': ['if (name.equals("image") && !tb.inSpecificScope("svg")) {']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilderState.java', 'target_lines': [['455', '//'], ['456', '//']], 'insertions': [{'line_number': 455, 'new_lines': ['if (name.equals("image") && !tb.inSpecificScope("svg")) {']}, {'line_number': 456, 'new_lines': ['return tb.process(startTag.name("img")); // change <image> to <img>, unless in svg']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilderState.java', 'insertions': [{'line_number': 455, 'new_lines': ['if (name.equals("image") && !tb.inSpecificScope("svg")) {', 'return tb.process(startTag.name("img")); // change <image> to <img>, unless in svg']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilderState.java', 'target_lines': [['455', '//'], ['456', '//']], 'insertions': [{'line_number': 455, 'new_lines': ['if (name.equals("image") && !tb.inSpecificScope("svg")) {']}, {'line_number': 456, 'new_lines': ['return tb.process(startTag.name("img")); // change <image> to <img>, unless in svg']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilderState.java', 'insertions': [{'line_number': 455, 'new_lines': ['if (name.equals("image") && !tb.inSpecificScope("svg")) {', 'return tb.process(startTag.name("img")); // change <image> to <img>, unless in svg']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilderState.java', 'target_lines': [['455', '//'], ['456', '//']], 'insertions': [{'line_number': 455, 'new_lines': ['if (name.equals("image") && !tb.inSpecificScope("svg")) {', 'return tb.process(startTag.name("img")); // change <image> to <img>, unless in svg']}, {'line_number': 456, 'new_lines': ['if (name.equals("isindex")) {', 'return tb.process(startTag.name("input").selfClosing(true));']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilderState.java', 'insertions': [{'line_number': 455, 'new_lines': ['if (name.equals("image") && !tb.inSpecificScope("svg")) {', 'return tb.process(startTag.name("img")); // change <image> to <img>, unless in svg']}]}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilderState.java', 'target_lines': [['455', '//'], ['456', '//']], 'insertions': [{'line_number': 455, 'new_lines': ['if (name.equals("image") && !tb.inSpecificScope("svg")) {']}, {'line_number': 456, 'new_lines': ['return tb.process(startTag.name("img")); // change <image> to <img>, unless in svg']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/jsoup/parser/HtmlTreeBuilderState.java', 'insertions': [{'line_number': 455, 'new_lines': ['if (name.equals("image") && !tb.inSpecificScope("svg")) {']}, {'line_number': 456, 'new_lines': ['return tb.process(startTag.name("img")); // change <image> to <img>, unless in svg']}]}]


