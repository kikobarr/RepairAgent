###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");', '            }']}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': [{'line_number': 89, 'new_lines': ['        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {']}, {'line_number': 90, 'new_lines': ['            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                    "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}, {'line_number': 98, 'new_lines': ['        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {', '            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,', '                    "need JSON String that contains type id (for subtype of " + baseTypeName() + ")");']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': [{'line_number': 89, 'new_lines': ['        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {']}, {'line_number': 90, 'new_lines': ['            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                    "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}, {'line_number': 91, 'new_lines': ['            // Additional handling for expected token FIELD_NAME', '            if (p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,', '                        "need JSON String that contains type id (for subtype of " + baseTypeName() + ")");']}, {'line_number': 92, 'new_lines': ['        }']}, {'line_number': 98, 'new_lines': ['        // Additional handling for expected token FIELD_NAME', '        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {', '            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,', '                    "need JSON String that contains type id (for subtype of " + baseTypeName() + ")");']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");', '            }']}]}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}, {'line_number': 98, 'new_lines': ['        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {', '            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,', '                    "need JSON String that contains type id (for subtype of " + baseTypeName() + ")");']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}, {'line_number': 98, 'new_lines': ['        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {', '            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,', '                    "need JSON String that contains type id (for subtype of " + baseTypeName() + ")");']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}, {'line_number': 98, 'new_lines': ['        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {', '            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,', '                    "need JSON String that contains type id (for subtype of " + baseTypeName() + ")");']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}, {'line_number': 98, 'new_lines': ['        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {', '            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,', '                    "need JSON String that contains type id (for subtype of " + baseTypeName() + ")");']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}, {'line_number': 98, 'new_lines': ['        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {', '            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,', '                    "need JSON String that contains type id (for subtype of " + baseTypeName() + ")");']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}, {'line_number': 98, 'new_lines': ['        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {', '            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,', '                    "need JSON String that contains type id (for subtype of " + baseTypeName() + ")");']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}, {'line_number': 98, 'new_lines': ['        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {', '            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,', '                    "need JSON String that contains type id (for subtype of " + baseTypeName() + ")");']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}, {'line_number': 98, 'new_lines': ['        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {', '            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,', '                    "need JSON String that contains type id (for subtype of " + baseTypeName() + ")");']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}, {'line_number': 98, 'new_lines': ['        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {', '            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,', '                    "need JSON String that contains type id (for subtype of " + baseTypeName() + ")");']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}, {'line_number': 98, 'new_lines': ['        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {', '            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,', '                    "need JSON String that contains type id (for subtype of " + baseTypeName() + ")");']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}, {'line_number': 98, 'new_lines': ['        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {', '            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,', '                    "need JSON String that contains type id (for subtype of " + baseTypeName() + ")");']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}, {'line_number': 98, 'new_lines': ['        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {', '            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,', '                    "need JSON String that contains type id (for subtype of " + baseTypeName() + ")");']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}, {'line_number': 98, 'new_lines': ['        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {', '            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,', '                    "need JSON String that contains type id (for subtype of " + baseTypeName() + ")");']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}, {'line_number': 98, 'new_lines': ['        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {', '            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,', '                    "need JSON String that contains type id (for subtype of " + baseTypeName() + ")");']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}, {'line_number': 98, 'new_lines': ['        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {', '            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,', '                    "need JSON String that contains type id (for subtype of " + baseTypeName() + ")");']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}, {'line_number': 98, 'new_lines': ['        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {', '            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,', '                    "need JSON String that contains type id (for subtype of " + baseTypeName() + ")");']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}, {'line_number': 98, 'new_lines': ['        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {', '            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,', '                    "need JSON String that contains type id (for subtype of " + baseTypeName() + ")");']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}, {'line_number': 98, 'new_lines': ['        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {', '            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,', '                    "need JSON String that contains type id (for subtype of " + baseTypeName() + ")");']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}, {'line_number': 98, 'new_lines': ['        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {', '            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,', '                    "need JSON String that contains type id (for subtype of " + baseTypeName() + ")");']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java', 'target_lines': [['89', '        if (p.getCurrentToken() != JsonToken.START_OBJECT) {'], ['90', '            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,'], ['91', '                    "need JSON Object to contain As.WRAPPER_OBJECT type information for class "+baseTypeName());'], ['92', '        }'], ['98', '//']], 'insertions': [{'line_number': 92, 'new_lines': ['            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {', '                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,', '                        "need JSON Object or String that contains type id (for subtype of " + baseTypeName() + ")");']}, {'line_number': 98, 'new_lines': ['        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {', '            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,', '                    "need JSON String that contains type id (for subtype of " + baseTypeName() + ")");']}], 'deletions': [], 'modifications': []}]


