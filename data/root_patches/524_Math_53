###Fix:
[{'file_name': 'org/apache/commons/math/complex/ComplexTest.java', 'insertions': [], 'deletions': [], 'modifications': [{'line_number': 116, 'modified_line': '        Assert.assertTrue(Double.isNaN(w.getReal()));'}]}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'target_lines': [['153', '//']], 'insertions': [{'line_number': 153, 'new_lines': ['        if (Double.isNaN(real) || Double.isNaN(imaginary)) {', '            return NaN;', '        }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'insertions': [{'line_number': 153, 'new_lines': ['        if (Double.isNaN(real) || Double.isNaN(imaginary)) {', '            return NaN;', '        }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'insertions': [{'line_number': 153, 'new_lines': ['        if (Double.isNaN(real) || Double.isNaN(imaginary)) {', '            return NaN;', '        }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'insertions': [{'line_number': 153, 'new_lines': ['        if (Double.isNaN(real) || Double.isNaN(imaginary)) {', '            return NaN;', '        }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'insertions': [{'line_number': 153, 'new_lines': ['        if (Double.isNaN(real) || Double.isNaN(imaginary)) {', '            return NaN;', '        }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'insertions': [{'line_number': 153, 'new_lines': ['        if (Double.isNaN(real) || Double.isNaN(imaginary)) {', '            return NaN;', '        }']}], 'deletions': [], 'modifications': []}]

###Fix:
[{'file_name': 'org/apache/commons/math/complex/Complex.java', 'insertions': [{'line_number': 153, 'new_lines': ['        if (Double.isNaN(real) || Double.isNaN(imaginary)) {', '            return NaN;', '        }']}], 'deletions': [], 'modifications': []}]


